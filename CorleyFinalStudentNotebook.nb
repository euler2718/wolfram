(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2318855,      45548]
NotebookOptionsPosition[   2029850,      40680]
NotebookOutlinePosition[   2313859,      45387]
CellTagsIndexPosition[   2313816,      45384]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Essay Grading Assistant", "Title",
 CellChangeTimes->{{3.5496241220858183`*^9, 3.5496241316698093`*^9}, {
  3.549818710673188*^9, 3.5498187115316067`*^9}, {3.5498190276432457`*^9, 
  3.549819032858705*^9}, {3.6768451096765337`*^9, 3.6768451161266813`*^9}}],

Cell["Name: Corley, John", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.676845119836205*^9, 3.6768451219322777`*^9}}],

Cell["Instructor: Rowland, Eric", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.676845130485618*^9, 3.676845135894054*^9}}],

Cell[CellGroupData[{

Cell["Homework Solution", "Section",
 CellChangeTimes->{{3.549818919239108*^9, 3.549818922359429*^9}}],

Cell["< Exploration Taxonomy Project >", "Text",
 CellChangeTimes->{{3.549818929814942*^9, 3.5498189721363163`*^9}, {
  3.611945768045025*^9, 3.611945771780839*^9}, {3.676845339428294*^9, 
  3.676845346434183*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Project Description", "Section",
 CellChangeTimes->{{3.549542031484871*^9, 3.5495420379109707`*^9}}],

Cell["\<\
Essay Grading Assistant is meant to solve the problem a rigorous 23-point \
rubric might cause.  It can be cumbersome, especially for someone not heavily \
trained to grade writing prompts.  Toward the goal of consistent grading, the \
EG Assistant takes in a rubric, and evaluates writing performance based on a \
dataset of actual essays and scores from teachers within the district.  \
Additionally it provides relevant statistical data and readability indices.  \
Perhaps most importantly, the teacher is still an integral part of the \
evaluation process if they want to be, by making adjustments along the way.\
\>", "Text",
 CellChangeTimes->{
  3.549545559305146*^9, {3.549545608589827*^9, 3.549545815029195*^9}, {
   3.5498187372950573`*^9, 3.549818747744714*^9}, {3.549818974030775*^9, 
   3.549818975064218*^9}, {3.676807610776842*^9, 3.6768076172113647`*^9}, {
   3.676872141535932*^9, 3.676872434977895*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.549542047850762*^9, 3.549542050840076*^9}, 
   3.549542327097245*^9}],

Cell[CellGroupData[{

Cell["Vocab List (most popular words)", "Subsection",
 CellChangeTimes->{{3.676847973487541*^9, 3.67684799420512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dclist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<A\>\"", ",", "\"\<a\>\"", ",", "\"\<able\>\"", ",", "\"\<aboard\>\"",
      ",", "\"\<about\>\"", ",", "\"\<above\>\"", ",", "\"\<absent\>\"", ",", 
     "\"\<accept\>\"", ",", "\"\<accident\>\"", ",", "\"\<account\>\"", ",", 
     "\"\<ache\>\"", ",", "\"\<aching\>\"", ",", "\"\<acorn\>\"", ",", 
     "\"\<acre\>\"", ",", "\"\<across\>\"", ",", "\"\<act\>\"", ",", 
     "\"\<acts\>\"", ",", "\"\<add\>\"", ",", "\"\<address\>\"", ",", 
     "\"\<admire\>\"", ",", "\"\<adventure\>\"", ",", "\"\<afar\>\"", ",", 
     "\"\<afraid\>\"", ",", "\"\<after\>\"", ",", "\"\<afternoon\>\"", ",", 
     "\"\<afterward\>\"", ",", "\"\<afterwards\>\"", ",", "\"\<again\>\"", 
     ",", "\"\<against\>\"", ",", "\"\<age\>\"", ",", "\"\<aged\>\"", ",", 
     "\"\<ago\>\"", ",", "\"\<agree\>\"", ",", "\"\<ah\>\"", ",", 
     "\"\<ahead\>\"", ",", "\"\<aid\>\"", ",", "\"\<aim\>\"", ",", 
     "\"\<air\>\"", ",", "\"\<airfield\>\"", ",", "\"\<airplane\>\"", ",", 
     "\"\<airport\>\"", ",", "\"\<airship\>\"", ",", "\"\<airy\>\"", ",", 
     "\"\<alarm\>\"", ",", "\"\<alike\>\"", ",", "\"\<alive\>\"", ",", 
     "\"\<all\>\"", ",", "\"\<alley\>\"", ",", "\"\<alligator\>\"", ",", 
     "\"\<allow\>\"", ",", "\"\<almost\>\"", ",", "\"\<alone\>\"", ",", 
     "\"\<along\>\"", ",", "\"\<aloud\>\"", ",", "\"\<already\>\"", ",", 
     "\"\<also\>\"", ",", "\"\<always\>\"", ",", "\"\<am\>\"", ",", 
     "\"\<America\>\"", ",", "\"\<American\>\"", ",", "\"\<among\>\"", ",", 
     "\"\<amount\>\"", ",", "\"\<an\>\"", ",", "\"\<and\>\"", ",", 
     "\"\<angel\>\"", ",", "\"\<anger\>\"", ",", "\"\<angry\>\"", ",", 
     "\"\<animal\>\"", ",", "\"\<another\>\"", ",", "\"\<answer\>\"", ",", 
     "\"\<ant\>\"", ",", "\"\<any\>\"", ",", "\"\<anybody\>\"", ",", 
     "\"\<anyhow\>\"", ",", "\"\<anyone\>\"", ",", "\"\<anything\>\"", ",", 
     "\"\<anyway\>\"", ",", "\"\<anywhere\>\"", ",", "\"\<apart\>\"", ",", 
     "\"\<apartment\>\"", ",", "\"\<ape\>\"", ",", "\"\<apiece\>\"", ",", 
     "\"\<appear\>\"", ",", "\"\<apple\>\"", ",", "\"\<April\>\"", ",", 
     "\"\<apron\>\"", ",", "\"\<are\>\"", ",", "\"\<aren't\>\"", ",", 
     "\"\<arise\>\"", ",", "\"\<arithmetic\>\"", ",", "\"\<arm\>\"", ",", 
     "\"\<armful\>\"", ",", "\"\<army\>\"", ",", "\"\<arose\>\"", ",", 
     "\"\<around\>\"", ",", "\"\<arrange\>\"", ",", "\"\<arrive\>\"", ",", 
     "\"\<arrived\>\"", ",", "\"\<arrow\>\"", ",", "\"\<art\>\"", ",", 
     "\"\<artist\>\"", ",", "\"\<as\>\"", ",", "\"\<ash\>\"", ",", 
     "\"\<ashes\>\"", ",", "\"\<aside\>\"", ",", "\"\<ask\>\"", ",", 
     "\"\<asleep\>\"", ",", "\"\<at\>\"", ",", "\"\<ate\>\"", ",", 
     "\"\<attack\>\"", ",", "\"\<attend\>\"", ",", "\"\<attention\>\"", ",", 
     "\"\<August\>\"", ",", "\"\<aunt\>\"", ",", "\"\<author\>\"", ",", 
     "\"\<auto\>\"", ",", "\"\<automobile\>\"", ",", "\"\<autumn\>\"", ",", 
     "\"\<avenue\>\"", ",", "\"\<awake\>\"", ",", "\"\<awaken\>\"", ",", 
     "\"\<away\>\"", ",", "\"\<awful\>\"", ",", "\"\<awfully\>\"", ",", 
     "\"\<awhile\>\"", ",", "\"\<ax\>\"", ",", "\"\<axe\>\"", ",", 
     "\"\<B\>\"", ",", "\"\<baa\>\"", ",", "\"\<babe\>\"", ",", 
     "\"\<babies\>\"", ",", "\"\<back\>\"", ",", "\"\<background\>\"", ",", 
     "\"\<backward\>\"", ",", "\"\<backwards\>\"", ",", "\"\<bacon\>\"", ",", 
     "\"\<bad\>\"", ",", "\"\<badge\>\"", ",", "\"\<badly\>\"", ",", 
     "\"\<bag\>\"", ",", "\"\<bake\>\"", ",", "\"\<baker\>\"", ",", 
     "\"\<bakery\>\"", ",", "\"\<baking\>\"", ",", "\"\<ball\>\"", ",", 
     "\"\<balloon\>\"", ",", "\"\<banana\>\"", ",", "\"\<band\>\"", ",", 
     "\"\<bandage\>\"", ",", "\"\<bang\>\"", ",", "\"\<banjo\>\"", ",", 
     "\"\<bank\>\"", ",", "\"\<banker\>\"", ",", "\"\<bar\>\"", ",", 
     "\"\<barber\>\"", ",", "\"\<bare\>\"", ",", "\"\<barefoot\>\"", ",", 
     "\"\<barely\>\"", ",", "\"\<bark\>\"", ",", "\"\<barn\>\"", ",", 
     "\"\<barrel\>\"", ",", "\"\<base\>\"", ",", "\"\<baseball\>\"", ",", 
     "\"\<basement\>\"", ",", "\"\<basket\>\"", ",", "\"\<bat\>\"", ",", 
     "\"\<batch\>\"", ",", "\"\<bath\>\"", ",", "\"\<bathe\>\"", ",", 
     "\"\<bathing\>\"", ",", "\"\<bathroom\>\"", ",", "\"\<bathtub\>\"", ",", 
     "\"\<battle\>\"", ",", "\"\<battleship\>\"", ",", "\"\<bay\>\"", ",", 
     "\"\<be\>\"", ",", "\"\<beach\>\"", ",", "\"\<bead\>\"", ",", 
     "\"\<beam\>\"", ",", "\"\<bean\>\"", ",", "\"\<bear\>\"", ",", 
     "\"\<beard\>\"", ",", "\"\<beast\>\"", ",", "\"\<beat\>\"", ",", 
     "\"\<beating\>\"", ",", "\"\<beautiful\>\"", ",", "\"\<beautify\>\"", 
     ",", "\"\<beauty\>\"", ",", "\"\<became\>\"", ",", "\"\<because\>\"", 
     ",", "\"\<become\>\"", ",", "\"\<becoming\>\"", ",", "\"\<bed\>\"", ",", 
     "\"\<bedbug\>\"", ",", "\"\<bedroom\>\"", ",", "\"\<bedspread\>\"", ",", 
     "\"\<bedtime\>\"", ",", "\"\<bee\>\"", ",", "\"\<beech\>\"", ",", 
     "\"\<beef\>\"", ",", "\"\<beefsteak\>\"", ",", "\"\<beehive\>\"", ",", 
     "\"\<been\>\"", ",", "\"\<beer\>\"", ",", "\"\<beet\>\"", ",", 
     "\"\<before\>\"", ",", "\"\<beg\>\"", ",", "\"\<began\>\"", ",", 
     "\"\<beggar\>\"", ",", "\"\<begged\>\"", ",", "\"\<begin\>\"", ",", 
     "\"\<beginning\>\"", ",", "\"\<begun\>\"", ",", "\"\<behave\>\"", ",", 
     "\"\<behind\>\"", ",", "\"\<being\>\"", ",", "\"\<believe\>\"", ",", 
     "\"\<bell\>\"", ",", "\"\<belong\>\"", ",", "\"\<below\>\"", ",", 
     "\"\<belt\>\"", ",", "\"\<bench\>\"", ",", "\"\<bend\>\"", ",", 
     "\"\<beneath\>\"", ",", "\"\<bent\>\"", ",", "\"\<berries\>\"", ",", 
     "\"\<berry\>\"", ",", "\"\<beside\>\"", ",", "\"\<besides\>\"", ",", 
     "\"\<best\>\"", ",", "\"\<bet\>\"", ",", "\"\<better\>\"", ",", 
     "\"\<between\>\"", ",", "\"\<bib\>\"", ",", "\"\<bible\>\"", ",", 
     "\"\<bicycle\>\"", ",", "\"\<bid\>\"", ",", "\"\<big\>\"", ",", 
     "\"\<bigger\>\"", ",", "\"\<bill\>\"", ",", "\"\<billboard\>\"", ",", 
     "\"\<bin\>\"", ",", "\"\<bind\>\"", ",", "\"\<bird\>\"", ",", 
     "\"\<birth\>\"", ",", "\"\<birthday\>\"", ",", "\"\<biscuit\>\"", ",", 
     "\"\<bit\>\"", ",", "\"\<bite\>\"", ",", "\"\<biting\>\"", ",", 
     "\"\<bitter\>\"", ",", "\"\<black\>\"", ",", "\"\<blackberry\>\"", ",", 
     "\"\<blackbird\>\"", ",", "\"\<blackboard\>\"", ",", "\"\<blackness\>\"",
      ",", "\"\<blacksmith\>\"", ",", "\"\<blame\>\"", ",", "\"\<blank\>\"", 
     ",", "\"\<blanket\>\"", ",", "\"\<blast\>\"", ",", "\"\<blaze\>\"", ",", 
     "\"\<bleed\>\"", ",", "\"\<bless\>\"", ",", "\"\<blessing\>\"", ",", 
     "\"\<blew\>\"", ",", "\"\<blind\>\"", ",", "\"\<blindfold\>\"", ",", 
     "\"\<blinds\>\"", ",", "\"\<block\>\"", ",", "\"\<blood\>\"", ",", 
     "\"\<bloom\>\"", ",", "\"\<blossom\>\"", ",", "\"\<blot\>\"", ",", 
     "\"\<blow\>\"", ",", "\"\<blue\>\"", ",", "\"\<blueberry\>\"", ",", 
     "\"\<bluebird\>\"", ",", "\"\<blush\>\"", ",", "\"\<board\>\"", ",", 
     "\"\<boast\>\"", ",", "\"\<boat\>\"", ",", "\"\<bob\>\"", ",", 
     "\"\<bobwhite\>\"", ",", "\"\<bodies\>\"", ",", "\"\<body\>\"", ",", 
     "\"\<boil\>\"", ",", "\"\<boiler\>\"", ",", "\"\<bold\>\"", ",", 
     "\"\<bone\>\"", ",", "\"\<bonnet\>\"", ",", "\"\<boo\>\"", ",", 
     "\"\<book\>\"", ",", "\"\<bookcase\>\"", ",", "\"\<bookkeeper\>\"", ",", 
     "\"\<boom\>\"", ",", "\"\<boot\>\"", ",", "\"\<born\>\"", ",", 
     "\"\<borrow\>\"", ",", "\"\<boss\>\"", ",", "\"\<both\>\"", ",", 
     "\"\<bother\>\"", ",", "\"\<bottle\>\"", ",", "\"\<bottom\>\"", ",", 
     "\"\<bought\>\"", ",", "\"\<bounce\>\"", ",", "\"\<bow\>\"", ",", 
     "\"\<bowl\>\"", ",", "\"\<bow-wow\>\"", ",", "\"\<box\>\"", ",", 
     "\"\<boxcar\>\"", ",", "\"\<boxer\>\"", ",", "\"\<boxes\>\"", ",", 
     "\"\<boy\>\"", ",", "\"\<boyhood\>\"", ",", "\"\<bracelet\>\"", ",", 
     "\"\<brain\>\"", ",", "\"\<brake\>\"", ",", "\"\<bran\>\"", ",", 
     "\"\<branch\>\"", ",", "\"\<brass\>\"", ",", "\"\<brave\>\"", ",", 
     "\"\<bread\>\"", ",", "\"\<break\>\"", ",", "\"\<breakfast\>\"", ",", 
     "\"\<breast\>\"", ",", "\"\<breath\>\"", ",", "\"\<breathe\>\"", ",", 
     "\"\<breeze\>\"", ",", "\"\<brick\>\"", ",", "\"\<bride\>\"", ",", 
     "\"\<bridge\>\"", ",", "\"\<bright\>\"", ",", "\"\<brightness\>\"", ",", 
     "\"\<bring\>\"", ",", "\"\<broad\>\"", ",", "\"\<broadcast\>\"", ",", 
     "\"\<broke\>\"", ",", "\"\<broken\>\"", ",", "\"\<brook\>\"", ",", 
     "\"\<broom\>\"", ",", "\"\<brother\>\"", ",", "\"\<brought\>\"", ",", 
     "\"\<brown\>\"", ",", "\"\<brush\>\"", ",", "\"\<bubble\>\"", ",", 
     "\"\<bucket\>\"", ",", "\"\<buckle\>\"", ",", "\"\<bud\>\"", ",", 
     "\"\<buffalo\>\"", ",", "\"\<bug\>\"", ",", "\"\<buggy\>\"", ",", 
     "\"\<build\>\"", ",", "\"\<building\>\"", ",", "\"\<built\>\"", ",", 
     "\"\<bulb\>\"", ",", "\"\<bull\>\"", ",", "\"\<bullet\>\"", ",", 
     "\"\<bum\>\"", ",", "\"\<bumblebee\>\"", ",", "\"\<bump\>\"", ",", 
     "\"\<bun\>\"", ",", "\"\<bunch\>\"", ",", "\"\<bundle\>\"", ",", 
     "\"\<bunny\>\"", ",", "\"\<burn\>\"", ",", "\"\<burst\>\"", ",", 
     "\"\<bury\>\"", ",", "\"\<bus\>\"", ",", "\"\<bush\>\"", ",", 
     "\"\<bushel\>\"", ",", "\"\<business\>\"", ",", "\"\<busy\>\"", ",", 
     "\"\<but\>\"", ",", "\"\<butcher\>\"", ",", "\"\<butt\>\"", ",", 
     "\"\<butter\>\"", ",", "\"\<buttercup\>\"", ",", "\"\<butterfly\>\"", 
     ",", "\"\<buttermilk\>\"", ",", "\"\<butterscotch\>\"", ",", 
     "\"\<button\>\"", ",", "\"\<buttonhole\>\"", ",", "\"\<buy\>\"", ",", 
     "\"\<buzz\>\"", ",", "\"\<by\>\"", ",", "\"\<bye\>\"", ",", "\"\<C\>\"", 
     ",", "\"\<cab\>\"", ",", "\"\<cabbage\>\"", ",", "\"\<cabin\>\"", ",", 
     "\"\<cabinet\>\"", ",", "\"\<cackle\>\"", ",", "\"\<cage\>\"", ",", 
     "\"\<cake\>\"", ",", "\"\<calendar\>\"", ",", "\"\<calf\>\"", ",", 
     "\"\<call\>\"", ",", "\"\<caller\>\"", ",", "\"\<calling\>\"", ",", 
     "\"\<came\>\"", ",", "\"\<camel\>\"", ",", "\"\<camp\>\"", ",", 
     "\"\<campfire\>\"", ",", "\"\<can\>\"", ",", "\"\<canal\>\"", ",", 
     "\"\<canary\>\"", ",", "\"\<candle\>\"", ",", "\"\<candlestick\>\"", 
     ",", "\"\<candy\>\"", ",", "\"\<cane\>\"", ",", "\"\<cannon\>\"", ",", 
     "\"\<cannot\>\"", ",", "\"\<canoe\>\"", ",", "\"\<can't\>\"", ",", 
     "\"\<canyon\>\"", ",", "\"\<cap\>\"", ",", "\"\<cape\>\"", ",", 
     "\"\<capital\>\"", ",", "\"\<captain\>\"", ",", "\"\<car\>\"", ",", 
     "\"\<card\>\"", ",", "\"\<cardboard\>\"", ",", "\"\<care\>\"", ",", 
     "\"\<careful\>\"", ",", "\"\<careless\>\"", ",", "\"\<carelessness\>\"", 
     ",", "\"\<carload\>\"", ",", "\"\<carpenter\>\"", ",", "\"\<carpet\>\"", 
     ",", "\"\<carriage\>\"", ",", "\"\<carrot\>\"", ",", "\"\<carry\>\"", 
     ",", "\"\<cart\>\"", ",", "\"\<carve\>\"", ",", "\"\<case\>\"", ",", 
     "\"\<cash\>\"", ",", "\"\<cashier\>\"", ",", "\"\<castle\>\"", ",", 
     "\"\<cat\>\"", ",", "\"\<catbird\>\"", ",", "\"\<catch\>\"", ",", 
     "\"\<catcher\>\"", ",", "\"\<caterpillar\>\"", ",", "\"\<catfish\>\"", 
     ",", "\"\<catsup\>\"", ",", "\"\<cattle\>\"", ",", "\"\<caught\>\"", 
     ",", "\"\<cause\>\"", ",", "\"\<cave\>\"", ",", "\"\<ceiling\>\"", ",", 
     "\"\<cell\>\"", ",", "\"\<cellar\>\"", ",", "\"\<cent\>\"", ",", 
     "\"\<center\>\"", ",", "\"\<cereal\>\"", ",", "\"\<certain\>\"", ",", 
     "\"\<certainly\>\"", ",", "\"\<chain\>\"", ",", "\"\<chair\>\"", ",", 
     "\"\<chalk\>\"", ",", "\"\<champion\>\"", ",", "\"\<chance\>\"", ",", 
     "\"\<change\>\"", ",", "\"\<chap\>\"", ",", "\"\<charge\>\"", ",", 
     "\"\<charm\>\"", ",", "\"\<chart\>\"", ",", "\"\<chase\>\"", ",", 
     "\"\<chatter\>\"", ",", "\"\<cheap\>\"", ",", "\"\<cheat\>\"", ",", 
     "\"\<check\>\"", ",", "\"\<checkers\>\"", ",", "\"\<cheek\>\"", ",", 
     "\"\<cheer\>\"", ",", "\"\<cheese\>\"", ",", "\"\<cherry\>\"", ",", 
     "\"\<chest\>\"", ",", "\"\<chew\>\"", ",", "\"\<chick\>\"", ",", 
     "\"\<chicken\>\"", ",", "\"\<chief\>\"", ",", "\"\<child\>\"", ",", 
     "\"\<childhood\>\"", ",", "\"\<children\>\"", ",", "\"\<chill\>\"", ",", 
     "\"\<chilly\>\"", ",", "\"\<chimney\>\"", ",", "\"\<chin\>\"", ",", 
     "\"\<china\>\"", ",", "\"\<chip\>\"", ",", "\"\<chipmunk\>\"", ",", 
     "\"\<chocolate\>\"", ",", "\"\<choice\>\"", ",", "\"\<choose\>\"", ",", 
     "\"\<chop\>\"", ",", "\"\<chorus\>\"", ",", "\"\<chose\>\"", ",", 
     "\"\<chosen\>\"", ",", "\"\<christen\>\"", ",", "\"\<Christmas\>\"", 
     ",", "\"\<church\>\"", ",", "\"\<churn\>\"", ",", "\"\<cigarette\>\"", 
     ",", "\"\<circle\>\"", ",", "\"\<circus\>\"", ",", "\"\<citizen\>\"", 
     ",", "\"\<city\>\"", ",", "\"\<clang\>\"", ",", "\"\<clap\>\"", ",", 
     "\"\<class\>\"", ",", "\"\<classmate\>\"", ",", "\"\<classroom\>\"", 
     ",", "\"\<claw\>\"", ",", "\"\<clay\>\"", ",", "\"\<clean\>\"", ",", 
     "\"\<cleaner\>\"", ",", "\"\<clear\>\"", ",", "\"\<clerk\>\"", ",", 
     "\"\<clever\>\"", ",", "\"\<click\>\"", ",", "\"\<cliff\>\"", ",", 
     "\"\<climb\>\"", ",", "\"\<clip\>\"", ",", "\"\<cloak\>\"", ",", 
     "\"\<clock\>\"", ",", "\"\<close\>\"", ",", "\"\<closet\>\"", ",", 
     "\"\<cloth\>\"", ",", "\"\<clothes\>\"", ",", "\"\<clothing\>\"", ",", 
     "\"\<cloud\>\"", ",", "\"\<cloudy\>\"", ",", "\"\<clover\>\"", ",", 
     "\"\<clown\>\"", ",", "\"\<club\>\"", ",", "\"\<cluck\>\"", ",", 
     "\"\<clump\>\"", ",", "\"\<coach\>\"", ",", "\"\<coal\>\"", ",", 
     "\"\<coast\>\"", ",", "\"\<coat\>\"", ",", "\"\<cob\>\"", ",", 
     "\"\<cobbler\>\"", ",", "\"\<cocoa\>\"", ",", "\"\<coconut\>\"", ",", 
     "\"\<cocoon\>\"", ",", "\"\<cod\>\"", ",", "\"\<codfish\>\"", ",", 
     "\"\<coffee\>\"", ",", "\"\<coffeepot\>\"", ",", "\"\<coin\>\"", ",", 
     "\"\<cold\>\"", ",", "\"\<collar\>\"", ",", "\"\<college\>\"", ",", 
     "\"\<color\>\"", ",", "\"\<colored\>\"", ",", "\"\<colt\>\"", ",", 
     "\"\<column\>\"", ",", "\"\<comb\>\"", ",", "\"\<come\>\"", ",", 
     "\"\<comfort\>\"", ",", "\"\<comic\>\"", ",", "\"\<coming\>\"", ",", 
     "\"\<company\>\"", ",", "\"\<compare\>\"", ",", "\"\<conductor\>\"", 
     ",", "\"\<cone\>\"", ",", "\"\<connect\>\"", ",", "\"\<coo\>\"", ",", 
     "\"\<cook\>\"", ",", "\"\<cooked\>\"", ",", "\"\<cooking\>\"", ",", 
     "\"\<cookie\>\"", ",", "\"\<cookies\>\"", ",", "\"\<cool\>\"", ",", 
     "\"\<cooler\>\"", ",", "\"\<coop\>\"", ",", "\"\<copper\>\"", ",", 
     "\"\<copy\>\"", ",", "\"\<cord\>\"", ",", "\"\<cork\>\"", ",", 
     "\"\<corn\>\"", ",", "\"\<corner\>\"", ",", "\"\<correct\>\"", ",", 
     "\"\<cost\>\"", ",", "\"\<cot\>\"", ",", "\"\<cottage\>\"", ",", 
     "\"\<cotton\>\"", ",", "\"\<couch\>\"", ",", "\"\<cough\>\"", ",", 
     "\"\<could\>\"", ",", "\"\<couldn't\>\"", ",", "\"\<count\>\"", ",", 
     "\"\<counter\>\"", ",", "\"\<country\>\"", ",", "\"\<county\>\"", ",", 
     "\"\<course\>\"", ",", "\"\<court\>\"", ",", "\"\<cousin\>\"", ",", 
     "\"\<cover\>\"", ",", "\"\<cow\>\"", ",", "\"\<coward\>\"", ",", 
     "\"\<cowardly\>\"", ",", "\"\<cowboy\>\"", ",", "\"\<cozy\>\"", ",", 
     "\"\<crab\>\"", ",", "\"\<crack\>\"", ",", "\"\<cracker\>\"", ",", 
     "\"\<cradle\>\"", ",", "\"\<cramps\>\"", ",", "\"\<cranberry\>\"", ",", 
     "\"\<crank\>\"", ",", "\"\<cranky\>\"", ",", "\"\<crash\>\"", ",", 
     "\"\<crawl\>\"", ",", "\"\<crazy\>\"", ",", "\"\<cream\>\"", ",", 
     "\"\<creamy\>\"", ",", "\"\<creek\>\"", ",", "\"\<creep\>\"", ",", 
     "\"\<crept\>\"", ",", "\"\<cried\>\"", ",", "\"\<croak\>\"", ",", 
     "\"\<crook\>\"", ",", "\"\<crooked\>\"", ",", "\"\<crop\>\"", ",", 
     "\"\<cross\>\"", ",", "\"\<crossing\>\"", ",", "\"\<cross-eyed\>\"", 
     ",", "\"\<crow\>\"", ",", "\"\<crowd\>\"", ",", "\"\<crowded\>\"", ",", 
     "\"\<crown\>\"", ",", "\"\<cruel\>\"", ",", "\"\<crumb\>\"", ",", 
     "\"\<crumble\>\"", ",", "\"\<crush\>\"", ",", "\"\<crust\>\"", ",", 
     "\"\<cry\>\"", ",", "\"\<cries\>\"", ",", "\"\<cub\>\"", ",", 
     "\"\<cuff\>\"", ",", "\"\<cup\>\"", ",", "\"\<cuff\>\"", ",", 
     "\"\<cup\>\"", ",", "\"\<cupboard\>\"", ",", "\"\<cupful\>\"", ",", 
     "\"\<cure\>\"", ",", "\"\<curl\>\"", ",", "\"\<curly\>\"", ",", 
     "\"\<curtain\>\"", ",", "\"\<curve\>\"", ",", "\"\<cushion\>\"", ",", 
     "\"\<custard\>\"", ",", "\"\<customer\>\"", ",", "\"\<cut\>\"", ",", 
     "\"\<cute\>\"", ",", "\"\<cutting\>\"", ",", "\"\<D\>\"", ",", 
     "\"\<dab\>\"", ",", "\"\<dad\>\"", ",", "\"\<daddy\>\"", ",", 
     "\"\<daily\>\"", ",", "\"\<dairy\>\"", ",", "\"\<daisy\>\"", ",", 
     "\"\<dam\>\"", ",", "\"\<damage\>\"", ",", "\"\<dame\>\"", ",", 
     "\"\<damp\>\"", ",", "\"\<dance\>\"", ",", "\"\<dancer\>\"", ",", 
     "\"\<dancing\>\"", ",", "\"\<dandy\>\"", ",", "\"\<danger\>\"", ",", 
     "\"\<dangerous\>\"", ",", "\"\<dare\>\"", ",", "\"\<dark\>\"", ",", 
     "\"\<darkness\>\"", ",", "\"\<darling\>\"", ",", "\"\<darn\>\"", ",", 
     "\"\<dart\>\"", ",", "\"\<dash\>\"", ",", "\"\<date\>\"", ",", 
     "\"\<daughter\>\"", ",", "\"\<dawn\>\"", ",", "\"\<day\>\"", ",", 
     "\"\<daybreak\>\"", ",", "\"\<daytime\>\"", ",", "\"\<dead\>\"", ",", 
     "\"\<deaf\>\"", ",", "\"\<deal\>\"", ",", "\"\<dear\>\"", ",", 
     "\"\<death\>\"", ",", "\"\<December\>\"", ",", "\"\<decide\>\"", ",", 
     "\"\<deck\>\"", ",", "\"\<deed\>\"", ",", "\"\<deep\>\"", ",", 
     "\"\<deer\>\"", ",", "\"\<defeat\>\"", ",", "\"\<defend\>\"", ",", 
     "\"\<defense\>\"", ",", "\"\<delight\>\"", ",", "\"\<den\>\"", ",", 
     "\"\<dentist\>\"", ",", "\"\<depend\>\"", ",", "\"\<deposit\>\"", ",", 
     "\"\<describe\>\"", ",", "\"\<desert\>\"", ",", "\"\<deserve\>\"", ",", 
     "\"\<desire\>\"", ",", "\"\<desk\>\"", ",", "\"\<destroy\>\"", ",", 
     "\"\<devil\>\"", ",", "\"\<dew\>\"", ",", "\"\<diamond\>\"", ",", 
     "\"\<did\>\"", ",", "\"\<didn't\>\"", ",", "\"\<die\>\"", ",", 
     "\"\<died\>\"", ",", "\"\<dies\>\"", ",", "\"\<difference\>\"", ",", 
     "\"\<different\>\"", ",", "\"\<dig\>\"", ",", "\"\<dim\>\"", ",", 
     "\"\<dime\>\"", ",", "\"\<dine\>\"", ",", "\"\<ding-dong\>\"", ",", 
     "\"\<dinner\>\"", ",", "\"\<dip\>\"", ",", "\"\<direct\>\"", ",", 
     "\"\<direction\>\"", ",", "\"\<dirt\>\"", ",", "\"\<dirty\>\"", ",", 
     "\"\<discover\>\"", ",", "\"\<dish\>\"", ",", "\"\<dislike\>\"", ",", 
     "\"\<dismiss\>\"", ",", "\"\<ditch\>\"", ",", "\"\<dive\>\"", ",", 
     "\"\<diver\>\"", ",", "\"\<divide\>\"", ",", "\"\<do\>\"", ",", 
     "\"\<dock\>\"", ",", "\"\<doctor\>\"", ",", "\"\<does\>\"", ",", 
     "\"\<doesn't\>\"", ",", "\"\<dog\>\"", ",", "\"\<doll\>\"", ",", 
     "\"\<dollar\>\"", ",", "\"\<dolly\>\"", ",", "\"\<done\>\"", ",", 
     "\"\<donkey\>\"", ",", "\"\<don't\>\"", ",", "\"\<door\>\"", ",", 
     "\"\<doorbell\>\"", ",", "\"\<doorknob\>\"", ",", "\"\<doorstep\>\"", 
     ",", "\"\<dope\>\"", ",", "\"\<dot\>\"", ",", "\"\<double\>\"", ",", 
     "\"\<dough\>\"", ",", "\"\<dove\>\"", ",", "\"\<down\>\"", ",", 
     "\"\<downstairs\>\"", ",", "\"\<downtown\>\"", ",", "\"\<dozen\>\"", 
     ",", "\"\<drag\>\"", ",", "\"\<drain\>\"", ",", "\"\<drank\>\"", ",", 
     "\"\<draw\>\"", ",", "\"\<drawer\>\"", ",", "\"\<draw\>\"", ",", 
     "\"\<drawing\>\"", ",", "\"\<dream\>\"", ",", "\"\<dress\>\"", ",", 
     "\"\<dresser\>\"", ",", "\"\<dressmaker\>\"", ",", "\"\<drew\>\"", ",", 
     "\"\<dried\>\"", ",", "\"\<drift\>\"", ",", "\"\<drill\>\"", ",", 
     "\"\<drink\>\"", ",", "\"\<drip\>\"", ",", "\"\<drive\>\"", ",", 
     "\"\<driven\>\"", ",", "\"\<driver\>\"", ",", "\"\<drop\>\"", ",", 
     "\"\<drove\>\"", ",", "\"\<drown\>\"", ",", "\"\<drowsy\>\"", ",", 
     "\"\<drub\>\"", ",", "\"\<drum\>\"", ",", "\"\<drunk\>\"", ",", 
     "\"\<dry\>\"", ",", "\"\<duck\>\"", ",", "\"\<due\>\"", ",", 
     "\"\<dug\>\"", ",", "\"\<dull\>\"", ",", "\"\<dumb\>\"", ",", 
     "\"\<dump\>\"", ",", "\"\<during\>\"", ",", "\"\<dust\>\"", ",", 
     "\"\<dusty\>\"", ",", "\"\<duty\>\"", ",", "\"\<dwarf\>\"", ",", 
     "\"\<dwell\>\"", ",", "\"\<dwelt\>\"", ",", "\"\<dying\>\"", ",", 
     "\"\<E\>\"", ",", "\"\<each\>\"", ",", "\"\<eager\>\"", ",", 
     "\"\<eagle\>\"", ",", "\"\<ear\>\"", ",", "\"\<early\>\"", ",", 
     "\"\<earn\>\"", ",", "\"\<earth\>\"", ",", "\"\<east\>\"", ",", 
     "\"\<eastern\>\"", ",", "\"\<easy\>\"", ",", "\"\<eat\>\"", ",", 
     "\"\<eaten\>\"", ",", "\"\<edge\>\"", ",", "\"\<egg\>\"", ",", 
     "\"\<eh\>\"", ",", "\"\<eight\>\"", ",", "\"\<eighteen\>\"", ",", 
     "\"\<eighth\>\"", ",", "\"\<eighty\>\"", ",", "\"\<either\>\"", ",", 
     "\"\<elbow\>\"", ",", "\"\<elder\>\"", ",", "\"\<eldest\>\"", ",", 
     "\"\<electric\>\"", ",", "\"\<electricity\>\"", ",", "\"\<elephant\>\"", 
     ",", "\"\<eleven\>\"", ",", "\"\<elf\>\"", ",", "\"\<elm\>\"", ",", 
     "\"\<else\>\"", ",", "\"\<elsewhere\>\"", ",", "\"\<empty\>\"", ",", 
     "\"\<end\>\"", ",", "\"\<ending\>\"", ",", "\"\<enemy\>\"", ",", 
     "\"\<engine\>\"", ",", "\"\<engineer\>\"", ",", "\"\<English\>\"", ",", 
     "\"\<enjoy\>\"", ",", "\"\<enough\>\"", ",", "\"\<enter\>\"", ",", 
     "\"\<envelope\>\"", ",", "\"\<equal\>\"", ",", "\"\<erase\>\"", ",", 
     "\"\<eraser\>\"", ",", "\"\<errand\>\"", ",", "\"\<escape\>\"", ",", 
     "\"\<eve\>\"", ",", "\"\<even\>\"", ",", "\"\<evening\>\"", ",", 
     "\"\<ever\>\"", ",", "\"\<every\>\"", ",", "\"\<everybody\>\"", ",", 
     "\"\<everyday\>\"", ",", "\"\<everyone\>\"", ",", "\"\<everything\>\"", 
     ",", "\"\<everywhere\>\"", ",", "\"\<evil\>\"", ",", "\"\<exact\>\"", 
     ",", "\"\<except\>\"", ",", "\"\<exchange\>\"", ",", "\"\<excited\>\"", 
     ",", "\"\<exciting\>\"", ",", "\"\<excuse\>\"", ",", "\"\<exit\>\"", 
     ",", "\"\<expect\>\"", ",", "\"\<explain\>\"", ",", "\"\<extra\>\"", 
     ",", "\"\<eye\>\"", ",", "\"\<eyebrow\>\"", ",", "\"\<F\>\"", ",", 
     "\"\<fable\>\"", ",", "\"\<face\>\"", ",", "\"\<facing\>\"", ",", 
     "\"\<fact\>\"", ",", "\"\<factory\>\"", ",", "\"\<fail\>\"", ",", 
     "\"\<faint\>\"", ",", "\"\<fair\>\"", ",", "\"\<fairy\>\"", ",", 
     "\"\<faith\>\"", ",", "\"\<fake\>\"", ",", "\"\<fall\>\"", ",", 
     "\"\<false\>\"", ",", "\"\<family\>\"", ",", "\"\<fan\>\"", ",", 
     "\"\<fancy\>\"", ",", "\"\<far\>\"", ",", "\"\<faraway\>\"", ",", 
     "\"\<fare\>\"", ",", "\"\<farmer\>\"", ",", "\"\<farm\>\"", ",", 
     "\"\<farming\>\"", ",", "\"\<far-off\>\"", ",", "\"\<farther\>\"", ",", 
     "\"\<fashion\>\"", ",", "\"\<fast\>\"", ",", "\"\<fasten\>\"", ",", 
     "\"\<fat\>\"", ",", "\"\<father\>\"", ",", "\"\<fault\>\"", ",", 
     "\"\<favor\>\"", ",", "\"\<favorite\>\"", ",", "\"\<fear\>\"", ",", 
     "\"\<feast\>\"", ",", "\"\<feather\>\"", ",", "\"\<February\>\"", ",", 
     "\"\<fed\>\"", ",", "\"\<feed\>\"", ",", "\"\<feel\>\"", ",", 
     "\"\<feet\>\"", ",", "\"\<fell\>\"", ",", "\"\<fellow\>\"", ",", 
     "\"\<felt\>\"", ",", "\"\<fence\>\"", ",", "\"\<fever\>\"", ",", 
     "\"\<few\>\"", ",", "\"\<fib\>\"", ",", "\"\<fiddle\>\"", ",", 
     "\"\<field\>\"", ",", "\"\<fife\>\"", ",", "\"\<fifteen\>\"", ",", 
     "\"\<fifth\>\"", ",", "\"\<fifty\>\"", ",", "\"\<fig\>\"", ",", 
     "\"\<fight\>\"", ",", "\"\<figure\>\"", ",", "\"\<file\>\"", ",", 
     "\"\<fill\>\"", ",", "\"\<film\>\"", ",", "\"\<finally\>\"", ",", 
     "\"\<find\>\"", ",", "\"\<fine\>\"", ",", "\"\<finger\>\"", ",", 
     "\"\<finish\>\"", ",", "\"\<fire\>\"", ",", "\"\<firearm\>\"", ",", 
     "\"\<firecracker\>\"", ",", "\"\<fireplace\>\"", ",", 
     "\"\<fireworks\>\"", ",", "\"\<firing\>\"", ",", "\"\<first\>\"", ",", 
     "\"\<fish\>\"", ",", "\"\<fisherman\>\"", ",", "\"\<fist\>\"", ",", 
     "\"\<fit\>\"", ",", "\"\<fits\>\"", ",", "\"\<five\>\"", ",", 
     "\"\<fix\>\"", ",", "\"\<flag\>\"", ",", "\"\<flake\>\"", ",", 
     "\"\<flame\>\"", ",", "\"\<flap\>\"", ",", "\"\<flash\>\"", ",", 
     "\"\<flashlight\>\"", ",", "\"\<flat\>\"", ",", "\"\<flea\>\"", ",", 
     "\"\<flesh\>\"", ",", "\"\<flew\>\"", ",", "\"\<flies\>\"", ",", 
     "\"\<flight\>\"", ",", "\"\<flip\>\"", ",", "\"\<flip-flop\>\"", ",", 
     "\"\<float\>\"", ",", "\"\<flock\>\"", ",", "\"\<flood\>\"", ",", 
     "\"\<floor\>\"", ",", "\"\<flop\>\"", ",", "\"\<flour\>\"", ",", 
     "\"\<flow\>\"", ",", "\"\<flower\>\"", ",", "\"\<flowery\>\"", ",", 
     "\"\<flutter\>\"", ",", "\"\<fly\>\"", ",", "\"\<foam\>\"", ",", 
     "\"\<fog\>\"", ",", "\"\<foggy\>\"", ",", "\"\<fold\>\"", ",", 
     "\"\<folks\>\"", ",", "\"\<follow\>\"", ",", "\"\<following\>\"", ",", 
     "\"\<fond\>\"", ",", "\"\<food\>\"", ",", "\"\<fool\>\"", ",", 
     "\"\<foolish\>\"", ",", "\"\<foot\>\"", ",", "\"\<football\>\"", ",", 
     "\"\<footprint\>\"", ",", "\"\<for\>\"", ",", "\"\<forehead\>\"", ",", 
     "\"\<forest\>\"", ",", "\"\<forget\>\"", ",", "\"\<forgive\>\"", ",", 
     "\"\<forgot\>\"", ",", "\"\<forgotten\>\"", ",", "\"\<fork\>\"", ",", 
     "\"\<form\>\"", ",", "\"\<fort\>\"", ",", "\"\<forth\>\"", ",", 
     "\"\<fortune\>\"", ",", "\"\<forty\>\"", ",", "\"\<forward\>\"", ",", 
     "\"\<fought\>\"", ",", "\"\<found\>\"", ",", "\"\<fountain\>\"", ",", 
     "\"\<four\>\"", ",", "\"\<fourteen\>\"", ",", "\"\<fourth\>\"", ",", 
     "\"\<fox\>\"", ",", "\"\<frame\>\"", ",", "\"\<free\>\"", ",", 
     "\"\<freedom\>\"", ",", "\"\<freeze\>\"", ",", "\"\<freight\>\"", ",", 
     "\"\<French\>\"", ",", "\"\<fresh\>\"", ",", "\"\<fret\>\"", ",", 
     "\"\<Friday\>\"", ",", "\"\<fried\>\"", ",", "\"\<friend\>\"", ",", 
     "\"\<friendly\>\"", ",", "\"\<friendship\>\"", ",", "\"\<frighten\>\"", 
     ",", "\"\<frog\>\"", ",", "\"\<from\>\"", ",", "\"\<front\>\"", ",", 
     "\"\<frost\>\"", ",", "\"\<frown\>\"", ",", "\"\<froze\>\"", ",", 
     "\"\<fruit\>\"", ",", "\"\<fry\>\"", ",", "\"\<fudge\>\"", ",", 
     "\"\<fuel\>\"", ",", "\"\<full\>\"", ",", "\"\<fully\>\"", ",", 
     "\"\<fun\>\"", ",", "\"\<funny\>\"", ",", "\"\<fur\>\"", ",", 
     "\"\<furniture\>\"", ",", "\"\<further\>\"", ",", "\"\<fuzzy\>\"", ",", 
     "\"\<G\>\"", ",", "\"\<gain\>\"", ",", "\"\<gallon\>\"", ",", 
     "\"\<gallop\>\"", ",", "\"\<game\>\"", ",", "\"\<gang\>\"", ",", 
     "\"\<garage\>\"", ",", "\"\<garbage\>\"", ",", "\"\<garden\>\"", ",", 
     "\"\<gas\>\"", ",", "\"\<gasoline\>\"", ",", "\"\<gate\>\"", ",", 
     "\"\<gather\>\"", ",", "\"\<gave\>\"", ",", "\"\<gay\>\"", ",", 
     "\"\<gear\>\"", ",", "\"\<geese\>\"", ",", "\"\<general\>\"", ",", 
     "\"\<gentle\>\"", ",", "\"\<gentleman\>\"", ",", "\"\<gentlemen\>\"", 
     ",", "\"\<geography\>\"", ",", "\"\<get\>\"", ",", "\"\<getting\>\"", 
     ",", "\"\<giant\>\"", ",", "\"\<gift\>\"", ",", "\"\<gingerbread\>\"", 
     ",", "\"\<girl\>\"", ",", "\"\<give\>\"", ",", "\"\<given\>\"", ",", 
     "\"\<giving\>\"", ",", "\"\<glad\>\"", ",", "\"\<gladly\>\"", ",", 
     "\"\<glance\>\"", ",", "\"\<glass\>\"", ",", "\"\<glasses\>\"", ",", 
     "\"\<gleam\>\"", ",", "\"\<glide\>\"", ",", "\"\<glory\>\"", ",", 
     "\"\<glove\>\"", ",", "\"\<glow\>\"", ",", "\"\<glue\>\"", ",", 
     "\"\<go\>\"", ",", "\"\<going\>\"", ",", "\"\<goes\>\"", ",", 
     "\"\<goal\>\"", ",", "\"\<goat\>\"", ",", "\"\<gobble\>\"", ",", 
     "\"\<God\>\"", ",", "\"\<god\>\"", ",", "\"\<godmother\>\"", ",", 
     "\"\<gold\>\"", ",", "\"\<golden\>\"", ",", "\"\<goldfish\>\"", ",", 
     "\"\<golf\>\"", ",", "\"\<gone\>\"", ",", "\"\<good\>\"", ",", 
     "\"\<goods\>\"", ",", "\"\<goodbye\>\"", ",", "\"\<good-by\>\"", ",", 
     "\"\<goodbye\>\"", ",", "\"\<good-bye\>\"", ",", "\"\<good-looking\>\"", 
     ",", "\"\<goodness\>\"", ",", "\"\<goody\>\"", ",", "\"\<goose\>\"", 
     ",", "\"\<gooseberry\>\"", ",", "\"\<got\>\"", ",", "\"\<govern\>\"", 
     ",", "\"\<government\>\"", ",", "\"\<gown\>\"", ",", "\"\<grab\>\"", 
     ",", "\"\<gracious\>\"", ",", "\"\<grade\>\"", ",", "\"\<grain\>\"", 
     ",", "\"\<grand\>\"", ",", "\"\<grandchild\>\"", ",", 
     "\"\<grandchildren\>\"", ",", "\"\<granddaughter\>\"", ",", 
     "\"\<grandfather\>\"", ",", "\"\<grandma\>\"", ",", 
     "\"\<grandmother\>\"", ",", "\"\<grandpa\>\"", ",", "\"\<grandson\>\"", 
     ",", "\"\<grandstand\>\"", ",", "\"\<grape\>\"", ",", "\"\<grapes\>\"", 
     ",", "\"\<grapefruit\>\"", ",", "\"\<grass\>\"", ",", 
     "\"\<grasshopper\>\"", ",", "\"\<grateful\>\"", ",", "\"\<grave\>\"", 
     ",", "\"\<gravel\>\"", ",", "\"\<graveyard\>\"", ",", "\"\<gravy\>\"", 
     ",", "\"\<gray\>\"", ",", "\"\<graze\>\"", ",", "\"\<grease\>\"", ",", 
     "\"\<great\>\"", ",", "\"\<green\>\"", ",", "\"\<greet\>\"", ",", 
     "\"\<grew\>\"", ",", "\"\<grind\>\"", ",", "\"\<groan\>\"", ",", 
     "\"\<grocery\>\"", ",", "\"\<ground\>\"", ",", "\"\<group\>\"", ",", 
     "\"\<grove\>\"", ",", "\"\<grow\>\"", ",", "\"\<guard\>\"", ",", 
     "\"\<guess\>\"", ",", "\"\<guest\>\"", ",", "\"\<guide\>\"", ",", 
     "\"\<gulf\>\"", ",", "\"\<gum\>\"", ",", "\"\<gun\>\"", ",", 
     "\"\<gunpowder\>\"", ",", "\"\<guy\>\"", ",", "\"\<H\>\"", ",", 
     "\"\<ha\>\"", ",", "\"\<habit\>\"", ",", "\"\<had\>\"", ",", 
     "\"\<hadn't\>\"", ",", "\"\<hail\>\"", ",", "\"\<hair\>\"", ",", 
     "\"\<haircut\>\"", ",", "\"\<hairpin\>\"", ",", "\"\<half\>\"", ",", 
     "\"\<hall\>\"", ",", "\"\<halt\>\"", ",", "\"\<ham\>\"", ",", 
     "\"\<hammer\>\"", ",", "\"\<hand\>\"", ",", "\"\<handful\>\"", ",", 
     "\"\<handkerchief\>\"", ",", "\"\<handle\>\"", ",", 
     "\"\<handwriting\>\"", ",", "\"\<hang\>\"", ",", "\"\<happen\>\"", ",", 
     "\"\<happily\>\"", ",", "\"\<happiness\>\"", ",", "\"\<happy\>\"", ",", 
     "\"\<harbor\>\"", ",", "\"\<hard\>\"", ",", "\"\<hardly\>\"", ",", 
     "\"\<hardship\>\"", ",", "\"\<hardware\>\"", ",", "\"\<hare\>\"", ",", 
     "\"\<hark\>\"", ",", "\"\<harm\>\"", ",", "\"\<harness\>\"", ",", 
     "\"\<harp\>\"", ",", "\"\<harvest\>\"", ",", "\"\<has\>\"", ",", 
     "\"\<hasn't\>\"", ",", "\"\<haste\>\"", ",", "\"\<hasten\>\"", ",", 
     "\"\<hasty\>\"", ",", "\"\<hat\>\"", ",", "\"\<hatch\>\"", ",", 
     "\"\<hatchet\>\"", ",", "\"\<hate\>\"", ",", "\"\<haul\>\"", ",", 
     "\"\<have\>\"", ",", "\"\<haven't\>\"", ",", "\"\<having\>\"", ",", 
     "\"\<hawk\>\"", ",", "\"\<hay\>\"", ",", "\"\<hayfield\>\"", ",", 
     "\"\<haystack\>\"", ",", "\"\<he\>\"", ",", "\"\<head\>\"", ",", 
     "\"\<headache\>\"", ",", "\"\<heal\>\"", ",", "\"\<health\>\"", ",", 
     "\"\<healthy\>\"", ",", "\"\<heap\>\"", ",", "\"\<hear\>\"", ",", 
     "\"\<hearing\>\"", ",", "\"\<heard\>\"", ",", "\"\<heart\>\"", ",", 
     "\"\<heat\>\"", ",", "\"\<heater\>\"", ",", "\"\<heaven\>\"", ",", 
     "\"\<heavy\>\"", ",", "\"\<he'd\>\"", ",", "\"\<heel\>\"", ",", 
     "\"\<height\>\"", ",", "\"\<held\>\"", ",", "\"\<hell\>\"", ",", 
     "\"\<he'll\>\"", ",", "\"\<hello\>\"", ",", "\"\<helmet\>\"", ",", 
     "\"\<help\>\"", ",", "\"\<helper\>\"", ",", "\"\<helpful\>\"", ",", 
     "\"\<hem\>\"", ",", "\"\<hen\>\"", ",", "\"\<henhouse\>\"", ",", 
     "\"\<her\>\"", ",", "\"\<hers\>\"", ",", "\"\<herd\>\"", ",", 
     "\"\<here\>\"", ",", "\"\<here's\>\"", ",", "\"\<hero\>\"", ",", 
     "\"\<herself\>\"", ",", "\"\<he's\>\"", ",", "\"\<hey\>\"", ",", 
     "\"\<hickory\>\"", ",", "\"\<hid\>\"", ",", "\"\<hidden\>\"", ",", 
     "\"\<hide\>\"", ",", "\"\<high\>\"", ",", "\"\<highway\>\"", ",", 
     "\"\<hill\>\"", ",", "\"\<hillside\>\"", ",", "\"\<hilltop\>\"", ",", 
     "\"\<hilly\>\"", ",", "\"\<him\>\"", ",", "\"\<himself\>\"", ",", 
     "\"\<hind\>\"", ",", "\"\<hint\>\"", ",", "\"\<hip\>\"", ",", 
     "\"\<hire\>\"", ",", "\"\<his\>\"", ",", "\"\<hiss\>\"", ",", 
     "\"\<history\>\"", ",", "\"\<hit\>\"", ",", "\"\<hitch\>\"", ",", 
     "\"\<hive\>\"", ",", "\"\<ho\>\"", ",", "\"\<hoe\>\"", ",", 
     "\"\<hog\>\"", ",", "\"\<hold\>\"", ",", "\"\<holder\>\"", ",", 
     "\"\<hole\>\"", ",", "\"\<holiday\>\"", ",", "\"\<hollow\>\"", ",", 
     "\"\<holy\>\"", ",", "\"\<home\>\"", ",", "\"\<homely\>\"", ",", 
     "\"\<homesick\>\"", ",", "\"\<honest\>\"", ",", "\"\<honey\>\"", ",", 
     "\"\<honeybee\>\"", ",", "\"\<honeymoon\>\"", ",", "\"\<honk\>\"", ",", 
     "\"\<honor\>\"", ",", "\"\<hood\>\"", ",", "\"\<hoof\>\"", ",", 
     "\"\<hook\>\"", ",", "\"\<hoop\>\"", ",", "\"\<hop\>\"", ",", 
     "\"\<hope\>\"", ",", "\"\<hopeful\>\"", ",", "\"\<hopeless\>\"", ",", 
     "\"\<horn\>\"", ",", "\"\<horse\>\"", ",", "\"\<horseback\>\"", ",", 
     "\"\<horseshoe\>\"", ",", "\"\<hose\>\"", ",", "\"\<hospital\>\"", ",", 
     "\"\<host\>\"", ",", "\"\<hot\>\"", ",", "\"\<hotel\>\"", ",", 
     "\"\<hound\>\"", ",", "\"\<hour\>\"", ",", "\"\<house\>\"", ",", 
     "\"\<housetop\>\"", ",", "\"\<housewife\>\"", ",", "\"\<housework\>\"", 
     ",", "\"\<how\>\"", ",", "\"\<however\>\"", ",", "\"\<howl\>\"", ",", 
     "\"\<hug\>\"", ",", "\"\<huge\>\"", ",", "\"\<hum\>\"", ",", 
     "\"\<humble\>\"", ",", "\"\<hump\>\"", ",", "\"\<hundred\>\"", ",", 
     "\"\<hung\>\"", ",", "\"\<hunger\>\"", ",", "\"\<hungry\>\"", ",", 
     "\"\<hunk\>\"", ",", "\"\<hunt\>\"", ",", "\"\<hunter\>\"", ",", 
     "\"\<hurrah\>\"", ",", "\"\<hurried\>\"", ",", "\"\<hurry\>\"", ",", 
     "\"\<hurt\>\"", ",", "\"\<husband\>\"", ",", "\"\<hush\>\"", ",", 
     "\"\<hut\>\"", ",", "\"\<hymn\>\"", ",", "\"\<I\>\"", ",", "\"\<I\>\"", 
     ",", "\"\<ice\>\"", ",", "\"\<icy\>\"", ",", "\"\<I'd\>\"", ",", 
     "\"\<idea\>\"", ",", "\"\<ideal\>\"", ",", "\"\<if\>\"", ",", 
     "\"\<ill\>\"", ",", "\"\<I'll\>\"", ",", "\"\<I'm\>\"", ",", 
     "\"\<important\>\"", ",", "\"\<impossible\>\"", ",", "\"\<improve\>\"", 
     ",", "\"\<in\>\"", ",", "\"\<inch\>\"", ",", "\"\<inches\>\"", ",", 
     "\"\<income\>\"", ",", "\"\<indeed\>\"", ",", "\"\<Indian\>\"", ",", 
     "\"\<indoors\>\"", ",", "\"\<ink\>\"", ",", "\"\<inn\>\"", ",", 
     "\"\<insect\>\"", ",", "\"\<inside\>\"", ",", "\"\<instant\>\"", ",", 
     "\"\<instead\>\"", ",", "\"\<insult\>\"", ",", "\"\<intend\>\"", ",", 
     "\"\<interested\>\"", ",", "\"\<interesting\>\"", ",", "\"\<into\>\"", 
     ",", "\"\<invite\>\"", ",", "\"\<iron\>\"", ",", "\"\<is\>\"", ",", 
     "\"\<island\>\"", ",", "\"\<isn't\>\"", ",", "\"\<it\>\"", ",", 
     "\"\<its\>\"", ",", "\"\<it's\>\"", ",", "\"\<itself\>\"", ",", 
     "\"\<I've\>\"", ",", "\"\<ivory\>\"", ",", "\"\<ivy\>\"", ",", 
     "\"\<J\>\"", ",", "\"\<jacket\>\"", ",", "\"\<jacks\>\"", ",", 
     "\"\<jail\>\"", ",", "\"\<jam\>\"", ",", "\"\<January\>\"", ",", 
     "\"\<jar\>\"", ",", "\"\<jaw\>\"", ",", "\"\<jay\>\"", ",", 
     "\"\<jelly\>\"", ",", "\"\<jellyfish\>\"", ",", "\"\<jerk\>\"", ",", 
     "\"\<jig\>\"", ",", "\"\<job\>\"", ",", "\"\<jockey\>\"", ",", 
     "\"\<join\>\"", ",", "\"\<joke\>\"", ",", "\"\<joking\>\"", ",", 
     "\"\<jolly\>\"", ",", "\"\<journey\>\"", ",", "\"\<joy\>\"", ",", 
     "\"\<joyful\>\"", ",", "\"\<joyous\>\"", ",", "\"\<judge\>\"", ",", 
     "\"\<jug\>\"", ",", "\"\<juice\>\"", ",", "\"\<juicy\>\"", ",", 
     "\"\<July\>\"", ",", "\"\<jump\>\"", ",", "\"\<June\>\"", ",", 
     "\"\<junior\>\"", ",", "\"\<junk\>\"", ",", "\"\<just\>\"", ",", 
     "\"\<K\>\"", ",", "\"\<keen\>\"", ",", "\"\<keep\>\"", ",", 
     "\"\<kept\>\"", ",", "\"\<kettle\>\"", ",", "\"\<key\>\"", ",", 
     "\"\<kick\>\"", ",", "\"\<kid\>\"", ",", "\"\<kill\>\"", ",", 
     "\"\<killed\>\"", ",", "\"\<kind\>\"", ",", "\"\<kindly\>\"", ",", 
     "\"\<kindness\>\"", ",", "\"\<king\>\"", ",", "\"\<kingdom\>\"", ",", 
     "\"\<kiss\>\"", ",", "\"\<kitchen\>\"", ",", "\"\<kite\>\"", ",", 
     "\"\<kitten\>\"", ",", "\"\<kitty\>\"", ",", "\"\<knee\>\"", ",", 
     "\"\<kneel\>\"", ",", "\"\<knew\>\"", ",", "\"\<knife\>\"", ",", 
     "\"\<knit\>\"", ",", "\"\<knives\>\"", ",", "\"\<knob\>\"", ",", 
     "\"\<knock\>\"", ",", "\"\<knot\>\"", ",", "\"\<know\>\"", ",", 
     "\"\<known\>\"", ",", "\"\<L\>\"", ",", "\"\<lace\>\"", ",", 
     "\"\<lad\>\"", ",", "\"\<ladder\>\"", ",", "\"\<ladies\>\"", ",", 
     "\"\<lady\>\"", ",", "\"\<laid\>\"", ",", "\"\<lake\>\"", ",", 
     "\"\<lamb\>\"", ",", "\"\<lame\>\"", ",", "\"\<lamp\>\"", ",", 
     "\"\<land\>\"", ",", "\"\<lane\>\"", ",", "\"\<language\>\"", ",", 
     "\"\<lantern\>\"", ",", "\"\<lap\>\"", ",", "\"\<lard\>\"", ",", 
     "\"\<large\>\"", ",", "\"\<lash\>\"", ",", "\"\<lass\>\"", ",", 
     "\"\<last\>\"", ",", "\"\<late\>\"", ",", "\"\<laugh\>\"", ",", 
     "\"\<laundry\>\"", ",", "\"\<law\>\"", ",", "\"\<lawn\>\"", ",", 
     "\"\<lawyer\>\"", ",", "\"\<lay\>\"", ",", "\"\<lazy\>\"", ",", 
     "\"\<lead\>\"", ",", "\"\<leader\>\"", ",", "\"\<leaf\>\"", ",", 
     "\"\<leak\>\"", ",", "\"\<lean\>\"", ",", "\"\<leap\>\"", ",", 
     "\"\<learn\>\"", ",", "\"\<learned\>\"", ",", "\"\<least\>\"", ",", 
     "\"\<leather\>\"", ",", "\"\<leave\>\"", ",", "\"\<leaving\>\"", ",", 
     "\"\<led\>\"", ",", "\"\<left\>\"", ",", "\"\<leg\>\"", ",", 
     "\"\<lemon\>\"", ",", "\"\<lemonade\>\"", ",", "\"\<lend\>\"", ",", 
     "\"\<length\>\"", ",", "\"\<less\>\"", ",", "\"\<lesson\>\"", ",", 
     "\"\<let\>\"", ",", "\"\<let's\>\"", ",", "\"\<letter\>\"", ",", 
     "\"\<letting\>\"", ",", "\"\<lettuce\>\"", ",", "\"\<level\>\"", ",", 
     "\"\<liberty\>\"", ",", "\"\<library\>\"", ",", "\"\<lice\>\"", ",", 
     "\"\<lick\>\"", ",", "\"\<lid\>\"", ",", "\"\<lie\>\"", ",", 
     "\"\<life\>\"", ",", "\"\<lift\>\"", ",", "\"\<light\>\"", ",", 
     "\"\<lightness\>\"", ",", "\"\<lightning\>\"", ",", "\"\<like\>\"", ",", 
     "\"\<likely\>\"", ",", "\"\<liking\>\"", ",", "\"\<lily\>\"", ",", 
     "\"\<limb\>\"", ",", "\"\<lime\>\"", ",", "\"\<limp\>\"", ",", 
     "\"\<line\>\"", ",", "\"\<linen\>\"", ",", "\"\<lion\>\"", ",", 
     "\"\<lip\>\"", ",", "\"\<list\>\"", ",", "\"\<listen\>\"", ",", 
     "\"\<lit\>\"", ",", "\"\<little\>\"", ",", "\"\<live\>\"", ",", 
     "\"\<lives\>\"", ",", "\"\<lively\>\"", ",", "\"\<liver\>\"", ",", 
     "\"\<living\>\"", ",", "\"\<lizard\>\"", ",", "\"\<load\>\"", ",", 
     "\"\<loaf\>\"", ",", "\"\<loan\>\"", ",", "\"\<loaves\>\"", ",", 
     "\"\<lock\>\"", ",", "\"\<locomotive\>\"", ",", "\"\<log\>\"", ",", 
     "\"\<lone\>\"", ",", "\"\<lonely\>\"", ",", "\"\<lonesome\>\"", ",", 
     "\"\<long\>\"", ",", "\"\<look\>\"", ",", "\"\<lookout\>\"", ",", 
     "\"\<loop\>\"", ",", "\"\<loose\>\"", ",", "\"\<lord\>\"", ",", 
     "\"\<lose\>\"", ",", "\"\<loser\>\"", ",", "\"\<loss\>\"", ",", 
     "\"\<lost\>\"", ",", "\"\<lot\>\"", ",", "\"\<loud\>\"", ",", 
     "\"\<love\>\"", ",", "\"\<lovely\>\"", ",", "\"\<lover\>\"", ",", 
     "\"\<low\>\"", ",", "\"\<luck\>\"", ",", "\"\<lucky\>\"", ",", 
     "\"\<lumber\>\"", ",", "\"\<lump\>\"", ",", "\"\<lunch\>\"", ",", 
     "\"\<lying\>\"", ",", "\"\<M\>\"", ",", "\"\<ma\>\"", ",", 
     "\"\<machine\>\"", ",", "\"\<machinery\>\"", ",", "\"\<mad\>\"", ",", 
     "\"\<made\>\"", ",", "\"\<magazine\>\"", ",", "\"\<magic\>\"", ",", 
     "\"\<maid\>\"", ",", "\"\<mail\>\"", ",", "\"\<mailbox\>\"", ",", 
     "\"\<mailman\>\"", ",", "\"\<major\>\"", ",", "\"\<make\>\"", ",", 
     "\"\<making\>\"", ",", "\"\<male\>\"", ",", "\"\<mama\>\"", ",", 
     "\"\<mamma\>\"", ",", "\"\<man\>\"", ",", "\"\<manager\>\"", ",", 
     "\"\<mane\>\"", ",", "\"\<manger\>\"", ",", "\"\<many\>\"", ",", 
     "\"\<map\>\"", ",", "\"\<maple\>\"", ",", "\"\<marble\>\"", ",", 
     "\"\<march\>\"", ",", "\"\<March\>\"", ",", "\"\<mare\>\"", ",", 
     "\"\<mark\>\"", ",", "\"\<market\>\"", ",", "\"\<marriage\>\"", ",", 
     "\"\<married\>\"", ",", "\"\<marry\>\"", ",", "\"\<mask\>\"", ",", 
     "\"\<mast\>\"", ",", "\"\<master\>\"", ",", "\"\<mat\>\"", ",", 
     "\"\<match\>\"", ",", "\"\<matter\>\"", ",", "\"\<mattress\>\"", ",", 
     "\"\<may\>\"", ",", "\"\<May\>\"", ",", "\"\<maybe\>\"", ",", 
     "\"\<mayor\>\"", ",", "\"\<maypole\>\"", ",", "\"\<me\>\"", ",", 
     "\"\<meadow\>\"", ",", "\"\<meal\>\"", ",", "\"\<mean\>\"", ",", 
     "\"\<means\>\"", ",", "\"\<meant\>\"", ",", "\"\<measure\>\"", ",", 
     "\"\<meat\>\"", ",", "\"\<medicine\>\"", ",", "\"\<meet\>\"", ",", 
     "\"\<meeting\>\"", ",", "\"\<melt\>\"", ",", "\"\<member\>\"", ",", 
     "\"\<men\>\"", ",", "\"\<mend\>\"", ",", "\"\<meow\>\"", ",", 
     "\"\<merry\>\"", ",", "\"\<mess\>\"", ",", "\"\<message\>\"", ",", 
     "\"\<met\>\"", ",", "\"\<metal\>\"", ",", "\"\<mew\>\"", ",", 
     "\"\<mice\>\"", ",", "\"\<middle\>\"", ",", "\"\<midnight\>\"", ",", 
     "\"\<might\>\"", ",", "\"\<mighty\>\"", ",", "\"\<mile\>\"", ",", 
     "\"\<milk\>\"", ",", "\"\<milkman\>\"", ",", "\"\<mill\>\"", ",", 
     "\"\<miler\>\"", ",", "\"\<million\>\"", ",", "\"\<mind\>\"", ",", 
     "\"\<mine\>\"", ",", "\"\<miner\>\"", ",", "\"\<mint\>\"", ",", 
     "\"\<minute\>\"", ",", "\"\<mirror\>\"", ",", "\"\<mischief\>\"", ",", 
     "\"\<miss\>\"", ",", "\"\<Miss\>\"", ",", "\"\<misspell\>\"", ",", 
     "\"\<mistake\>\"", ",", "\"\<misty\>\"", ",", "\"\<mitt\>\"", ",", 
     "\"\<mitten\>\"", ",", "\"\<mix\>\"", ",", "\"\<moment\>\"", ",", 
     "\"\<Monday\>\"", ",", "\"\<money\>\"", ",", "\"\<monkey\>\"", ",", 
     "\"\<month\>\"", ",", "\"\<moo\>\"", ",", "\"\<moon\>\"", ",", 
     "\"\<moonlight\>\"", ",", "\"\<moose\>\"", ",", "\"\<mop\>\"", ",", 
     "\"\<more\>\"", ",", "\"\<morning\>\"", ",", "\"\<morrow\>\"", ",", 
     "\"\<moss\>\"", ",", "\"\<most\>\"", ",", "\"\<mostly\>\"", ",", 
     "\"\<mother\>\"", ",", "\"\<motor\>\"", ",", "\"\<mount\>\"", ",", 
     "\"\<mountain\>\"", ",", "\"\<mouse\>\"", ",", "\"\<mouth\>\"", ",", 
     "\"\<move\>\"", ",", "\"\<movie\>\"", ",", "\"\<movies\>\"", ",", 
     "\"\<moving\>\"", ",", "\"\<mow\>\"", ",", "\"\<Mr.Mrs.much\>\"", ",", 
     "\"\<mud\>\"", ",", "\"\<muddy\>\"", ",", "\"\<mug\>\"", ",", 
     "\"\<mule\>\"", ",", "\"\<multiply\>\"", ",", "\"\<murder\>\"", ",", 
     "\"\<music\>\"", ",", "\"\<must\>\"", ",", "\"\<my\>\"", ",", 
     "\"\<myself\>\"", ",", "\"\<N\>\"", ",", "\"\<nail\>\"", ",", 
     "\"\<name\>\"", ",", "\"\<nap\>\"", ",", "\"\<napkin\>\"", ",", 
     "\"\<narrow\>\"", ",", "\"\<nasty\>\"", ",", "\"\<naughty\>\"", ",", 
     "\"\<navy\>\"", ",", "\"\<near\>\"", ",", "\"\<nearby\>\"", ",", 
     "\"\<nearly\>\"", ",", "\"\<neat\>\"", ",", "\"\<neck\>\"", ",", 
     "\"\<necktie\>\"", ",", "\"\<need\>\"", ",", "\"\<needle\>\"", ",", 
     "\"\<needn't\>\"", ",", "\"\<Negro\>\"", ",", "\"\<neighbor\>\"", ",", 
     "\"\<neighborhood\>\"", ",", "\"\<neither\>\"", ",", "\"\<nerve\>\"", 
     ",", "\"\<nest\>\"", ",", "\"\<net\>\"", ",", "\"\<never\>\"", ",", 
     "\"\<nevermore\>\"", ",", "\"\<new\>\"", ",", "\"\<news\>\"", ",", 
     "\"\<newspaper\>\"", ",", "\"\<next\>\"", ",", "\"\<nibble\>\"", ",", 
     "\"\<nice\>\"", ",", "\"\<nickel\>\"", ",", "\"\<night\>\"", ",", 
     "\"\<nightgown\>\"", ",", "\"\<nine\>\"", ",", "\"\<nineteen\>\"", ",", 
     "\"\<ninety\>\"", ",", "\"\<no\>\"", ",", "\"\<nobody\>\"", ",", 
     "\"\<nod\>\"", ",", "\"\<noise\>\"", ",", "\"\<noisy\>\"", ",", 
     "\"\<none\>\"", ",", "\"\<noon\>\"", ",", "\"\<nor\>\"", ",", 
     "\"\<north\>\"", ",", "\"\<northern\>\"", ",", "\"\<nose\>\"", ",", 
     "\"\<not\>\"", ",", "\"\<note\>\"", ",", "\"\<nothing\>\"", ",", 
     "\"\<notice\>\"", ",", "\"\<November\>\"", ",", "\"\<now\>\"", ",", 
     "\"\<nowhere\>\"", ",", "\"\<number\>\"", ",", "\"\<nurse\>\"", ",", 
     "\"\<nut\>\"", ",", "\"\<O\>\"", ",", "\"\<oak\>\"", ",", "\"\<oar\>\"", 
     ",", "\"\<oatmeal\>\"", ",", "\"\<oats\>\"", ",", "\"\<obey\>\"", ",", 
     "\"\<ocean\>\"", ",", "\"\<o'clock\>\"", ",", "\"\<October\>\"", ",", 
     "\"\<odd\>\"", ",", "\"\<of\>\"", ",", "\"\<off\>\"", ",", 
     "\"\<offer\>\"", ",", "\"\<office\>\"", ",", "\"\<officer\>\"", ",", 
     "\"\<often\>\"", ",", "\"\<oh\>\"", ",", "\"\<oil\>\"", ",", 
     "\"\<old\>\"", ",", "\"\<old-fashioned\>\"", ",", "\"\<on\>\"", ",", 
     "\"\<once\>\"", ",", "\"\<one\>\"", ",", "\"\<onion\>\"", ",", 
     "\"\<only\>\"", ",", "\"\<onward\>\"", ",", "\"\<open\>\"", ",", 
     "\"\<or\>\"", ",", "\"\<orange\>\"", ",", "\"\<orchard\>\"", ",", 
     "\"\<order\>\"", ",", "\"\<ore\>\"", ",", "\"\<organ\>\"", ",", 
     "\"\<other\>\"", ",", "\"\<otherwise\>\"", ",", "\"\<ouch\>\"", ",", 
     "\"\<ought\>\"", ",", "\"\<our\>\"", ",", "\"\<ours\>\"", ",", 
     "\"\<ourselves\>\"", ",", "\"\<out\>\"", ",", "\"\<outdoors\>\"", ",", 
     "\"\<outfit\>\"", ",", "\"\<outlaw\>\"", ",", "\"\<outline\>\"", ",", 
     "\"\<outside\>\"", ",", "\"\<outward\>\"", ",", "\"\<oven\>\"", ",", 
     "\"\<over\>\"", ",", "\"\<overalls\>\"", ",", "\"\<overcoat\>\"", ",", 
     "\"\<overeat\>\"", ",", "\"\<overhead\>\"", ",", "\"\<overhear\>\"", 
     ",", "\"\<overnight\>\"", ",", "\"\<overturn\>\"", ",", "\"\<owe\>\"", 
     ",", "\"\<owing\>\"", ",", "\"\<owl\>\"", ",", "\"\<own\>\"", ",", 
     "\"\<owner\>\"", ",", "\"\<ox\>\"", ",", "\"\<P\>\"", ",", "\"\<pa\>\"", 
     ",", "\"\<pace\>\"", ",", "\"\<pack\>\"", ",", "\"\<package\>\"", ",", 
     "\"\<pad\>\"", ",", "\"\<page\>\"", ",", "\"\<paid\>\"", ",", 
     "\"\<pail\>\"", ",", "\"\<pain\>\"", ",", "\"\<painful\>\"", ",", 
     "\"\<paint\>\"", ",", "\"\<painter\>\"", ",", "\"\<painting\>\"", ",", 
     "\"\<pair\>\"", ",", "\"\<pal\>\"", ",", "\"\<palace\>\"", ",", 
     "\"\<pale\>\"", ",", "\"\<pan\>\"", ",", "\"\<pancake\>\"", ",", 
     "\"\<pane\>\"", ",", "\"\<pansy\>\"", ",", "\"\<pants\>\"", ",", 
     "\"\<papa\>\"", ",", "\"\<paper\>\"", ",", "\"\<parade\>\"", ",", 
     "\"\<pardon\>\"", ",", "\"\<parent\>\"", ",", "\"\<park\>\"", ",", 
     "\"\<part\>\"", ",", "\"\<partly\>\"", ",", "\"\<partner\>\"", ",", 
     "\"\<party\>\"", ",", "\"\<pass\>\"", ",", "\"\<passenger\>\"", ",", 
     "\"\<past\>\"", ",", "\"\<paste\>\"", ",", "\"\<pasture\>\"", ",", 
     "\"\<pat\>\"", ",", "\"\<patch\>\"", ",", "\"\<path\>\"", ",", 
     "\"\<patter\>\"", ",", "\"\<pave\>\"", ",", "\"\<pavement\>\"", ",", 
     "\"\<paw\>\"", ",", "\"\<pay\>\"", ",", "\"\<payment\>\"", ",", 
     "\"\<pea\>\"", ",", "\"\<peas\>\"", ",", "\"\<peace\>\"", ",", 
     "\"\<peaceful\>\"", ",", "\"\<peach\>\"", ",", "\"\<peaches\>\"", ",", 
     "\"\<peak\>\"", ",", "\"\<peanut\>\"", ",", "\"\<pear\>\"", ",", 
     "\"\<pearl\>\"", ",", "\"\<peck\>\"", ",", "\"\<peek\>\"", ",", 
     "\"\<peel\>\"", ",", "\"\<peep\>\"", ",", "\"\<peg\>\"", ",", 
     "\"\<pen\>\"", ",", "\"\<pencil\>\"", ",", "\"\<penny\>\"", ",", 
     "\"\<people\>\"", ",", "\"\<pepper\>\"", ",", "\"\<peppermint\>\"", ",", 
     "\"\<perfume\>\"", ",", "\"\<perhaps\>\"", ",", "\"\<person\>\"", ",", 
     "\"\<pet\>\"", ",", "\"\<phone\>\"", ",", "\"\<piano\>\"", ",", 
     "\"\<pick\>\"", ",", "\"\<pickle\>\"", ",", "\"\<picnic\>\"", ",", 
     "\"\<picture\>\"", ",", "\"\<pie\>\"", ",", "\"\<piece\>\"", ",", 
     "\"\<pig\>\"", ",", "\"\<pigeon\>\"", ",", "\"\<piggy\>\"", ",", 
     "\"\<pile\>\"", ",", "\"\<pill\>\"", ",", "\"\<pillow\>\"", ",", 
     "\"\<pin\>\"", ",", "\"\<pine\>\"", ",", "\"\<pineapple\>\"", ",", 
     "\"\<pink\>\"", ",", "\"\<pint\>\"", ",", "\"\<pipe\>\"", ",", 
     "\"\<pistol\>\"", ",", "\"\<pit\>\"", ",", "\"\<pitch\>\"", ",", 
     "\"\<pitcher\>\"", ",", "\"\<pity\>\"", ",", "\"\<place\>\"", ",", 
     "\"\<plain\>\"", ",", "\"\<plan\>\"", ",", "\"\<plane\>\"", ",", 
     "\"\<plant\>\"", ",", "\"\<plate\>\"", ",", "\"\<platform\>\"", ",", 
     "\"\<platter\>\"", ",", "\"\<play\>\"", ",", "\"\<player\>\"", ",", 
     "\"\<playground\>\"", ",", "\"\<playhouse\>\"", ",", "\"\<playmate\>\"", 
     ",", "\"\<plaything\>\"", ",", "\"\<pleasant\>\"", ",", "\"\<please\>\"",
      ",", "\"\<pleasure\>\"", ",", "\"\<plenty\>\"", ",", "\"\<plow\>\"", 
     ",", "\"\<plug\>\"", ",", "\"\<plum\>\"", ",", "\"\<pocket\>\"", ",", 
     "\"\<pocketbook\>\"", ",", "\"\<poem\>\"", ",", "\"\<point\>\"", ",", 
     "\"\<poison\>\"", ",", "\"\<poke\>\"", ",", "\"\<pole\>\"", ",", 
     "\"\<police\>\"", ",", "\"\<policeman\>\"", ",", "\"\<polish\>\"", ",", 
     "\"\<polite\>\"", ",", "\"\<pond\>\"", ",", "\"\<ponies\>\"", ",", 
     "\"\<pony\>\"", ",", "\"\<pool\>\"", ",", "\"\<poor\>\"", ",", 
     "\"\<pop\>\"", ",", "\"\<popcorn\>\"", ",", "\"\<popped\>\"", ",", 
     "\"\<porch\>\"", ",", "\"\<pork\>\"", ",", "\"\<possible\>\"", ",", 
     "\"\<post\>\"", ",", "\"\<postage\>\"", ",", "\"\<postman\>\"", ",", 
     "\"\<pot\>\"", ",", "\"\<potato\>\"", ",", "\"\<potatoes\>\"", ",", 
     "\"\<pound\>\"", ",", "\"\<pour\>\"", ",", "\"\<powder\>\"", ",", 
     "\"\<power\>\"", ",", "\"\<powerful\>\"", ",", "\"\<praise\>\"", ",", 
     "\"\<pray\>\"", ",", "\"\<prayer\>\"", ",", "\"\<prepare\>\"", ",", 
     "\"\<present\>\"", ",", "\"\<pretty\>\"", ",", "\"\<price\>\"", ",", 
     "\"\<prick\>\"", ",", "\"\<prince\>\"", ",", "\"\<princess\>\"", ",", 
     "\"\<print\>\"", ",", "\"\<prison\>\"", ",", "\"\<prize\>\"", ",", 
     "\"\<promise\>\"", ",", "\"\<proper\>\"", ",", "\"\<protect\>\"", ",", 
     "\"\<proud\>\"", ",", "\"\<prove\>\"", ",", "\"\<prune\>\"", ",", 
     "\"\<public\>\"", ",", "\"\<puddle\>\"", ",", "\"\<puff\>\"", ",", 
     "\"\<pull\>\"", ",", "\"\<pump\>\"", ",", "\"\<pumpkin\>\"", ",", 
     "\"\<punch\>\"", ",", "\"\<punish\>\"", ",", "\"\<pup\>\"", ",", 
     "\"\<pupil\>\"", ",", "\"\<puppy\>\"", ",", "\"\<pure\>\"", ",", 
     "\"\<purple\>\"", ",", "\"\<purse\>\"", ",", "\"\<push\>\"", ",", 
     "\"\<puss\>\"", ",", "\"\<pussy\>\"", ",", "\"\<pussycat\>\"", ",", 
     "\"\<put\>\"", ",", "\"\<putting\>\"", ",", "\"\<puzzle\>\"", ",", 
     "\"\<Q\>\"", ",", "\"\<quack\>\"", ",", "\"\<quart\>\"", ",", 
     "\"\<quarter\>\"", ",", "\"\<queen\>\"", ",", "\"\<queer\>\"", ",", 
     "\"\<question\>\"", ",", "\"\<quick\>\"", ",", "\"\<quickly\>\"", ",", 
     "\"\<quiet\>\"", ",", "\"\<quilt\>\"", ",", "\"\<quit\>\"", ",", 
     "\"\<quite\>\"", ",", "\"\<R\>\"", ",", "\"\<rabbit\>\"", ",", 
     "\"\<race\>\"", ",", "\"\<rack\>\"", ",", "\"\<radio\>\"", ",", 
     "\"\<radish\>\"", ",", "\"\<rag\>\"", ",", "\"\<rail\>\"", ",", 
     "\"\<railroad\>\"", ",", "\"\<railway\>\"", ",", "\"\<rain\>\"", ",", 
     "\"\<rainy\>\"", ",", "\"\<rainbow\>\"", ",", "\"\<raise\>\"", ",", 
     "\"\<raisin\>\"", ",", "\"\<rake\>\"", ",", "\"\<ram\>\"", ",", 
     "\"\<ran\>\"", ",", "\"\<ranch\>\"", ",", "\"\<rang\>\"", ",", 
     "\"\<rap\>\"", ",", "\"\<rapidly\>\"", ",", "\"\<rat\>\"", ",", 
     "\"\<rate\>\"", ",", "\"\<rather\>\"", ",", "\"\<rattle\>\"", ",", 
     "\"\<raw\>\"", ",", "\"\<ray\>\"", ",", "\"\<reach\>\"", ",", 
     "\"\<read\>\"", ",", "\"\<reader\>\"", ",", "\"\<reading\>\"", ",", 
     "\"\<ready\>\"", ",", "\"\<real\>\"", ",", "\"\<really\>\"", ",", 
     "\"\<reap\>\"", ",", "\"\<rear\>\"", ",", "\"\<reason\>\"", ",", 
     "\"\<rebuild\>\"", ",", "\"\<receive\>\"", ",", "\"\<recess\>\"", ",", 
     "\"\<record\>\"", ",", "\"\<red\>\"", ",", "\"\<redbird\>\"", ",", 
     "\"\<redbreast\>\"", ",", "\"\<refuse\>\"", ",", "\"\<reindeer\>\"", 
     ",", "\"\<rejoice\>\"", ",", "\"\<remain\>\"", ",", "\"\<remember\>\"", 
     ",", "\"\<remind\>\"", ",", "\"\<remove\>\"", ",", "\"\<rent\>\"", ",", 
     "\"\<repair\>\"", ",", "\"\<repay\>\"", ",", "\"\<repeat\>\"", ",", 
     "\"\<report\>\"", ",", "\"\<rest\>\"", ",", "\"\<return\>\"", ",", 
     "\"\<review\>\"", ",", "\"\<reward\>\"", ",", "\"\<rib\>\"", ",", 
     "\"\<ribbon\>\"", ",", "\"\<rice\>\"", ",", "\"\<rich\>\"", ",", 
     "\"\<rid\>\"", ",", "\"\<riddle\>\"", ",", "\"\<ride\>\"", ",", 
     "\"\<rider\>\"", ",", "\"\<riding\>\"", ",", "\"\<right\>\"", ",", 
     "\"\<rim\>\"", ",", "\"\<ring\>\"", ",", "\"\<rip\>\"", ",", 
     "\"\<ripe\>\"", ",", "\"\<rise\>\"", ",", "\"\<rising\>\"", ",", 
     "\"\<river\>\"", ",", "\"\<road\>\"", ",", "\"\<roadside\>\"", ",", 
     "\"\<roar\>\"", ",", "\"\<roast\>\"", ",", "\"\<rob\>\"", ",", 
     "\"\<robber\>\"", ",", "\"\<robe\>\"", ",", "\"\<robin\>\"", ",", 
     "\"\<rock\>\"", ",", "\"\<rocky\>\"", ",", "\"\<rocket\>\"", ",", 
     "\"\<rode\>\"", ",", "\"\<roll\>\"", ",", "\"\<roller\>\"", ",", 
     "\"\<roof\>\"", ",", "\"\<room\>\"", ",", "\"\<rooster\>\"", ",", 
     "\"\<root\>\"", ",", "\"\<rope\>\"", ",", "\"\<rose\>\"", ",", 
     "\"\<rosebud\>\"", ",", "\"\<rot\>\"", ",", "\"\<rotten\>\"", ",", 
     "\"\<rough\>\"", ",", "\"\<round\>\"", ",", "\"\<route\>\"", ",", 
     "\"\<row\>\"", ",", "\"\<rowboat\>\"", ",", "\"\<royal\>\"", ",", 
     "\"\<rub\>\"", ",", "\"\<rubbed\>\"", ",", "\"\<rubber\>\"", ",", 
     "\"\<rubbish\>\"", ",", "\"\<rug\>\"", ",", "\"\<rule\>\"", ",", 
     "\"\<ruler\>\"", ",", "\"\<rumble\>\"", ",", "\"\<run\>\"", ",", 
     "\"\<rung\>\"", ",", "\"\<runner\>\"", ",", "\"\<running\>\"", ",", 
     "\"\<rush\>\"", ",", "\"\<rust\>\"", ",", "\"\<rusty\>\"", ",", 
     "\"\<rye\>\"", ",", "\"\<S\>\"", ",", "\"\<sack\>\"", ",", "\"\<sad\>\"",
      ",", "\"\<saddle\>\"", ",", "\"\<sadness\>\"", ",", "\"\<safe\>\"", 
     ",", "\"\<safety\>\"", ",", "\"\<said\>\"", ",", "\"\<sail\>\"", ",", 
     "\"\<sailboat\>\"", ",", "\"\<sailor\>\"", ",", "\"\<saint\>\"", ",", 
     "\"\<salad\>\"", ",", "\"\<sale\>\"", ",", "\"\<salt\>\"", ",", 
     "\"\<same\>\"", ",", "\"\<sand\>\"", ",", "\"\<sandy\>\"", ",", 
     "\"\<sandwich\>\"", ",", "\"\<sang\>\"", ",", "\"\<sank\>\"", ",", 
     "\"\<sap\>\"", ",", "\"\<sash\>\"", ",", "\"\<sat\>\"", ",", 
     "\"\<satin\>\"", ",", "\"\<satisfactory\>\"", ",", "\"\<Saturday\>\"", 
     ",", "\"\<sausage\>\"", ",", "\"\<savage\>\"", ",", "\"\<save\>\"", ",", 
     "\"\<savings\>\"", ",", "\"\<saw\>\"", ",", "\"\<say\>\"", ",", 
     "\"\<scab\>\"", ",", "\"\<scales\>\"", ",", "\"\<scare\>\"", ",", 
     "\"\<scarf\>\"", ",", "\"\<school\>\"", ",", "\"\<schoolboy\>\"", ",", 
     "\"\<schoolhouse\>\"", ",", "\"\<schoolmaster\>\"", ",", 
     "\"\<schoolroom\>\"", ",", "\"\<scorch\>\"", ",", "\"\<score\>\"", ",", 
     "\"\<scrap\>\"", ",", "\"\<scrape\>\"", ",", "\"\<scratch\>\"", ",", 
     "\"\<scream\>\"", ",", "\"\<screen\>\"", ",", "\"\<screw\>\"", ",", 
     "\"\<scrub\>\"", ",", "\"\<sea\>\"", ",", "\"\<seal\>\"", ",", 
     "\"\<seam\>\"", ",", "\"\<search\>\"", ",", "\"\<season\>\"", ",", 
     "\"\<seat\>\"", ",", "\"\<second\>\"", ",", "\"\<secret\>\"", ",", 
     "\"\<see\>\"", ",", "\"\<seeing\>\"", ",", "\"\<seed\>\"", ",", 
     "\"\<seek\>\"", ",", "\"\<seem\>\"", ",", "\"\<seen\>\"", ",", 
     "\"\<seesaw\>\"", ",", "\"\<select\>\"", ",", "\"\<self\>\"", ",", 
     "\"\<selfish\>\"", ",", "\"\<sell\>\"", ",", "\"\<send\>\"", ",", 
     "\"\<sense\>\"", ",", "\"\<sent\>\"", ",", "\"\<sentence\>\"", ",", 
     "\"\<separate\>\"", ",", "\"\<September\>\"", ",", "\"\<servant\>\"", 
     ",", "\"\<serve\>\"", ",", "\"\<service\>\"", ",", "\"\<set\>\"", ",", 
     "\"\<setting\>\"", ",", "\"\<settle\>\"", ",", "\"\<settlement\>\"", 
     ",", "\"\<seven\>\"", ",", "\"\<seventeen\>\"", ",", "\"\<seventh\>\"", 
     ",", "\"\<seventy\>\"", ",", "\"\<several\>\"", ",", "\"\<sew\>\"", ",", 
     "\"\<shade\>\"", ",", "\"\<shadow\>\"", ",", "\"\<shady\>\"", ",", 
     "\"\<shake\>\"", ",", "\"\<shaker\>\"", ",", "\"\<shaking\>\"", ",", 
     "\"\<shall\>\"", ",", "\"\<shame\>\"", ",", "\"\<shan't\>\"", ",", 
     "\"\<shape\>\"", ",", "\"\<share\>\"", ",", "\"\<sharp\>\"", ",", 
     "\"\<shave\>\"", ",", "\"\<she\>\"", ",", "\"\<she'd\>\"", ",", 
     "\"\<she'll\>\"", ",", "\"\<she's\>\"", ",", "\"\<shear\>\"", ",", 
     "\"\<shears\>\"", ",", "\"\<shed\>\"", ",", "\"\<sheep\>\"", ",", 
     "\"\<sheet\>\"", ",", "\"\<shelf\>\"", ",", "\"\<shell\>\"", ",", 
     "\"\<shepherd\>\"", ",", "\"\<shine\>\"", ",", "\"\<shining\>\"", ",", 
     "\"\<shiny\>\"", ",", "\"\<ship\>\"", ",", "\"\<shirt\>\"", ",", 
     "\"\<shock\>\"", ",", "\"\<shoe\>\"", ",", "\"\<shoemaker\>\"", ",", 
     "\"\<shone\>\"", ",", "\"\<shook\>\"", ",", "\"\<shoot\>\"", ",", 
     "\"\<shop\>\"", ",", "\"\<shopping\>\"", ",", "\"\<shore\>\"", ",", 
     "\"\<short\>\"", ",", "\"\<shot\>\"", ",", "\"\<should\>\"", ",", 
     "\"\<shoulder\>\"", ",", "\"\<shouldn't\>\"", ",", "\"\<shout\>\"", ",", 
     "\"\<shovel\>\"", ",", "\"\<show\>\"", ",", "\"\<shower\>\"", ",", 
     "\"\<shut\>\"", ",", "\"\<shy\>\"", ",", "\"\<sick\>\"", ",", 
     "\"\<sickness\>\"", ",", "\"\<side\>\"", ",", "\"\<sidewalk\>\"", ",", 
     "\"\<sideways\>\"", ",", "\"\<sigh\>\"", ",", "\"\<sight\>\"", ",", 
     "\"\<sign\>\"", ",", "\"\<silence\>\"", ",", "\"\<silent\>\"", ",", 
     "\"\<silk\>\"", ",", "\"\<sill\>\"", ",", "\"\<silly\>\"", ",", 
     "\"\<silver\>\"", ",", "\"\<simple\>\"", ",", "\"\<sin\>\"", ",", 
     "\"\<since\>\"", ",", "\"\<sing\>\"", ",", "\"\<singer\>\"", ",", 
     "\"\<single\>\"", ",", "\"\<sink\>\"", ",", "\"\<sip\>\"", ",", 
     "\"\<sir\>\"", ",", "\"\<sis\>\"", ",", "\"\<sissy\>\"", ",", 
     "\"\<sister\>\"", ",", "\"\<sit\>\"", ",", "\"\<sitting\>\"", ",", 
     "\"\<six\>\"", ",", "\"\<sixteen\>\"", ",", "\"\<sixth\>\"", ",", 
     "\"\<sixty\>\"", ",", "\"\<size\>\"", ",", "\"\<skate\>\"", ",", 
     "\"\<skater\>\"", ",", "\"\<ski\>\"", ",", "\"\<skin\>\"", ",", 
     "\"\<skip\>\"", ",", "\"\<skirt\>\"", ",", "\"\<sky\>\"", ",", 
     "\"\<slam\>\"", ",", "\"\<slap\>\"", ",", "\"\<slate\>\"", ",", 
     "\"\<slave\>\"", ",", "\"\<sled\>\"", ",", "\"\<sleep\>\"", ",", 
     "\"\<sleepy\>\"", ",", "\"\<sleeve\>\"", ",", "\"\<sleigh\>\"", ",", 
     "\"\<slept\>\"", ",", "\"\<slice\>\"", ",", "\"\<slid\>\"", ",", 
     "\"\<slide\>\"", ",", "\"\<sling\>\"", ",", "\"\<slip\>\"", ",", 
     "\"\<slipped\>\"", ",", "\"\<slipper\>\"", ",", "\"\<slippery\>\"", ",", 
     "\"\<slit\>\"", ",", "\"\<slow\>\"", ",", "\"\<slowly\>\"", ",", 
     "\"\<sly\>\"", ",", "\"\<smack\>\"", ",", "\"\<small\>\"", ",", 
     "\"\<smart\>\"", ",", "\"\<smell\>\"", ",", "\"\<smile\>\"", ",", 
     "\"\<smoke\>\"", ",", "\"\<smooth\>\"", ",", "\"\<snail\>\"", ",", 
     "\"\<snake\>\"", ",", "\"\<snap\>\"", ",", "\"\<snapping\>\"", ",", 
     "\"\<sneeze\>\"", ",", "\"\<snow\>\"", ",", "\"\<snowy\>\"", ",", 
     "\"\<snowball\>\"", ",", "\"\<snowflake\>\"", ",", "\"\<snuff\>\"", ",", 
     "\"\<snug\>\"", ",", "\"\<so\>\"", ",", "\"\<soak\>\"", ",", 
     "\"\<soap\>\"", ",", "\"\<sob\>\"", ",", "\"\<socks\>\"", ",", 
     "\"\<sod\>\"", ",", "\"\<soda\>\"", ",", "\"\<sofa\>\"", ",", 
     "\"\<soft\>\"", ",", "\"\<soil\>\"", ",", "\"\<sold\>\"", ",", 
     "\"\<soldier\>\"", ",", "\"\<sole\>\"", ",", "\"\<some\>\"", ",", 
     "\"\<somebody\>\"", ",", "\"\<somehow\>\"", ",", "\"\<someone\>\"", ",", 
     "\"\<something\>\"", ",", "\"\<sometime\>\"", ",", "\"\<sometimes\>\"", 
     ",", "\"\<somewhere\>\"", ",", "\"\<son\>\"", ",", "\"\<song\>\"", ",", 
     "\"\<soon\>\"", ",", "\"\<sore\>\"", ",", "\"\<sorrow\>\"", ",", 
     "\"\<sorry\>\"", ",", "\"\<sort\>\"", ",", "\"\<soul\>\"", ",", 
     "\"\<sound\>\"", ",", "\"\<soup\>\"", ",", "\"\<sour\>\"", ",", 
     "\"\<south\>\"", ",", "\"\<southern\>\"", ",", "\"\<space\>\"", ",", 
     "\"\<spade\>\"", ",", "\"\<spank\>\"", ",", "\"\<sparrow\>\"", ",", 
     "\"\<speak\>\"", ",", "\"\<speaker\>\"", ",", "\"\<spear\>\"", ",", 
     "\"\<speech\>\"", ",", "\"\<speed\>\"", ",", "\"\<spell\>\"", ",", 
     "\"\<spelling\>\"", ",", "\"\<spend\>\"", ",", "\"\<spent\>\"", ",", 
     "\"\<spider\>\"", ",", "\"\<spike\>\"", ",", "\"\<spill\>\"", ",", 
     "\"\<spin\>\"", ",", "\"\<spinach\>\"", ",", "\"\<spirit\>\"", ",", 
     "\"\<spit\>\"", ",", "\"\<splash\>\"", ",", "\"\<spoil\>\"", ",", 
     "\"\<spoke\>\"", ",", "\"\<spook\>\"", ",", "\"\<spoon\>\"", ",", 
     "\"\<sport\>\"", ",", "\"\<spot\>\"", ",", "\"\<spread\>\"", ",", 
     "\"\<spring\>\"", ",", "\"\<springtime\>\"", ",", "\"\<sprinkle\>\"", 
     ",", "\"\<square\>\"", ",", "\"\<squash\>\"", ",", "\"\<squeak\>\"", 
     ",", "\"\<squeeze\>\"", ",", "\"\<squirrel\>\"", ",", "\"\<stable\>\"", 
     ",", "\"\<stack\>\"", ",", "\"\<stage\>\"", ",", "\"\<stair\>\"", ",", 
     "\"\<stall\>\"", ",", "\"\<stamp\>\"", ",", "\"\<stand\>\"", ",", 
     "\"\<star\>\"", ",", "\"\<stare\>\"", ",", "\"\<start\>\"", ",", 
     "\"\<starve\>\"", ",", "\"\<state\>\"", ",", "\"\<station\>\"", ",", 
     "\"\<stay\>\"", ",", "\"\<steak\>\"", ",", "\"\<steal\>\"", ",", 
     "\"\<steam\>\"", ",", "\"\<steamboat\>\"", ",", "\"\<steamer\>\"", ",", 
     "\"\<steel\>\"", ",", "\"\<steep\>\"", ",", "\"\<steeple\>\"", ",", 
     "\"\<steer\>\"", ",", "\"\<stem\>\"", ",", "\"\<step\>\"", ",", 
     "\"\<stepping\>\"", ",", "\"\<stick\>\"", ",", "\"\<sticky\>\"", ",", 
     "\"\<stiff\>\"", ",", "\"\<still\>\"", ",", "\"\<stillness\>\"", ",", 
     "\"\<sting\>\"", ",", "\"\<stir\>\"", ",", "\"\<stitch\>\"", ",", 
     "\"\<stock\>\"", ",", "\"\<stocking\>\"", ",", "\"\<stole\>\"", ",", 
     "\"\<stone\>\"", ",", "\"\<stood\>\"", ",", "\"\<stool\>\"", ",", 
     "\"\<stoop\>\"", ",", "\"\<stop\>\"", ",", "\"\<stopped\>\"", ",", 
     "\"\<stopping\>\"", ",", "\"\<store\>\"", ",", "\"\<stork\>\"", ",", 
     "\"\<stories\>\"", ",", "\"\<storm\>\"", ",", "\"\<stormy\>\"", ",", 
     "\"\<story\>\"", ",", "\"\<stove\>\"", ",", "\"\<straight\>\"", ",", 
     "\"\<strange\>\"", ",", "\"\<stranger\>\"", ",", "\"\<strap\>\"", ",", 
     "\"\<straw\>\"", ",", "\"\<strawberry\>\"", ",", "\"\<stream\>\"", ",", 
     "\"\<street\>\"", ",", "\"\<stretch\>\"", ",", "\"\<string\>\"", ",", 
     "\"\<strip\>\"", ",", "\"\<stripes\>\"", ",", "\"\<strong\>\"", ",", 
     "\"\<stuck\>\"", ",", "\"\<study\>\"", ",", "\"\<stuff\>\"", ",", 
     "\"\<stump\>\"", ",", "\"\<stung\>\"", ",", "\"\<subject\>\"", ",", 
     "\"\<such\>\"", ",", "\"\<suck\>\"", ",", "\"\<sudden\>\"", ",", 
     "\"\<suffer\>\"", ",", "\"\<sugar\>\"", ",", "\"\<suit\>\"", ",", 
     "\"\<sum\>\"", ",", "\"\<summer\>\"", ",", "\"\<sun\>\"", ",", 
     "\"\<Sunday\>\"", ",", "\"\<sunflower\>\"", ",", "\"\<sung\>\"", ",", 
     "\"\<sunk\>\"", ",", "\"\<sunlight\>\"", ",", "\"\<sunny\>\"", ",", 
     "\"\<sunrise\>\"", ",", "\"\<sunset\>\"", ",", "\"\<sunshine\>\"", ",", 
     "\"\<supper\>\"", ",", "\"\<suppose\>\"", ",", "\"\<sure\>\"", ",", 
     "\"\<surely\>\"", ",", "\"\<surface\>\"", ",", "\"\<surprise\>\"", ",", 
     "\"\<swallow\>\"", ",", "\"\<swam\>\"", ",", "\"\<swamp\>\"", ",", 
     "\"\<swan\>\"", ",", "\"\<swat\>\"", ",", "\"\<swear\>\"", ",", 
     "\"\<sweat\>\"", ",", "\"\<sweater\>\"", ",", "\"\<sweep\>\"", ",", 
     "\"\<sweet\>\"", ",", "\"\<sweetness\>\"", ",", "\"\<sweetheart\>\"", 
     ",", "\"\<swell\>\"", ",", "\"\<swept\>\"", ",", "\"\<swift\>\"", ",", 
     "\"\<swim\>\"", ",", "\"\<swimming\>\"", ",", "\"\<swing\>\"", ",", 
     "\"\<switch\>\"", ",", "\"\<sword\>\"", ",", "\"\<swore\>\"", ",", 
     "\"\<T\>\"", ",", "\"\<table\>\"", ",", "\"\<tablecloth\>\"", ",", 
     "\"\<tablespoon\>\"", ",", "\"\<tablet\>\"", ",", "\"\<tack\>\"", ",", 
     "\"\<tag\>\"", ",", "\"\<tail\>\"", ",", "\"\<tailor\>\"", ",", 
     "\"\<take\>\"", ",", "\"\<taken\>\"", ",", "\"\<taking\>\"", ",", 
     "\"\<tale\>\"", ",", "\"\<talk\>\"", ",", "\"\<talker\>\"", ",", 
     "\"\<tall\>\"", ",", "\"\<tame\>\"", ",", "\"\<tan\>\"", ",", 
     "\"\<tank\>\"", ",", "\"\<tap\>\"", ",", "\"\<tape\>\"", ",", 
     "\"\<tar\>\"", ",", "\"\<tardy\>\"", ",", "\"\<task\>\"", ",", 
     "\"\<taste\>\"", ",", "\"\<taught\>\"", ",", "\"\<tax\>\"", ",", 
     "\"\<tea\>\"", ",", "\"\<teach\>\"", ",", "\"\<teacher\>\"", ",", 
     "\"\<team\>\"", ",", "\"\<tear\>\"", ",", "\"\<tease\>\"", ",", 
     "\"\<teaspoon\>\"", ",", "\"\<teeth\>\"", ",", "\"\<telephone\>\"", ",", 
     "\"\<tell\>\"", ",", "\"\<temper\>\"", ",", "\"\<ten\>\"", ",", 
     "\"\<tennis\>\"", ",", "\"\<tent\>\"", ",", "\"\<term\>\"", ",", 
     "\"\<terrible\>\"", ",", "\"\<test\>\"", ",", "\"\<than\>\"", ",", 
     "\"\<thank\>\"", ",", "\"\<thanks\>\"", ",", "\"\<thankful\>\"", ",", 
     "\"\<Thanksgiving\>\"", ",", "\"\<that\>\"", ",", "\"\<that's\>\"", ",", 
     "\"\<the\>\"", ",", "\"\<theater\>\"", ",", "\"\<thee\>\"", ",", 
     "\"\<their\>\"", ",", "\"\<them\>\"", ",", "\"\<then\>\"", ",", 
     "\"\<there\>\"", ",", "\"\<these\>\"", ",", "\"\<they\>\"", ",", 
     "\"\<they'd\>\"", ",", "\"\<they'll\>\"", ",", "\"\<they're\>\"", ",", 
     "\"\<they've\>\"", ",", "\"\<thick\>\"", ",", "\"\<thief\>\"", ",", 
     "\"\<thimble\>\"", ",", "\"\<thin\>\"", ",", "\"\<thing\>\"", ",", 
     "\"\<think\>\"", ",", "\"\<third\>\"", ",", "\"\<thirsty\>\"", ",", 
     "\"\<thirteen\>\"", ",", "\"\<thirty\>\"", ",", "\"\<this\>\"", ",", 
     "\"\<thorn\>\"", ",", "\"\<those\>\"", ",", "\"\<though\>\"", ",", 
     "\"\<thought\>\"", ",", "\"\<thousand\>\"", ",", "\"\<thread\>\"", ",", 
     "\"\<three\>\"", ",", "\"\<threw\>\"", ",", "\"\<throat\>\"", ",", 
     "\"\<throne\>\"", ",", "\"\<through\>\"", ",", "\"\<throw\>\"", ",", 
     "\"\<thrown\>\"", ",", "\"\<thumb\>\"", ",", "\"\<thunder\>\"", ",", 
     "\"\<Thursday\>\"", ",", "\"\<thy\>\"", ",", "\"\<tick\>\"", ",", 
     "\"\<ticket\>\"", ",", "\"\<tickle\>\"", ",", "\"\<tie\>\"", ",", 
     "\"\<tiger\>\"", ",", "\"\<tight\>\"", ",", "\"\<till\>\"", ",", 
     "\"\<time\>\"", ",", "\"\<tin\>\"", ",", "\"\<tinkle\>\"", ",", 
     "\"\<tiny\>\"", ",", "\"\<tip\>\"", ",", "\"\<tiptoe\>\"", ",", 
     "\"\<tire\>\"", ",", "\"\<tired\>\"", ",", "\"\<title\>\"", ",", 
     "\"\<to\>\"", ",", "\"\<toad\>\"", ",", "\"\<toadstool\>\"", ",", 
     "\"\<toast\>\"", ",", "\"\<tobacco\>\"", ",", "\"\<today\>\"", ",", 
     "\"\<toe\>\"", ",", "\"\<together\>\"", ",", "\"\<toilet\>\"", ",", 
     "\"\<told\>\"", ",", "\"\<tomato\>\"", ",", "\"\<tomorrow\>\"", ",", 
     "\"\<ton\>\"", ",", "\"\<tone\>\"", ",", "\"\<tongue\>\"", ",", 
     "\"\<tonight\>\"", ",", "\"\<too\>\"", ",", "\"\<took\>\"", ",", 
     "\"\<tool\>\"", ",", "\"\<toot\>\"", ",", "\"\<tooth\>\"", ",", 
     "\"\<toothbrush\>\"", ",", "\"\<toothpick\>\"", ",", "\"\<top\>\"", ",", 
     "\"\<tore\>\"", ",", "\"\<torn\>\"", ",", "\"\<toss\>\"", ",", 
     "\"\<touch\>\"", ",", "\"\<tow\>\"", ",", "\"\<toward\>\"", ",", 
     "\"\<towards\>\"", ",", "\"\<towel\>\"", ",", "\"\<tower\>\"", ",", 
     "\"\<town\>\"", ",", "\"\<toy\>\"", ",", "\"\<trace\>\"", ",", 
     "\"\<track\>\"", ",", "\"\<trade\>\"", ",", "\"\<train\>\"", ",", 
     "\"\<tramp\>\"", ",", "\"\<trap\>\"", ",", "\"\<tray\>\"", ",", 
     "\"\<treasure\>\"", ",", "\"\<treat\>\"", ",", "\"\<tree\>\"", ",", 
     "\"\<trick\>\"", ",", "\"\<tricycle\>\"", ",", "\"\<tried\>\"", ",", 
     "\"\<trim\>\"", ",", "\"\<trip\>\"", ",", "\"\<trolley\>\"", ",", 
     "\"\<trouble\>\"", ",", "\"\<truck\>\"", ",", "\"\<true\>\"", ",", 
     "\"\<truly\>\"", ",", "\"\<trunk\>\"", ",", "\"\<trust\>\"", ",", 
     "\"\<truth\>\"", ",", "\"\<try\>\"", ",", "\"\<tub\>\"", ",", 
     "\"\<Tuesday\>\"", ",", "\"\<tug\>\"", ",", "\"\<tulip\>\"", ",", 
     "\"\<tumble\>\"", ",", "\"\<tune\>\"", ",", "\"\<tunnel\>\"", ",", 
     "\"\<turkey\>\"", ",", "\"\<turn\>\"", ",", "\"\<turtle\>\"", ",", 
     "\"\<twelve\>\"", ",", "\"\<twenty\>\"", ",", "\"\<twice\>\"", ",", 
     "\"\<twig\>\"", ",", "\"\<twin\>\"", ",", "\"\<two\>\"", ",", 
     "\"\<U\>\"", ",", "\"\<ugly\>\"", ",", "\"\<umbrella\>\"", ",", 
     "\"\<uncle\>\"", ",", "\"\<under\>\"", ",", "\"\<understand\>\"", ",", 
     "\"\<underwear\>\"", ",", "\"\<undress\>\"", ",", "\"\<unfair\>\"", ",", 
     "\"\<unfinished\>\"", ",", "\"\<unfold\>\"", ",", "\"\<unfriendly\>\"", 
     ",", "\"\<unhappy\>\"", ",", "\"\<unhurt\>\"", ",", "\"\<uniform\>\"", 
     ",", "\"\<United\>\"", ",", "\"\<States\>\"", ",", "\"\<unkind\>\"", 
     ",", "\"\<unknown\>\"", ",", "\"\<unless\>\"", ",", "\"\<unpleasant\>\"",
      ",", "\"\<until\>\"", ",", "\"\<unwilling\>\"", ",", "\"\<up\>\"", ",", 
     "\"\<upon\>\"", ",", "\"\<upper\>\"", ",", "\"\<upset\>\"", ",", 
     "\"\<upside\>\"", ",", "\"\<upstairs\>\"", ",", "\"\<uptown\>\"", ",", 
     "\"\<upward\>\"", ",", "\"\<us\>\"", ",", "\"\<use\>\"", ",", 
     "\"\<used\>\"", ",", "\"\<useful\>\"", ",", "\"\<V\>\"", ",", 
     "\"\<valentine\>\"", ",", "\"\<valley\>\"", ",", "\"\<valuable\>\"", 
     ",", "\"\<value\>\"", ",", "\"\<vase\>\"", ",", "\"\<vegetable\>\"", 
     ",", "\"\<velvet\>\"", ",", "\"\<very\>\"", ",", "\"\<vessel\>\"", ",", 
     "\"\<victory\>\"", ",", "\"\<view\>\"", ",", "\"\<village\>\"", ",", 
     "\"\<vine\>\"", ",", "\"\<violet\>\"", ",", "\"\<visit\>\"", ",", 
     "\"\<visitor\>\"", ",", "\"\<voice\>\"", ",", "\"\<vote\>\"", ",", 
     "\"\<W\>\"", ",", "\"\<wag\>\"", ",", "\"\<wagon\>\"", ",", 
     "\"\<waist\>\"", ",", "\"\<wait\>\"", ",", "\"\<wake\>\"", ",", 
     "\"\<waken\>\"", ",", "\"\<walk\>\"", ",", "\"\<wall\>\"", ",", 
     "\"\<walnut\>\"", ",", "\"\<want\>\"", ",", "\"\<war\>\"", ",", 
     "\"\<warm\>\"", ",", "\"\<warn\>\"", ",", "\"\<was\>\"", ",", 
     "\"\<wash\>\"", ",", "\"\<washer\>\"", ",", "\"\<washtub\>\"", ",", 
     "\"\<wasn't\>\"", ",", "\"\<waste\>\"", ",", "\"\<watch\>\"", ",", 
     "\"\<watchman\>\"", ",", "\"\<water\>\"", ",", "\"\<watermelon\>\"", 
     ",", "\"\<waterproof\>\"", ",", "\"\<wave\>\"", ",", "\"\<wax\>\"", ",", 
     "\"\<way\>\"", ",", "\"\<wayside\>\"", ",", "\"\<we\>\"", ",", 
     "\"\<weak\>\"", ",", "\"\<weakness\>\"", ",", "\"\<weaken\>\"", ",", 
     "\"\<wealth\>\"", ",", "\"\<weapon\>\"", ",", "\"\<wear\>\"", ",", 
     "\"\<weary\>\"", ",", "\"\<weather\>\"", ",", "\"\<weave\>\"", ",", 
     "\"\<web\>\"", ",", "\"\<we'd\>\"", ",", "\"\<wedding\>\"", ",", 
     "\"\<Wednesday\>\"", ",", "\"\<wee\>\"", ",", "\"\<weed\>\"", ",", 
     "\"\<week\>\"", ",", "\"\<we'll\>\"", ",", "\"\<weep\>\"", ",", 
     "\"\<weigh\>\"", ",", "\"\<welcome\>\"", ",", "\"\<well\>\"", ",", 
     "\"\<went\>\"", ",", "\"\<were\>\"", ",", "\"\<we're\>\"", ",", 
     "\"\<west\>\"", ",", "\"\<western\>\"", ",", "\"\<wet\>\"", ",", 
     "\"\<we've\>\"", ",", "\"\<whale\>\"", ",", "\"\<what\>\"", ",", 
     "\"\<what's\>\"", ",", "\"\<wheat\>\"", ",", "\"\<wheel\>\"", ",", 
     "\"\<when\>\"", ",", "\"\<whenever\>\"", ",", "\"\<where\>\"", ",", 
     "\"\<which\>\"", ",", "\"\<while\>\"", ",", "\"\<whip\>\"", ",", 
     "\"\<whipped\>\"", ",", "\"\<whirl\>\"", ",", "\"\<whisky\>\"", ",", 
     "\"\<whiskey\>\"", ",", "\"\<whisper\>\"", ",", "\"\<whistle\>\"", ",", 
     "\"\<white\>\"", ",", "\"\<who\>\"", ",", "\"\<who'd\>\"", ",", 
     "\"\<whole\>\"", ",", "\"\<who'll\>\"", ",", "\"\<whom\>\"", ",", 
     "\"\<who's\>\"", ",", "\"\<whose\>\"", ",", "\"\<why\>\"", ",", 
     "\"\<wicked\>\"", ",", "\"\<wide\>\"", ",", "\"\<wife\>\"", ",", 
     "\"\<wiggle\>\"", ",", "\"\<wild\>\"", ",", "\"\<wildcat\>\"", ",", 
     "\"\<will\>\"", ",", "\"\<willing\>\"", ",", "\"\<willow\>\"", ",", 
     "\"\<win\>\"", ",", "\"\<wind\>\"", ",", "\"\<windy\>\"", ",", 
     "\"\<windmill\>\"", ",", "\"\<window\>\"", ",", "\"\<wine\>\"", ",", 
     "\"\<wing\>\"", ",", "\"\<wink\>\"", ",", "\"\<winner\>\"", ",", 
     "\"\<winter\>\"", ",", "\"\<wipe\>\"", ",", "\"\<wire\>\"", ",", 
     "\"\<wise\>\"", ",", "\"\<wish\>\"", ",", "\"\<wit\>\"", ",", 
     "\"\<witch\>\"", ",", "\"\<with\>\"", ",", "\"\<without\>\"", ",", 
     "\"\<woke\>\"", ",", "\"\<wolf\>\"", ",", "\"\<woman\>\"", ",", 
     "\"\<women\>\"", ",", "\"\<won\>\"", ",", "\"\<wonder\>\"", ",", 
     "\"\<wonderful\>\"", ",", "\"\<won't\>\"", ",", "\"\<wood\>\"", ",", 
     "\"\<wooden\>\"", ",", "\"\<woodpecker\>\"", ",", "\"\<woods\>\"", ",", 
     "\"\<wool\>\"", ",", "\"\<woolen\>\"", ",", "\"\<word\>\"", ",", 
     "\"\<wore\>\"", ",", "\"\<work\>\"", ",", "\"\<worker\>\"", ",", 
     "\"\<workman\>\"", ",", "\"\<world\>\"", ",", "\"\<worm\>\"", ",", 
     "\"\<worn\>\"", ",", "\"\<worry\>\"", ",", "\"\<worse\>\"", ",", 
     "\"\<worst\>\"", ",", "\"\<worth\>\"", ",", "\"\<would\>\"", ",", 
     "\"\<wouldn't\>\"", ",", "\"\<wound\>\"", ",", "\"\<wove\>\"", ",", 
     "\"\<wrap\>\"", ",", "\"\<wrapped\>\"", ",", "\"\<wreck\>\"", ",", 
     "\"\<wren\>\"", ",", "\"\<wring\>\"", ",", "\"\<write\>\"", ",", 
     "\"\<writing\>\"", ",", "\"\<written\>\"", ",", "\"\<wrong\>\"", ",", 
     "\"\<wrote\>\"", ",", "\"\<wrung\>\"", ",", "\"\<X-Y\>\"", ",", 
     "\"\<yard\>\"", ",", "\"\<yarn\>\"", ",", "\"\<year\>\"", ",", 
     "\"\<yell\>\"", ",", "\"\<yellow\>\"", ",", "\"\<yes\>\"", ",", 
     "\"\<yesterday\>\"", ",", "\"\<yet\>\"", ",", "\"\<yolk\>\"", ",", 
     "\"\<yonder\>\"", ",", "\"\<you\>\"", ",", "\"\<you'd\>\"", ",", 
     "\"\<you'll\>\"", ",", "\"\<young\>\"", ",", "\"\<youngster\>\"", ",", 
     "\"\<your\>\"", ",", "\"\<yours\>\"", ",", "\"\<you're\>\"", ",", 
     "\"\<yourself\>\"", ",", "\"\<yourselves\>\"", ",", "\"\<youth\>\"", 
     ",", "\"\<you've\>\"", ",", "\"\<Z\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676848006493142*^9, 3.676848035402315*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Student Essays", "Subsection",
 CellChangeTimes->{{3.6768480883579483`*^9, 3.6768480913000183`*^9}}],

Cell[CellGroupData[{

Cell["student 1", "Subsubsection",
 CellChangeTimes->{{3.676848772422607*^9, 3.676848775677061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "colby", " ", "=", " ", 
   "\"\<I think New london would be better if people Rode bikes instead of\n\
cars.People exersize,there would be No exsaust,and it would be so much fun!\n\
I think Bikes would be Better than cars because you would get\nexesize.if \
your driving a car,all your doing is Pushing the gas and breaks.Plus there's \
the risk of crashing into another car and DIE! But if you crash your \
Bike,there's a 0000000000.1 percent chane that you will die.Biking is also \
better than Driving Because Bikes don't give out\nexshust.But cars do.if we a \
drove cars,the hole world would be COVERED in\nexshust.Biking is also Better \
than cars,Because if you and your friend had\na bike race,you wouldn't have \
to worry about Being hit By a car.And,you could do 360's,front flips,can \
cans,Bike parkour!\nSo,did I prove that Bikes are Better than cars?I hope I \
did,or\nI'll have to write this all over again.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colbyadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I think New London would be better if people rode bikes instead of \
cars.  People exercise, there would be no exhaust, and it would be so much \
fun!\n\\tI think bikes would be better than cars because you would get\n\
exercise.  If you're driving a car, all you're doing is pushing the gas and \
breaks.\n\\tPlus there's the risk of crashing into another car and DIE!  But \
if\nyou crash your bike, there's a 0000000000.1 percent chance that you will \
die.\n\\tBiking is also better than driving because bikes don't give out \n\
exhaust, but cars do.  If we drove cars, the whole world would be COVERED in \
exhaust.\n\\tBiking is also better than cars because if you and your friend \
had a\nbike race, you wouldn't have to worry about being hit by a car.  And, \
you could do 360's. front flips, can-cans, bike parcour!\n\\tSo, did I prove \
that bikes are better than cars?  I hope I did, or\nI'll have to write this \
all over again.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colrubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], " ", "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67684811451857*^9, 3.6768482371819077`*^9}, 
   3.676848445430262*^9, {3.676848753061201*^9, 3.676848753646172*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6768487515585537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["student 2", "Subsubsection",
 CellChangeTimes->{{3.6768487859671097`*^9, 3.676848787550692*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "unknown1", " ", "=", " ", 
   "\"\<I think that ten is a good age because.  There responsible, they can \
call and some know what to do if some thing happens.  I think ten is good \
because there responsible.  Example they wont wreck things and wont get get \
into trouble like six year olds.\\nTen is pretty good because most can call.  \
Calling can save them our if if something happens like a fire for an instint \
no little kid could do that but ten year olds can.\\nTen is pretty good \
because.  They know what to do if something happens.  If a fire happens they \
know what to do they'll call 911 and go out side and wait.  But six year olds \
could not do that but ten can.  They know not to let strangers in inless is a \
relitive or family they know.\\nThat is why I think ten is a good age and any \
age above.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "unknown1adj", " ", "=", " ", 
   "\"\<I think that ten is a good age because. They're responsible, they can \
call and some know what to do if something happens.  I think ten is good \
because they're responsible.  Example: they won't wreck things and won't get \
get into trouble like six year olds.\\nTen is pretty good because most can \
call.  Calling can save them if something happens like a fire for an instant. \
No little kid could do that but ten year olds can.\\nTen is pretty good \
because yhey know what to do if something happens.  If a fire happens, they \
know what to do. They'll call 911 and go outside and wait.  But six year olds \
could not do that but ten can.  They know not to let strangers in unless it \
is a relitive or family they know.\\nThat is why I think ten is a good age \
and any age above.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unknown1rubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], " ", "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676848798849782*^9, 3.676848852810419*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 3", "Subsubsection",
 CellChangeTimes->{{3.676852231796897*^9, 3.676852233339196*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"homealone", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<My opinion is you are old enough to stay home alone when you are \
twelve and older because then you are more mature.  It all depends on your \
age, your parents, and your level of maturity, and how long you're home \
alone.\\nWhen you're twelve you could stay alone for 30 minutes depending on \
your parents' flexibility.  They may let you stay 45 minutes if you're \
twelve.\\nKids eleven years and under are less mature and may not stay home \
alone because they are more likely to cause a mess and do bad things when \
unattended than the kids twelve and up.\\nTwelve and up are more mature \
because they are least likely to make a mess and do bad things.  They also \
understand they should respect their household and their parents.\\nThis \
shows my opinionated reasons on the age you can stay home alone, and if you \
have different opinions, that's great.  I'm not saying \\\"You have to be \
twelve.\\\"  I'm just saying, there are many great opinionated reasons out \
there, and when you're an adult, you can use your own opinion.  And those are \
my reasons you should be twelve before staying home alone.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"homealoneadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<My opinion is you are old enough to stay home alone when you are \
twelve and older because then you are more mature.  It all depends on your \
age, your parents, and your level of maturity, and how long you're home \
alone.\\nWhen you're twelve you could stay alone for 30 minutes depending on \
your parents' flexibility.  They may let you stay 45 minutes if you're \
twelve.\\nKids eleven years and under are less mature and may not stay home \
alone because they are more likely to cause a mess and do bad things when \
unattended than the kids twelve and up.\\nTwelve and up are more mature \
because they are least likely to make a mess and do bad things.  They also \
understand they should respect their household and their parents.\\nThis \
shows my opinionated reasons on the age you can stay home alone, and if you \
have different opinions, that's great.  I'm not saying \\\"You have to be \
twelve.\\\"  I'm just saying, there are many great opinionated reasons out \
there, and when you're an adult, you can use your own opinion.  And those are \
my reasons you should be twelve before staying home alone.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"homealonerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}]}], " ", "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676848874409086*^9, 3.676848952618594*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y10", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I think you should at least be ten or older for just a few \
hours.\\nBut eleven if with yonger sibling under seven if older then seven \
ten.\\nIf over night alone thirteen because you have to make dinner.\\nIf \
there alone they Better be safe so lock the door don't do stuff you are not \
supposto do that meens no eating lots of candy or jumping off your deck unles \
theres lots of snow on the grownd.\\nBut most inportant be mucher that meens \
don't be dum.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10adj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I think you should at least be ten or older for just a few \
hours.\\nBut eleven if with younger siblings under seven. If older, than \
seven ten.  If overnight alone, thirteen because you have to make \
dinner.\\nIf they're alone they better be safe so lock the door. Don't do \
stuff you are not supposed to do. That meens no eating lots of candy or \
jumping off your deck unles theres lots of snow on the ground.\\nBut most \
important be mucher that meens don't be dumb.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10rubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], " ", "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6768489982028027`*^9, 3.676849039077408*^9}, {
  3.6768491896375723`*^9, 3.676849190220838*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electronics", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<You will read five reasons when you would be a great stay-home \
kid.\\nWhen you stay home alone at my house, my parents expecked us not to \
eat junk food or we will get in trouble.\\nMy parents don't like us to play \
with matches because 40% of the time when kids stay home and play with \
matches they end up lighting their house on fire.\\nI started staying home \
alone when I was 10 because they (my parents) have to trust me before I stay \
home alone by my self.\\nMy parents exepecked me to do my homework (If I have \
homework) before I play on the elektronecks or watch TV.\\nI can only play \
electronicks for less than an hour in a row.\\nThis is my opion so it mite \
not work for your kids.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electronicsadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<You will read five reasons when you would be a great stay-home \
kid.\\nWhen you stay home alone at my house, my parents expect us not to eat \
junk food or we will get into trouble.\\nMy parents don't like us to play \
with matches because 40% of the time when kids stay home and play with \
matches they end up lighting their house on fire.\\nI started staying home \
alone when I was 10 because they (my parents) have to trust me before I stay \
home alone by myself.\\nMy parents exepectme to do my homework (If I have \
homework) before I play on the electronics or watch TV.\\nI can only play \
electronics for less than an hour in a row.\\nThis is my opionion so it might \
not work for your kids.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electronicsrubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676849226416771*^9, 3.676849271674252*^9}, {
  3.6768493082152348`*^9, 3.676849390480872*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"savannahcole", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I am supost to tell you what age I think kids should be aloud to \
stay home alone.  I think that age is \\\"11\\\".  I think that because of 4 \
reasons.  My first reason is because there is a baby sitting couras and you \
have to be \\\"11\\\" and up.  So staying home alone is baby sitting your \
self.  You also get a book to remember if you forget.  That was the first \
reason on to the second.  In school when your 10 and 11 you learn what is a \
good choice as in should you eat that.  Should I wimp of the roof, they no \
whats rong and bad so you should trust them more and know they will be ok.  \
Are you perswade yet if not I highley prefer you keep reading more reasons \
why you should let your kid or kids should get to stay home at the age \\\"11\
\\\".  one reason your kid should stay home alone is \\\"11\\\" is the age \
that kids start to mutchure and know what to do in a emergencey and knowing \
what safe means.  If you are still uncomterbull leaving you child alone at \
eleven you need to learn to trust them.  The last reason is 11 is the age \
theyre mutchure and that thats the age the follow rules nowing that theres \
consuquences for breaking rules.  I hope you agree with me on some of these \
reasons and trust your child more thank you for reading this 5 perigraff \
righting prompt.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savannahcoleadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I am supposed to tell you what age I think kids should be alowed to \
stay home alone.  I think that age is \\\"11\\\".  I think that because of 4 \
reasons.  My first reason is because there is a baby sitting course and you \
have to be \\\"11\\\" and up.  So staying home alone is baby sitting your \
self.  You also get a book to remember if you forget.  That was the first \
reason, on to the second.  In school, when you're 10 and 11 you learn what is \
a good choice as in should you eat that.  Should I wimp of the roof? They \
know whats wrong and bad so you should trust them more and know they will be \
ok.  Are you persuaded yet? If not, I highly prefer you keep reading more \
reasons why you should let your kid or kids should get to stay home at the \
age \\\"11\\\".  One reason your kid should stay home alone is \\\"11\\\" is \
the age that kids start to mature and know what to do in a emergencey and \
knowing what safe means.  If you are still uncomfortable leaving you child \
alone at eleven you need to learn to trust them.  The last reason is 11 is \
the age they're mature and that that's the age they follow rules knowing that \
there's consuquences for breaking rules.  I hope you agree with me on some of \
these reasons and trust your child more. Thank you for reading this 5 \
paragraph writing prompt.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savannahcolerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676849400058432*^9, 3.6768494491941442`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"responsible", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I'm going to give you 4 reasons that 10 is a responsible age to stay \
home alone.  I think 10 is a responsible age to stay alone because when you \
turn 10 your parents will think that you are responsible to stay home.  You \
need to now what to do if a stranger comes to your house.  If you don't know \
what to do if a stranger comes you should not stay home alone.  I believe \
that at the age of 10 you would know what to do.  At the age of 10 you will \
want to stay home by your self and your parents will trust you.  You should \
learn what to do at a cindove yonge age because then when you do do it for a \
long time you will know what to do.  If you don't like the sound of silents \
then you should do something to distacte you like TV, game facetime a friend. \
 Inconclushoin I think 10 is the age to stay home alone because you are \
responsible.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"responsibleadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I'm going to give you 4 reasons that 10 is a responsible age to stay \
home alone.  I think 10 is a responsible age to stay alone because when you \
turn 10 your parents will think that you are responsible to stay home.  You \
need to know what to do if a stranger comes to your house.  If you don't know \
what to do if a stranger comes you should not stay home alone.  I believe \
that at the age of 10 you would know what to do.  At the age of 10 you will \
want to stay home by yourself and your parents will trust you.  You should \
learn what to do at a kind of yonge age because then when you do do it for a \
long time you will know what to do.  If you don't like the sound of silence \
then you should do something to distract you like TV, game,  facetime a \
friend.  In conclusion, I think 10 is the age to stay home alone because you \
are responsible.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"responsiblerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676849470243009*^9, 3.6768495260993357`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zee", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<Ones I was at a beach I was bored I told my mom I was going to go \
explore the beach. And now the story begins, when im exploring I look behind \
rocks and under them and all sorts of places, then suddenly I saw something \
and gess what it was? a pear of sun glasses! I know I needed a new pear of \
sun glasses. So I put them on and gess what hapend? I was in a difrent \
demenchien. sundenly I saw a Hawk Iran but the Just stayed were I was in \
fright. I look at my self as if chaned? But I did\[CloseCurlyQuote]t I look \
behind me there was a lon I backed away, wate saod the loin if you dod\
\[CloseCurlyQuote]t tacke those sun glasses of in a min-it you\
\[CloseCurlyQuote]ll be stuck in this world forever, Itock them of I was back \
at the beach Iran to my mom with the glasses in my hand. when I got back to \
my mom I said these glasses are mageical. she did\[CloseCurlyQuote]t beleve \
me so I put them on her she was gone in that world she took them of she was \
back. I wocke up yay I said it was just a dream. The end.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeeadj", "=", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<Once I was at a beach I was bored.  I told my mom I was going to go \
explore the beach. And now the story begins.   When I\[CloseCurlyQuote]m \
exploring, I look behind rocks and under them and all sorts of places. \
Suddenly I saw something and guess what it was?  A pair of sunglasses! I know \
I needed a new pair of sunglasses.  So I put them on and guess what happened? \
 I was in a different dimension.  Suddenly I saw a hawk.  I ran, but the hawk \
just stayed where I was in fright. I look at myself as if changed? But I didn\
\[CloseCurlyQuote]t.  I looked behind me.  There was a lion.  I backed away, \
\[OpenCurlyDoubleQuote]Wait\[CloseCurlyDoubleQuote] said the lion.  If you \
don\[CloseCurlyQuote]t take those sunglasses off in a minute, you\
\[CloseCurlyQuote]ll be stuck in this world forever.   I took them off.  I \
was back at the beach.  I ran to my mom with the glasses in my hand. When I \
got back to my mom I said these glasses are magical.  She didn\
\[CloseCurlyQuote]t believe me so I put them on her.  She was gone in that \
world and when she took them off she was back. I woke up.  \
\[OpenCurlyDoubleQuote]Yay!\[CloseCurlyDoubleQuote], I said.  It was just a \
dream. The end.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6768495495920897`*^9, 3.676849591886818*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"glasses", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I put the glasses on.I went on a train,the train was going over a \
bridge.I saw something.The bridge was brockin,I had to do something,the train \
was getting closer and closer!!! I had to save the train! I ran and ran until \
I got to the door,I opened the door.I jumped out onto the train tracks.I ran \
so fast it was faster than the train and I yelled stop,stop,stop the \
train.The train squealed to a stop.Then the sentroil line was comeing and the \
union Pacific was on it's way and the esella express was coming I was like \
what should|doll! The glasses had a butin I pressed the butin it yelled \
stop!! to all the train and I noticed there was another butin and I pressed \
it.That buttin yelled stop your train now other wise youl.crassll!!!!! the \
trains stopped! The next day|colled a train with a crane and tools,wood,and \
meddle to come and fix the bridge they put scicerity came ras-ap so that \
wodent happen again,they finished in 4 weeks.Then the train went over the \
bridge was fixed made the train track to lane so trains could get over \
kwickleyer trains went over allot! Somday that will happen again when I got \
the station there we're my mom and dad I told them all about it they did not \
belive me! Well then ok you don't belive me unless you go with me the next \
time your coming with me in twenty years.I drove in a car to go home good bye \
train good bye.When years passed bye sied common mom common dad were going on \
atrip.dad asked what train|Seid the esella express.Okseid dad yes seid mom! \
dad seid I'll pack mom seid I'll get the tickets I will get the car ready one \
hour later we were in the car heading to the station.When we're at the \
station.we were rite on time the train was 1 minute early we we're the first \
people there we drove are car onto the car cart then we we're all setlled.30 \
minutes later.The train was laed up and all ready to go.Honk! Honk! Went the \
train Here we go Said mom.the train was full of cars.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassesadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I put the glasses on.  I went on a train, the train was going over a \
bridge. I saw something. The bridge was broken.  I had to do something.  The \
train was getting closer and closer!!! I had to save the train! I ran and ran \
until I got to the door.  I opened the door. I jumped out onto the train \
tracks. I ran so fast.  It was faster than the train and I yelled stop, stop, \
stop the train. The train squealed to a stop. Then the central line was \
coming and the Union Pacific was on it's way and the Esella express was \
coming. I was like, \[OpenCurlyDoubleQuote]What should I do?\
\[CloseCurlyDoubleQuote] The glasses had a button.  I pressed the button.  It \
yelled stop!! to all the train and I noticed there was another button and I \
pressed it. That button yelled stop your train now otherwise you\
\[CloseCurlyQuote]ll crash!!!!!! The trains stopped! The next day I called a \
train with a crane and tools, wood, and meddle to come and fix the bridge. \
They put security cameras up so that wouldn\[CloseCurlyQuote]t happen again.  \
They finished in 4 weeks. Then the train went over the bridge was fixed made \
the train track to lane so trains could get over quicklier. Trains went over \
a lot!  Someday that will happen again. When I got the station there were my \
mom and dad.  I told them all about it.  They did not believe me! Well then, \
ok you don't believe me unless you go with me the next time you\
\[CloseCurlyQuote]re coming with me in twenty years. I drove in a car to go \
home.  Goodbye train, goodbye. When years passed by said come on mom, come on \
dad, we\[CloseCurlyQuote]re going on a trip.  Dad asked what train.  I said \
the Esella Express. \[OpenCurlyDoubleQuote]Ok\[CloseCurlyDoubleQuote] said \
dad.  \[OpenCurlyDoubleQuote]Yes\[CloseCurlyDoubleQuote] said mom! Dad said \
\[OpenCurlyDoubleQuote]I'll pack.\[CloseCurlyDoubleQuote] Mom said \
\[OpenCurlyDoubleQuote]I'll get the tickets.\[CloseCurlyDoubleQuote] I will \
get the car ready. One hour later we were in the car heading to the station. \
When we're at the station, we were right on time. The train was 1 minute \
early. We were the first people there. We drove our car onto the car cart \
then we we're all settled. 30 minutes later the train was loaded up and all \
ready to go. Honk! Honk! Went the train \[OpenCurlyDoubleQuote]Here we go\
\[CloseCurlyDoubleQuote], said mom. the train was full of cars. There was a \
little girl named Roxy. Roxy was in the Park. Roxy saw a pair of glasses by \
the slide. Roxy walked over the slide. Roxy picked up the glasses and Put \
them on.  Wonderful thing happened to Roxy. Roxy was so HAPPY!!! Roxy said \
hello to everyone. Roxy smiled all day. Roxy was nice to everyone, even \
Roxy's very mad mom. Roxy's mom was confused. Lala, Roxy's friend noticed \
that the sunglasses were Magical. So Lala Ran to Roxy and said take off the \
glasses please and Roxy said no. So Lala pulled off the glasses and threw \
them away. Then Roxy was back to normal again. Roxy was glad the glasses were \
off. Then Abby the janitor was emptying the trash at the end of the day, and \
found them Abby looked at them and left them alone because they did not fit \
Abby. So Abby threw them in the dumpster and that was the end off the pair of \
glasses.\n\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassesrubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676849617588923*^9, 3.676849656647705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"glasspare", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<There was a little Girl named Roxy. roxy saw a Pare of glasses By \
the slide. Roxy woked over the slide.  Roxy picked up the glasses and Put \
them on.  Wonderful thing happened to Roxy.  Roxy was so HAPPY!!  Roxy sed \
helo to every one.  Roxy smiled all Day.  Roxy was nice to evry one even Roxy\
\[CloseCurlyQuote]s very mad Mom.  Roxy\[CloseCurlyQuote]s Mom was confused.  \
Lala Roxy\[CloseCurlyQuote]s friend notesed that the sun glasses were \
Magical.  So Lala Ran to Roxy and sed tack off the glasses Pleas and Roxy sed \
no.  So Lala Pulled off the glasses and threw them away.  Then Roxy was back \
to Normal agen.  Roxy was glad the glasses were off.  Then Abby the ganeter \
was empteing the trash at the end of the Day. and found them Abby looked at \
them and left them alone Becous thay Did not fit Abby.  So Abby threw them in \
the Dumpsters and that was the end of the Pare of glasses.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glasspareadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<There was a little girl named Roxy. Roxy was in the Park. Roxy saw a \
pair of glasses by the slide. Roxy walked over the slide. Roxy picked up the \
glasses and Put them on.  Wonderful thing happened to Roxy. Roxy was so \
HAPPY!!! Roxy said hello to everyone. Roxy smiled all day. Roxy was nice to \
everyone, even Roxy's very mad mom. Roxy's mom was confused. Lala, Roxy's \
friend noticed that the sunglasses were Magical. So Lala Ran to Roxy and said \
take off the glasses please and Roxy said no. So Lala pulled off the glasses \
and threw them away. Then Roxy was back to normal again. Roxy was glad the \
glasses were off. Then Abby the janitor was emptying the trash at the end of \
the day, and found them Abby looked at them and left them alone because they \
did not fit Abby. So Abby threw them in the dumpster and that was the end off \
the pair of glasses.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassparerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676849680532655*^9, 3.676849690158607*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 4", "Subsubsection",
 CellChangeTimes->{{3.676855795893942*^9, 3.6768557976688423`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y10", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I think you should at least be ten or older for just a few \
hours.\\nBut eleven if with yonger sibling under seven if older then seven \
ten.\\nIf over night alone thirteen because you have to make dinner.\\nIf \
there alone they Better be safe so lock the door don't do stuff you are not \
supposto do that meens no eating lots of candy or jumping off your deck unles \
theres lots of snow on the grownd.\\nBut most inportant be mucher that meens \
don't be dum.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10adj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I think you should at least be ten or older for just a few \
hours.\\nBut eleven if with younger siblings under seven. If older, than \
seven ten.  If overnight alone, thirteen because you have to make \
dinner.\\nIf they're alone they better be safe so lock the door. Don't do \
stuff you are not supposed to do. That meens no eating lots of candy or \
jumping off your deck unles theres lots of snow on the ground.\\nBut most \
important be mucher that meens don't be dumb.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10rubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], " ", "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67685581272044*^9, 3.67685587344265*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 5", "Subsubsection",
 CellChangeTimes->{{3.676855884564406*^9, 3.676855886058375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electronics", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<You will read five reasons when you would be a great stay-home \
kid.\\nWhen you stay home alone at my house, my parents expecked us not to \
eat junk food or we will get in trouble.\\nMy parents don't like us to play \
with matches because 40% of the time when kids stay home and play with \
matches they end up lighting their house on fire.\\nI started staying home \
alone when I was 10 because they (my parents) have to trust me before I stay \
home alone by my self.\\nMy parents exepecked me to do my homework (If I have \
homework) before I play on the elektronecks or watch TV.\\nI can only play \
electronicks for less than an hour in a row.\\nThis is my opion so it mite \
not work for your kids.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electronicsadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<You will read five reasons when you would be a great stay-home \
kid.\\nWhen you stay home alone at my house, my parents expect us not to eat \
junk food or we will get into trouble.\\nMy parents don't like us to play \
with matches because 40% of the time when kids stay home and play with \
matches they end up lighting their house on fire.\\nI started staying home \
alone when I was 10 because they (my parents) have to trust me before I stay \
home alone by myself.\\nMy parents exepectme to do my homework (If I have \
homework) before I play on the electronics or watch TV.\\nI can only play \
electronics for less than an hour in a row.\\nThis is my opionion so it might \
not work for your kids.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electronicsrubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6768558981188917`*^9, 3.676855942105866*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 6", "Subsubsection",
 CellChangeTimes->{{3.676855952034383*^9, 3.676855954520402*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"savannahcole", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I am supost to tell you what age I think kids should be aloud to \
stay home alone.  I think that age is \\\"11\\\".  I think that because of 4 \
reasons.  My first reason is because there is a baby sitting couras and you \
have to be \\\"11\\\" and up.  So staying home alone is baby sitting your \
self.  You also get a book to remember if you forget.  That was the first \
reason on to the second.  In school when your 10 and 11 you learn what is a \
good choice as in should you eat that.  Should I wimp of the roof, they no \
whats rong and bad so you should trust them more and know they will be ok.  \
Are you perswade yet if not I highley prefer you keep reading more reasons \
why you should let your kid or kids should get to stay home at the age \\\"11\
\\\".  one reason your kid should stay home alone is \\\"11\\\" is the age \
that kids start to mutchure and know what to do in a emergencey and knowing \
what safe means.  If you are still uncomterbull leaving you child alone at \
eleven you need to learn to trust them.  The last reason is 11 is the age \
theyre mutchure and that thats the age the follow rules nowing that theres \
consuquences for breaking rules.  I hope you agree with me on some of these \
reasons and trust your child more thank you for reading this 5 perigraff \
righting prompt.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savannahcoleadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I am supposed to tell you what age I think kids should be alowed to \
stay home alone.  I think that age is \\\"11\\\".  I think that because of 4 \
reasons.  My first reason is because there is a baby sitting course and you \
have to be \\\"11\\\" and up.  So staying home alone is baby sitting your \
self.  You also get a book to remember if you forget.  That was the first \
reason, on to the second.  In school, when you're 10 and 11 you learn what is \
a good choice as in should you eat that.  Should I wimp of the roof? They \
know whats wrong and bad so you should trust them more and know they will be \
ok.  Are you persuaded yet? If not, I highly prefer you keep reading more \
reasons why you should let your kid or kids should get to stay home at the \
age \\\"11\\\".  One reason your kid should stay home alone is \\\"11\\\" is \
the age that kids start to mature and know what to do in a emergencey and \
knowing what safe means.  If you are still uncomfortable leaving you child \
alone at eleven you need to learn to trust them.  The last reason is 11 is \
the age they're mature and that that's the age they follow rules knowing that \
there's consuquences for breaking rules.  I hope you agree with me on some of \
these reasons and trust your child more. Thank you for reading this 5 \
paragraph writing prompt.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savannahcolerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "this", " ", "had", " ", "an", " ", "extra", " ", "mark", " ", 
       "\"\<D\>\""}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676855971469119*^9, 3.676856021405889*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 7", "Subsubsection",
 CellChangeTimes->{{3.6768564744851522`*^9, 3.676856476171973*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"responsible", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I'm going to give you 4 reasons that 10 is a responsible age to stay \
home alone.  I think 10 is a responsible age to stay alone because when you \
turn 10 your parents will think that you are responsible to stay home.  You \
need to now what to do if a stranger comes to your house.  If you don't know \
what to do if a stranger comes you should not stay home alone.  I believe \
that at the age of 10 you would know what to do.  At the age of 10 you will \
want to stay home by your self and your parents will trust you.  You should \
learn what to do at a cindove yonge age because then when you do do it for a \
long time you will know what to do.  If you don't like the sound of silents \
then you should do something to distacte you like TV, game facetime a friend. \
 Inconclushoin I think 10 is the age to stay home alone because you are \
responsible.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"responsibleadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I'm going to give you 4 reasons that 10 is a responsible age to stay \
home alone.  I think 10 is a responsible age to stay alone because when you \
turn 10 your parents will think that you are responsible to stay home.  You \
need to know what to do if a stranger comes to your house.  If you don't know \
what to do if a stranger comes you should not stay home alone.  I believe \
that at the age of 10 you would know what to do.  At the age of 10 you will \
want to stay home by yourself and your parents will trust you.  You should \
learn what to do at a kind of yonge age because then when you do do it for a \
long time you will know what to do.  If you don't like the sound of silence \
then you should do something to distract you like TV, game,  facetime a \
friend.  In conclusion, I think 10 is the age to stay home alone because you \
are responsible.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"responsiblerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "5"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67685603486305*^9, 3.676856066065777*^9}, {
  3.676856096949946*^9, 3.676856107265378*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 8", "Subsubsection",
 CellChangeTimes->{{3.676856559283332*^9, 3.6768565608415947`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zee", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<Ones I was at a beach I was bored I told my mom I was going to go \
explore the beach. And now the story begins, when im exploring I look behind \
rocks and under them and all sorts of places, then suddenly I saw something \
and gess what it was? a pear of sun glasses! I know I needed a new pear of \
sun glasses. So I put them on and gess what hapend? I was in a difrent \
demenchien. sundenly I saw a Hawk Iran but the Just stayed were I was in \
fright. I look at my self as if chaned? But I did\[CloseCurlyQuote]t I look \
behind me there was a lon I backed away, wate saod the loin if you dod\
\[CloseCurlyQuote]t tacke those sun glasses of in a min-it you\
\[CloseCurlyQuote]ll be stuck in this world forever, Itock them of I was back \
at the beach Iran to my mom with the glasses in my hand. when I got back to \
my mom I said these glasses are mageical. she did\[CloseCurlyQuote]t beleve \
me so I put them on her she was gone in that world she took them of she was \
back. I wocke up yay I said it was just a dream. The end.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeeadj", "=", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<Once I was at a beach I was bored.  I told my mom I was going to go \
explore the beach. And now the story begins.   When I\[CloseCurlyQuote]m \
exploring, I look behind rocks and under them and all sorts of places. \
Suddenly I saw something and guess what it was?  A pair of sunglasses! I know \
I needed a new pair of sunglasses.  So I put them on and guess what happened? \
 I was in a different dimension.  Suddenly I saw a hawk.  I ran, but the hawk \
just stayed where I was in fright. I look at myself as if changed? But I didn\
\[CloseCurlyQuote]t.  I looked behind me.  There was a lion.  I backed away, \
\[OpenCurlyDoubleQuote]Wait\[CloseCurlyDoubleQuote] said the lion.  If you \
don\[CloseCurlyQuote]t take those sunglasses off in a minute, you\
\[CloseCurlyQuote]ll be stuck in this world forever.   I took them off.  I \
was back at the beach.  I ran to my mom with the glasses in my hand. When I \
got back to my mom I said these glasses are magical.  She didn\
\[CloseCurlyQuote]t believe me so I put them on her.  She was gone in that \
world and when she took them off she was back. I woke up.  \
\[OpenCurlyDoubleQuote]Yay!\[CloseCurlyDoubleQuote], I said.  It was just a \
dream. The end.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "4"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "4"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676856506259903*^9, 3.676856515033575*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 9", "Subsubsection",
 CellChangeTimes->{{3.676856542987692*^9, 3.6768565658575783`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"glasses", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<I put the glasses on.I went on a train,the train was going over a \
bridge.I saw something.The bridge was brockin,I had to do something,the train \
was getting closer and closer!!! I had to save the train! I ran and ran until \
I got to the door,I opened the door.I jumped out onto the train tracks.I ran \
so fast it was faster than the train and I yelled stop,stop,stop the \
train.The train squealed to a stop.Then the sentroil line was comeing and the \
union Pacific was on it's way and the esella express was coming I was like \
what should|doll! The glasses had a butin I pressed the butin it yelled \
stop!! to all the train and I noticed there was another butin and I pressed \
it.That buttin yelled stop your train now other wise youl.crassll!!!!! the \
trains stopped! The next day|colled a train with a crane and tools,wood,and \
meddle to come and fix the bridge they put scicerity came ras-ap so that \
wodent happen again,they finished in 4 weeks.Then the train went over the \
bridge was fixed made the train track to lane so trains could get over \
kwickleyer trains went over allot! Somday that will happen again when I got \
the station there we're my mom and dad I told them all about it they did not \
belive me! Well then ok you don't belive me unless you go with me the next \
time your coming with me in twenty years.I drove in a car to go home good bye \
train good bye.When years passed bye sied common mom common dad were going on \
atrip.dad asked what train|Seid the esella express.Okseid dad yes seid mom! \
dad seid I'll pack mom seid I'll get the tickets I will get the car ready one \
hour later we were in the car heading to the station.When we're at the \
station.we were rite on time the train was 1 minute early we we're the first \
people there we drove are car onto the car cart then we we're all setlled.30 \
minutes later.The train was laed up and all ready to go.Honk! Honk! Went the \
train Here we go Said mom.the train was full of cars.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassesadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<| put the glasses on.  I went on a train, the train was going over a \
bridge. I saw something. The bridge was broken.  I had to do something.  The \
train was getting closer and closer!!! I had to save the train! I ran and ran \
until I got to the door.  I opened the door. I jumped out onto the train \
tracks. I ran so fast.  It was faster than the train and I yelled stop, stop, \
stop the train. The train squealed to a stop. Then the central line was \
coming and the Union Pacific was on it's way and the Esella express was \
coming. I was like, \[OpenCurlyDoubleQuote]What should I do?\
\[CloseCurlyDoubleQuote] The glasses had a button.  I pressed the button.  It \
yelled stop!! to all the train and I noticed there was another button and I \
pressed it. That button yelled stop your train now otherwise you\
\[CloseCurlyQuote]ll crash!!!!!! The trains stopped! The next day I called a \
train with a crane and tools, wood, and meddle to come and fix the bridge. \
They put security cameras up so that wouldn\[CloseCurlyQuote]t happen again.  \
They finished in 4 weeks. Then the train went over the bridge was fixed made \
the train track to lane so trains could get over quicklier. Trains went over \
a lot!  Someday that will happen again. When I got the station there were my \
mom and dad.  I told them all about it.  They did not believe me! Well then, \
ok you don't believe me unless you go with me the next time you\
\[CloseCurlyQuote]re coming with me in twenty years. I drove in a car to go \
home.  Goodbye train, goodbye. When years passed by said come on mom, come on \
dad, we\[CloseCurlyQuote]re going on a trip.  Dad asked what train.  I said \
the Esella Express. \[OpenCurlyDoubleQuote]Ok\[CloseCurlyDoubleQuote] said \
dad.  \[OpenCurlyDoubleQuote]Yes\[CloseCurlyDoubleQuote] said mom! Dad said \
\[OpenCurlyDoubleQuote]I'll pack.\[CloseCurlyDoubleQuote] Mom said \
\[OpenCurlyDoubleQuote]I'll get the tickets.\[CloseCurlyDoubleQuote] I will \
get the car ready. One hour later we were in the car heading to the station. \
When we're at the station, we were right on time. The train was 1 minute \
early. We were the first people there. We drove our car onto the car cart \
then we we're all settled. 30 minutes later the train was loaded up and all \
ready to go. Honk! Honk! Went the train \[OpenCurlyDoubleQuote]Here we go\
\[CloseCurlyDoubleQuote], said mom. the train was full of cars. There was a \
little girl named Roxy. Roxy was in the Park. Roxy saw a pair of glasses by \
the slide. Roxy walked over the slide. Roxy picked up the glasses and Put \
them on.  Wonderful thing happened to Roxy. Roxy was so HAPPY!!! Roxy said \
hello to everyone. Roxy smiled all day. Roxy was nice to everyone, even \
Roxy's very mad mom. Roxy's mom was confused. Lala, Roxy's friend noticed \
that the sunglasses were Magical. So Lala Ran to Roxy and said take off the \
glasses please and Roxy said no. So Lala pulled off the glasses and threw \
them away. Then Roxy was back to normal again. Roxy was glad the glasses were \
off. Then Abby the janitor was emptying the trash at the end of the day, and \
found them Abby looked at them and left them alone because they did not fit \
Abby. So Abby threw them in the dumpster and that was the end off the pair of \
glasses.\n\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassesrubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6768565879448853`*^9, 3.676856602391568*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["student 10", "Subsubsection",
 CellChangeTimes->{{3.6768566248975286`*^9, 3.676856643567696*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"glasspare", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<There was a little Girl named Roxy. roxy saw a Pare of glasses By \
the slide. Roxy woked over the slide.  Roxy picked up the glasses and Put \
them on.  Wonderful thing happened to Roxy.  Roxy was so HAPPY!!  Roxy sed \
helo to every one.  Roxy smiled all Day.  Roxy was nice to evry one even Roxy\
\[CloseCurlyQuote]s very mad Mom.  Roxy\[CloseCurlyQuote]s Mom was confused.  \
Lala Roxy\[CloseCurlyQuote]s friend notesed that the sun glasses were \
Magical.  So Lala Ran to Roxy and sed tack off the glasses Pleas and Roxy sed \
no.  So Lala Pulled off the glasses and threw them away.  Then Roxy was back \
to Normal agen.  Roxy was glad the glasses were off.  Then Abby the ganeter \
was empteing the trash at the end of the Day. and found them Abby looked at \
them and left them alone Becous thay Did not fit Abby.  So Abby threw them in \
the Dumpsters and that was the end of the Pare of glasses.\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glasspareadj", " ", "=", " ", 
   RowBox[{
   "StringTrim", "[", 
    "\"\<There was a little girl named Roxy. Roxy was in the Park. Roxy saw a \
pair of glasses by the slide. Roxy walked over the slide. Roxy picked up the \
glasses and Put them on.  Wonderful thing happened to Roxy. Roxy was so \
HAPPY!!! Roxy said hello to everyone. Roxy smiled all day. Roxy was nice to \
everyone, even Roxy's very mad mom. Roxy's mom was confused. Lala, Roxy's \
friend noticed that the sunglasses were Magical. So Lala Ran to Roxy and said \
take off the glasses please and Roxy said no. So Lala pulled off the glasses \
and threw them away. Then Roxy was back to normal again. Roxy was glad the \
glasses were off. Then Abby the janitor was emptying the trash at the end of \
the day, and found them Abby looked at them and left them alone because they \
did not fit Abby. So Abby threw them in the dumpster and that was the end off \
the pair of glasses.\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glassparerubric", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "1"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "3"}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
        RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", "2"}]}], "|>"}]}]}], 
    "|>"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6768566541981487`*^9, 3.6768566622299843`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Database Setup and Initialization", "Subsection",
 CellChangeTimes->{{3.676808205022427*^9, 3.6768082248515377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "unknown1", ",", " ", "\"\<unknown\>\"", ",", "3", ",", " ", 
       "\"\<Ten Year Olds\>\"", ",", " ", "unknown1adj", ",", " ", 
       "unknown1rubric"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "homealone", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", " ", 
       "\"\<Are You Old Enough to Stay Home Alone?\>\"", ",", " ", 
       "homealoneadj", ",", " ", "homealonerubric"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "y10", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", " ", 
       "\"\<Year Ten\>\"", ",", " ", "y10adj", ",", " ", "y10rubric"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "electronics", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", " ", 
       "\"\<Electronics\>\"", ",", " ", "electronicsadj", ",", " ", 
       "electronicsrubric"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "savannahcole", ",", " ", "\"\<Savannah Cole\>\"", ",", " ", "3", ",", 
       " ", "\"\<Staying Home\>\"", ",", " ", "savannahcoleadj", ",", " ", 
       "savannahcolerubric"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "responsible", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", " ", 
       "\"\<We are Responsible\>\"", ",", " ", "responsibleadj", ",", " ", 
       "responsiblerubric"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "zee", ",", " ", "\"\<Zee E.\>\"", ",", " ", "3", ",", " ", 
       "\"\<unknown\>\"", ",", " ", "zeeadj", ",", "zeerubric"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
      "glasses", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", 
       "\"\<unknown\>\"", ",", " ", "glassesadj", ",", " ", "glassesrubric"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "glasspare", ",", " ", "\"\<unknown\>\"", ",", " ", "3", ",", 
       "\"\<unknown\>\"", ",", " ", "glasspareadj", ",", " ", 
       "glassparerubric"}], "}"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Calculation Functions", "Subsubsection",
 CellChangeTimes->{{3.676849923994644*^9, 3.676849928200542*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"readability", "[", "essay_String", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"characters", " ", "=", " ", 
       RowBox[{
        RowBox[{"StringTrim", "[", 
         RowBox[{"Characters", "[", "essay", "]"}], "]"}], "//", "Length"}]}],
       ",", " ", 
      RowBox[{"words", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "[", "essay", "]"}], "//", "TextWords"}], "//",
         "Length"}]}], ",", " ", 
      RowBox[{"sentences", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "[", "essay", "]"}], "//", "TextSentences"}], "//",
         "Length"}]}], ",", "\n", "\t", 
      RowBox[{"syllables", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"WordData", "[", 
            RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
          RowBox[{"TextWords", "[", "essay", "]"}]}], "//", "Flatten"}], "//",
         "Length"}]}], ",", "\n", "\t", 
      RowBox[{"polysyllables", " ", "=", " ", 
       RowBox[{
        RowBox[{"Counts", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"WordData", "[", 
              RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "]"}], ">", 
            "2"}], "&"}], "/@", 
          RowBox[{"TextWords", "[", "essay", "]"}]}], "]"}], "[", "True", 
        "]"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"<|", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\"\<ARI\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"4.71", 
          RowBox[{"(", 
           RowBox[{"characters", "/", "words"}], ")"}]}], "+", 
         RowBox[{"0.5", 
          RowBox[{"(", 
           RowBox[{"words", "/", "sentences"}], ")"}]}], "-", "21.43"}], 
        "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Dale-Chall\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.1579", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Intersection", "[", 
               RowBox[{
                RowBox[{"TextWords", "[", "essay", "]"}], ",", "dclist"}], 
               "]"}], " ", "//", "Length"}], ")"}], "/", "words"}], " ", "*", 
           " ", "100"}], ")"}], " ", "+", " ", 
         RowBox[{"0.0496", "*", 
          RowBox[{"(", 
           RowBox[{"words", "/", "sentences"}], ")"}]}]}], "]"}]}], ",", "\n",
       "\t\t", 
      RowBox[{"\"\<FleschRE\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{"206.835", "-", 
         RowBox[{"1.015", "*", 
          RowBox[{"(", 
           RowBox[{"words", "/", "sentences"}], ")"}]}], "-", 
         RowBox[{"84.6", 
          RowBox[{"(", 
           RowBox[{"syllables", "/", "words"}], ")"}]}]}], "]"}]}], ",", "\n",
       "\t\t", 
      RowBox[{"\"\<Flesch-Kincaid\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"0.39", "*", 
          RowBox[{"(", 
           RowBox[{"words", "/", "sentences"}], ")"}]}], " ", "+", " ", 
         RowBox[{"11.8", 
          RowBox[{"(", 
           RowBox[{"syllables", "/", "words"}], ")"}]}], "-", "15.59"}], 
        "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Gunning-Fog\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{"0.4", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"words", "/", "sentences"}], ")"}], "+", 
           RowBox[{"100", 
            RowBox[{"(", 
             RowBox[{"polysyllables", "/", "sentences"}], ")"}]}]}], ")"}]}], 
        "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\"\<SMOG\>\"", " ", "->", " ", 
       RowBox[{"N", "[", 
        RowBox[{"1.0430", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"polysyllables", "*", 
             RowBox[{"(", 
              RowBox[{"30", "/", "sentences"}], ")"}]}], ")"}], "+", 
           "3.1291"}], "]"}]}], "]"}]}]}], " ", "|>"}]}], "\n", "\t", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67680792211174*^9, 3.676807922114135*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gramerrs", "[", "essay_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "rules", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rules", " ", "=", " ", 
      RowBox[{"<|", " ", 
       RowBox[{"URLExecute", "[", 
        RowBox[{"URLBuild", "[", 
         RowBox[{"\"\<https://languagetool.org/api/v2/check\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<language\>\"", " ", "\[Rule]", " ", "\"\<en-US\>\""}], ",", 
            RowBox[{"\"\<text\>\"", "\[Rule]", "essay"}]}], "}"}]}], "]"}], 
        "]"}], " ", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rules", "[", "\"\<matches\>\"", "]"}], "//", "Length"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"derived", "[", "essay_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<WordsPerSentence\>\"", " ", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"TextWords", "[", "essay", "]"}], "]"}], "/", 
           RowBox[{"Length", "[", 
            RowBox[{"TextSentences", "[", "essay", "]"}], "]"}]}]}], "//", 
         "N"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<CharactersPerWord\>\"", " ", "\[Rule]", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Characters", "[", 
            RowBox[{"StringTrim", "[", "essay", "]"}], "]"}], "]"}], "/", 
          RowBox[{"Length", "[", 
           RowBox[{"TextWords", "[", "essay", "]"}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<SyllablesPerWord\>\"", " ", "\[Rule]", 
         RowBox[{"Length", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"WordData", "[", 
              RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
            RowBox[{"TextWords", "[", "essay", "]"}]}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<SpellingErrors\>\"", " ", "\[Rule]", 
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"TextWords", "[", "essay", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"SpellingCorrectionList", "[", "#", "]"}], "]"}], ">", 
              "1"}], "&"}]}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<GrammarCorrections\>\"", " ", "\[Rule]", " ", 
         RowBox[{"gramerrs", "[", "essay", "]"}]}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"colbori", " ", "=", " ", 
   RowBox[{"Through", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"readability", ",", "derived"}], "}"}], "[", " ", "colby", 
     "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"colbadj", " ", "=", " ", 
   RowBox[{"Through", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"readability", ",", "derived"}], "}"}], "[", "colbyadj", "]"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"datastart", " ", "=", " ", 
   RowBox[{"Dataset", "[", 
    RowBox[{"<|", " ", 
     RowBox[{"1", " ", "\[Rule]", " ", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Student\>\"", " ", "\[Rule]", " ", 
         RowBox[{"<|", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<Name\>\"", " ", "\[Rule]", "\"\<Colby Ellis\>\""}], 
           ",", " ", 
           RowBox[{"\"\<Grade\>\"", " ", "\[Rule]", " ", "3"}]}], " ", 
          "|>"}]}], " ", ",", "\[IndentingNewLine]", " ", 
        RowBox[{
        "\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<Bikes and Cars\>\""}], ",",
         " ", 
        RowBox[{"\"\<Essay\>\"", " ", "\[Rule]", " ", 
         RowBox[{"<|", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<Original\>\"", " ", "\[Rule]", " ", 
            RowBox[{"<|", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<Body\>\"", "\[Rule]", " ", "colby"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<Calculations\>\"", " ", "\[Rule]", " ", 
               RowBox[{"<|", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"\"\<Basic\>\"", " ", "\[Rule]", " ", 
                  RowBox[{"<|", " ", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<CharacterCount\>\"", " ", "\[Rule]", "  ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Characters", "@", 
                    RowBox[{"StringTrim", "[", "colby", "]"}]}], "]"}]}], ",",
                     " ", 
                    RowBox[{"\"\<SyllableCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"WordData", "[", 
                    RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
                    RowBox[{"TextWords", "[", "colby", "]"}]}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<WordCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextWords", "[", "colby", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<SentenceCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextSentences", "[", "colby", "]"}], "]"}]}]}], 
                   "|>"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"\"\<Derived\>\"", " ", "\[Rule]", " ", 
                  RowBox[{"<|", 
                   RowBox[{
                   "colbori", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "|>"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"\"\<Readability\>\"", " ", "\[Rule]", " ", 
                  RowBox[{
                  "colbori", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"\"\<Adjusted\>\"", " ", "\[Rule]", " ", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Body\>\"", " ", "\[Rule]", " ", "colbyadj"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<Calculations\>\"", " ", "\[Rule]", " ", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<Basic\>\"", " ", "\[Rule]", " ", 
                  RowBox[{"<|", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<CharacterCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Characters", "@", 
                    RowBox[{"StringTrim", "[", "colbyadj", "]"}]}], "]"}]}], 
                    ",", " ", "\[IndentingNewLine]", 
                    RowBox[{"\"\<SyllableCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"WordData", "[", 
                    RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
                    RowBox[{"TextWords", "[", "colbyadj", "]"}]}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<WordCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextWords", "[", "colbyadj", "]"}], "]"}]}], ",",
                     " ", "\[IndentingNewLine]", 
                    RowBox[{"\"\<SentenceCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextSentences", "[", "colbyadj", "]"}], 
                    "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"\"\<Derived\>\"", " ", "\[Rule]", " ", 
                  RowBox[{"<|", 
                   RowBox[{
                   "colbadj", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "|>"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"\"\<Readability\>\"", " ", "\[Rule]", " ", 
                  RowBox[{
                  "colbadj", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}]}], "|>"}]}]}], 
             "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
          "|>"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Rubric\>\"", " ", "\[Rule]", " ", "colrubric"}]}], 
       "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "|>"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.6768486993156548`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classify and Reporting Functions", "Subsubsection",
 CellChangeTimes->{{3.676856932426098*^9, 3.67685693912807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"after", " ", "initialization"}], ",", " ", 
    RowBox[{
     RowBox[{
     "remove", " ", "the", " ", "dataset", " ", "variable", " ", "and", " ", 
      "add", " ", "dataset"}], "=", 
     RowBox[{
     "data", " ", "inside", " ", "the", " ", "variable", " ", 
      "definitions"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataupdate1", "[", 
    RowBox[{
    "dataset_", ",", "originalbody_", ",", " ", "name_", ",", "gradelevel_", 
     ",", " ", "title_", ",", " ", "adjustedbody_", ",", "rubric_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "charcount", ",", " ", "sylcount", ",", " ", "wordcount", ",", " ", 
       "sentcount", ",", "ori", ",", "adj"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"charcount", " ", "=", " ", 
       RowBox[{
        RowBox[{"Characters", "@", 
         RowBox[{"StringTrim", "[", "adjustedbody", "]"}]}], "//", 
        "Length"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sylcount", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"WordData", "[", 
            RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
          RowBox[{"TextWords", "[", "adjustedbody", "]"}]}], "//", 
         "Flatten"}], "//", "Length"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wordcount", " ", "=", " ", 
       RowBox[{
        RowBox[{"TextWords", "[", "adjustedbody", "]"}], "//", "Length"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"sentcount", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"TextSentences", "[", "adjustedbody", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ori", " ", "=", " ", 
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"readability", ",", "derived"}], "}"}], "[", " ", 
         "originalbody", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"adj", " ", "=", " ", 
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"readability", ",", "derived"}], "}"}], "[", "adjustedbody",
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Append", "[", 
       RowBox[{"dataset", ",", " ", 
        RowBox[{"<|", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dataset", "//", "Length"}], ")"}], "+", "1"}], ")"}], 
          " ", "\[Rule]", " ", 
          RowBox[{"<|", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<Student\>\"", " ", "\[Rule]", " ", 
             RowBox[{"<|", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<Name\>\"", " ", "\[Rule]", "name"}], ",", " ", 
               RowBox[{"\"\<Grade\>\"", " ", "\[Rule]", " ", "gradelevel"}]}],
               " ", "|>"}]}], " ", ",", "\[IndentingNewLine]", " ", 
            RowBox[{"\"\<Title\>\"", " ", "\[Rule]", " ", "title"}], ",", " ", 
            RowBox[{"\"\<Essay\>\"", " ", "\[Rule]", " ", 
             RowBox[{"<|", " ", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<Original\>\"", " ", "\[Rule]", " ", 
                RowBox[{"<|", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"\"\<Body\>\"", "\[Rule]", " ", "originalbody"}], 
                  ",", 
                  RowBox[{"\"\<Calculations\>\"", " ", "\[Rule]", " ", 
                   RowBox[{"<|", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<Basic\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"<|", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<CharacterCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Characters", "@", 
                    RowBox[{"StringTrim", "[", "originalbody", "]"}]}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"\"\<SyllableCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"WordData", "[", 
                    RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
                    RowBox[{"TextWords", "[", "originalbody", "]"}]}], "]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<WordCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextWords", "[", "originalbody", "]"}], "]"}]}], 
                    ",", " ", 
                    RowBox[{"\"\<SentenceCount\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"TextSentences", "[", "originalbody", "]"}], 
                    "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<Derived\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"<|", 
                    RowBox[{
                    "ori", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "|>"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<Readability\>\"", " ", "\[Rule]", " ", 
                    RowBox[{
                    "ori", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{"\"\<Adjusted\>\"", " ", "\[Rule]", " ", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{
                  "\"\<Body\>\"", " ", "\[Rule]", " ", "adjustedbody"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\"\<Calculations\>\"", " ", "\[Rule]", " ", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<Basic\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{
                    "\"\<CharacterCount\>\"", " ", "\[Rule]", " ", 
                    "charcount"}], ",", " ", 
                    RowBox[{
                    "\"\<SyllableCount\>\"", " ", "\[Rule]", " ", 
                    "sylcount"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<WordCount\>\"", " ", "\[Rule]", " ", "wordcount"}], 
                    ",", " ", 
                    RowBox[{
                    "\"\<SentenceCount\>\"", " ", "\[Rule]", " ", 
                    "sentcount"}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<Derived\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"<|", 
                    RowBox[{
                    "adj", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "|>"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<Readability\>\"", " ", "\[Rule]", " ", 
                    RowBox[{
                    "adj", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "|>"}]}]}], 
                 "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
              "|>"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<Rubric\>\"", " ", "\[Rule]", " ", "rubric"}]}], 
           "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "|>"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676861510398117*^9, 3.676861511045353*^9}, 
   3.6768621334697866`*^9, {3.676862459468844*^9, 3.676862472360955*^9}, {
   3.676862630809575*^9, 3.676862772564311*^9}, {3.676865812649398*^9, 
   3.6768658240786123`*^9}, {3.676872484296558*^9, 3.6768725039934893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dataupdate1", "[", 
      RowBox[{"#1", ",", 
       RowBox[{"Sequence", "@@", "#2"}]}], "]"}], "&"}], ",", "datastart", 
    ",", "list"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6768616662457333`*^9, 3.676861666419662*^9}, {
  3.676861791431752*^9, 3.6768617999891577`*^9}, {3.676862348568632*^9, 
  3.676862348658534*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          TypeSystem`Struct[{"Student", "Title", "Essay", "Rubric"}, {
            TypeSystem`Struct[{"Name", "Grade"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "Colby Ellis", "Savannah Cole", "unknown", "Zee E."]], 
              TypeSystem`Atom[Integer]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Original", "Adjusted"}, {
              TypeSystem`Struct[{"Body", "Calculations"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Struct[{"Basic", "Derived", "Readability"}, {
                  
                  TypeSystem`Struct[{
                   "CharacterCount", "SyllableCount", "WordCount", 
                    "SentenceCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], 
                  
                  TypeSystem`Struct[{
                   "WordsPerSentence", "CharactersPerWord", 
                    "SyllablesPerWord", "SpellingErrors", 
                    "GrammarCorrections"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                  
                  TypeSystem`Struct[{
                   "ARI", "Dale-Chall", "FleschRE", "Flesch-Kincaid", 
                    "Gunning-Fog", "SMOG"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}]}], 
              TypeSystem`Struct[{"Body", "Calculations"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Struct[{"Basic", "Derived", "Readability"}, {
                  
                  TypeSystem`Struct[{
                   "CharacterCount", "SyllableCount", "WordCount", 
                    "SentenceCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], 
                  
                  TypeSystem`Struct[{
                   "WordsPerSentence", "CharactersPerWord", 
                    "SyllablesPerWord", "SpellingErrors", 
                    "GrammarCorrections"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                  
                  TypeSystem`Struct[{
                   "ARI", "Dale-Chall", "FleschRE", "Flesch-Kincaid", 
                    "Gunning-Fog", "SMOG"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}]}]}]}], 
            
            TypeSystem`Struct[{
             "Ideas", "Organization", "Voice", "Word Choice", 
              "Sentence Fluency", "Conventions"}, {
              TypeSystem`Struct[{"A", "B", "C", "D"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}]}]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Student"} -> 
           Association[{All, "Student", "Name"} -> 
             1, {All, "Student", "Grade"} -> 1], {All, "Title"} -> 
           1, {All, "Essay"} -> 
           Association[{All, "Essay", "Original"} -> 
             Association[{All, "Essay", "Original", "Body"} -> 
               1, {All, "Essay", "Original", "Calculations"} -> 
               Association[{
                  All, "Essay", "Original", "Calculations", "Basic"} -> 
                 Association[{
                    All, "Essay", "Original", "Calculations", "Basic", 
                    "CharacterCount"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Basic", 
                    "SyllableCount"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Basic", 
                    "WordCount"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Basic", 
                    "SentenceCount"} -> 1], {
                  All, "Essay", "Original", "Calculations", "Derived"} -> 
                 Association[{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "WordsPerSentence"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Derived", 
                    "CharactersPerWord"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Derived", 
                    "SyllablesPerWord"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Derived", 
                    "SpellingErrors"} -> 
                   1, {All, "Essay", "Original", "Calculations", "Derived", 
                    "GrammarCorrections"} -> 1], {
                  All, "Essay", "Original", "Calculations", "Readability"} -> 
                 Association[{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "ARI"} -> 1, {
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "Dale-Chall"} -> 
                   1, {All, "Essay", "Original", "Calculations", 
                    "Readability", "FleschRE"} -> 
                   1, {All, "Essay", "Original", "Calculations", 
                    "Readability", "Flesch-Kincaid"} -> 
                   1, {All, "Essay", "Original", "Calculations", 
                    "Readability", "Gunning-Fog"} -> 
                   1, {All, "Essay", "Original", "Calculations", 
                    "Readability", "SMOG"} -> 1]]], {
              All, "Essay", "Adjusted"} -> 
             Association[{All, "Essay", "Adjusted", "Body"} -> 
               1, {All, "Essay", "Adjusted", "Calculations"} -> 
               Association[{
                  All, "Essay", "Adjusted", "Calculations", "Basic"} -> 
                 Association[{
                    All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "CharacterCount"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "SyllableCount"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "WordCount"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "SentenceCount"} -> 1], {
                  All, "Essay", "Adjusted", "Calculations", "Derived"} -> 
                 Association[{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "WordsPerSentence"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "CharactersPerWord"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "SyllablesPerWord"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "SpellingErrors"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "GrammarCorrections"} -> 1], {
                  All, "Essay", "Adjusted", "Calculations", "Readability"} -> 
                 Association[{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "ARI"} -> 1, {
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "Dale-Chall"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", 
                    "Readability", "FleschRE"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", 
                    "Readability", "Flesch-Kincaid"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", 
                    "Readability", "Gunning-Fog"} -> 
                   1, {All, "Essay", "Adjusted", "Calculations", 
                    "Readability", "SMOG"} -> 1]]]], {All, "Rubric"} -> 
           Association[{All, "Rubric", "Ideas"} -> 
             Association[{All, "Rubric", "Ideas", "A"} -> 
               1, {All, "Rubric", "Ideas", "B"} -> 
               1, {All, "Rubric", "Ideas", "C"} -> 
               1, {All, "Rubric", "Ideas", "D"} -> 1], {
              All, "Rubric", "Organization"} -> 
             Association[{All, "Rubric", "Organization", "A"} -> 
               1, {All, "Rubric", "Organization", "B"} -> 
               1, {All, "Rubric", "Organization", "C"} -> 
               1, {All, "Rubric", "Organization", "D"} -> 
               1, {All, "Rubric", "Organization", "E"} -> 1], {
              All, "Rubric", "Voice"} -> 1, {All, "Rubric", "Word Choice"} -> 
             2, {All, "Rubric", "Sentence Fluency"} -> 
             Association[{All, "Rubric", "Sentence Fluency", "A"} -> 
               1, {All, "Rubric", "Sentence Fluency", "B"} -> 
               1, {All, "Rubric", "Sentence Fluency", "C"} -> 
               1, {All, "Rubric", "Sentence Fluency", "D"} -> 
               1, {All, "Rubric", "Sentence Fluency", "E"} -> 1], {
              All, "Rubric", "Conventions"} -> 
             Association[{All, "Rubric", "Conventions", "A"} -> 
               1, {All, "Rubric", "Conventions", "B"} -> 
               1, {All, "Rubric", "Conventions", "C"} -> 
               1, {All, "Rubric", "Conventions", "D"} -> 
               1, {All, "Rubric", "Conventions", "E"} -> 1]]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`RowShape[
              Association["Student" -> TypeSystem`PackageScope`RowShape[
                 Association[
                 "Name" -> TypeSystem`PackageScope`AtomShape[
                   124.80000000000001`], "Grade" -> 
                  TypeSystem`PackageScope`AtomShape[34]]], "Title" -> 
               TypeSystem`PackageScope`AtomShape[172.8], "Essay" -> 
               TypeSystem`PackageScope`RowShape[
                 Association["Original" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "Body" -> TypeSystem`PackageScope`AtomShape[
                    1920.0000000000002`], "Calculations" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association["Basic" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "CharacterCount" -> TypeSystem`PackageScope`AtomShape[34],
                     "SyllableCount" -> TypeSystem`PackageScope`AtomShape[34],
                     "WordCount" -> TypeSystem`PackageScope`AtomShape[34], 
                    "SentenceCount" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], "Derived" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "WordsPerSentence" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "CharactersPerWord" -> 
                    TypeSystem`PackageScope`AtomShape[60], "SyllablesPerWord" -> 
                    TypeSystem`PackageScope`AtomShape[60], "SpellingErrors" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "GrammarCorrections" -> 
                    TypeSystem`PackageScope`AtomShape[60]]], "Readability" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "ARI" -> TypeSystem`PackageScope`AtomShape[60], 
                    "Dale-Chall" -> TypeSystem`PackageScope`AtomShape[60], 
                    "FleschRE" -> TypeSystem`PackageScope`AtomShape[60], 
                    "Flesch-Kincaid" -> TypeSystem`PackageScope`AtomShape[60],
                     "Gunning-Fog" -> TypeSystem`PackageScope`UnknownShape, 
                    "SMOG" -> TypeSystem`PackageScope`UnknownShape]]]]]], 
                  "Adjusted" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "Body" -> TypeSystem`PackageScope`AtomShape[
                    1920.0000000000002`], "Calculations" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association["Basic" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "CharacterCount" -> TypeSystem`PackageScope`AtomShape[34],
                     "SyllableCount" -> TypeSystem`PackageScope`AtomShape[34],
                     "WordCount" -> TypeSystem`PackageScope`AtomShape[34], 
                    "SentenceCount" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], "Derived" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "WordsPerSentence" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "CharactersPerWord" -> 
                    TypeSystem`PackageScope`AtomShape[60], "SyllablesPerWord" -> 
                    TypeSystem`PackageScope`AtomShape[60], "SpellingErrors" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "GrammarCorrections" -> 
                    TypeSystem`PackageScope`AtomShape[60]]], "Readability" -> 
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "ARI" -> TypeSystem`PackageScope`AtomShape[60], 
                    "Dale-Chall" -> TypeSystem`PackageScope`AtomShape[60], 
                    "FleschRE" -> TypeSystem`PackageScope`AtomShape[60], 
                    "Flesch-Kincaid" -> TypeSystem`PackageScope`AtomShape[60],
                     "Gunning-Fog" -> TypeSystem`PackageScope`AtomShape[60], 
                    "SMOG" -> TypeSystem`PackageScope`AtomShape[60]]]]]]]]], 
               "Rubric" -> TypeSystem`PackageScope`RowShape[
                 Association["Ideas" -> TypeSystem`PackageScope`RowShape[
                    Association[
                    "A" -> TypeSystem`PackageScope`AtomShape[34], "B" -> 
                    TypeSystem`PackageScope`AtomShape[34], "C" -> 
                    TypeSystem`PackageScope`AtomShape[34], "D" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], "Organization" -> 
                  TypeSystem`PackageScope`RowShape[
                    Association[
                    "A" -> TypeSystem`PackageScope`AtomShape[34], "B" -> 
                    TypeSystem`PackageScope`AtomShape[34], "C" -> 
                    TypeSystem`PackageScope`AtomShape[34], "D" -> 
                    TypeSystem`PackageScope`AtomShape[34], "E" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], "Voice" -> 
                  TypeSystem`PackageScope`AtomShape[34], "Word Choice" -> 
                  TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {
                    All, "Rubric", "Word Choice"}], "Sentence Fluency" -> 
                  TypeSystem`PackageScope`RowShape[
                    Association[
                    "A" -> TypeSystem`PackageScope`AtomShape[34], "B" -> 
                    TypeSystem`PackageScope`AtomShape[34], "C" -> 
                    TypeSystem`PackageScope`AtomShape[34], "D" -> 
                    TypeSystem`PackageScope`AtomShape[34], "E" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], "Conventions" -> 
                  TypeSystem`PackageScope`RowShape[
                    Association[
                    "A" -> TypeSystem`PackageScope`AtomShape[34], "B" -> 
                    TypeSystem`PackageScope`AtomShape[34], "C" -> 
                    TypeSystem`PackageScope`AtomShape[34], "D" -> 
                    TypeSystem`PackageScope`AtomShape[34], "E" -> 
                    TypeSystem`PackageScope`AtomShape[34]]]]]]]]], 10, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2128885480], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          TypeSystem`Struct[{"Student", "Title", "Essay", "Rubric"}, {
            TypeSystem`Struct[{"Name", "Grade"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "Colby Ellis", "Savannah Cole", "unknown", "Zee E."]], 
              TypeSystem`Atom[Integer]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Original", "Adjusted"}, {
              TypeSystem`Struct[{"Body", "Calculations"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Struct[{"Basic", "Derived", "Readability"}, {
                  
                  TypeSystem`Struct[{
                   "CharacterCount", "SyllableCount", "WordCount", 
                    "SentenceCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], 
                  
                  TypeSystem`Struct[{
                   "WordsPerSentence", "CharactersPerWord", 
                    "SyllablesPerWord", "SpellingErrors", 
                    "GrammarCorrections"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                  
                  TypeSystem`Struct[{
                   "ARI", "Dale-Chall", "FleschRE", "Flesch-Kincaid", 
                    "Gunning-Fog", "SMOG"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}]}], 
              TypeSystem`Struct[{"Body", "Calculations"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Struct[{"Basic", "Derived", "Readability"}, {
                  
                  TypeSystem`Struct[{
                   "CharacterCount", "SyllableCount", "WordCount", 
                    "SentenceCount"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], 
                  
                  TypeSystem`Struct[{
                   "WordsPerSentence", "CharactersPerWord", 
                    "SyllablesPerWord", "SpellingErrors", 
                    "GrammarCorrections"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                  
                  TypeSystem`Struct[{
                   "ARI", "Dale-Chall", "FleschRE", "Flesch-Kincaid", 
                    "Gunning-Fog", "SMOG"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}]}]}]}], 
            
            TypeSystem`Struct[{
             "Ideas", "Organization", "Voice", "Word Choice", 
              "Sentence Fluency", "Conventions"}, {
              TypeSystem`Struct[{"A", "B", "C", "D"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], 
              TypeSystem`Struct[{"A", "B", "C", "D", "E"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}]}]}], 10], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2128885480]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Student\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Student\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Student"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Student"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Center, Center}],
                SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Essay\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Essay\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Essay"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Center}], SpanFromLeft,
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Rubric\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Rubric\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Center, Center}],
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Student", "Name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Student", "Name"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Grade\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Grade\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Student", "Grade"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Student", "Grade"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Original\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Original\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Essay", "Original"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Adjusted\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Adjusted\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Essay", "Adjusted"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Ideas\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Ideas\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Ideas"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Ideas"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Center, Center}],
                SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Organization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Organization\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Voice\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Voice\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Voice"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Voice"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Word Choice\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Word Choice\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Word Choice"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Word Choice"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sentence Fluency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sentence Fluency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Sentence Fluency"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Conventions\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Conventions\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Body\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Body\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Body"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Essay", "Original", "Body"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Calculations\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Calculations\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Center, Center}],
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Body\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Body\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Body"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Essay", "Adjusted", "Body"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Calculations\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Calculations\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Center, Center}],
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"A\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"A\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Ideas", "A"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Ideas", "A"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Ideas", "B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Ideas", "B"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Ideas", "C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Ideas", "C"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"D\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"D\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Ideas", "D"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Ideas", "D"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"A\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"A\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization", "A"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization", "A"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization", "B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization", "B"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization", "C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization", "C"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"D\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"D\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization", "D"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization", "D"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"E\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"E\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Organization", "E"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Organization", "E"]],
                  "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], SpanFromAbove, SpanFromAbove, 
               SpanFromBoth, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"A\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"A\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency", "A"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Rubric", "Sentence Fluency", "A"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency", "B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Rubric", "Sentence Fluency", "B"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency", "C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Rubric", "Sentence Fluency", "C"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"D\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"D\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency", "D"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Rubric", "Sentence Fluency", "D"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"E\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"E\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Sentence Fluency", "E"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Rubric", "Sentence Fluency", "E"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"A\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"A\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions", "A"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions", "A"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"B\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"B\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions", "B"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions", "B"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"C\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"C\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions", "C"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions", "C"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"D\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"D\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions", "D"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions", "D"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"E\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"E\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Rubric", "Conventions", "E"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[All, "Rubric", "Conventions", "E"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Basic\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Basic\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Basic"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Basic"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Derived\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Derived\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Readability\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Readability\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", 
                    "Readability"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Basic\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Basic\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Basic"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Basic"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Derived\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Derived\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Readability\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Readability\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", 
                    "Readability"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Center, Center}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharacterCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharacterCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Basic", 
                    "CharacterCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Basic", 
                   "CharacterCount"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllableCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllableCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Basic", 
                    "SyllableCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Basic", 
                   "SyllableCount"]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Basic", 
                    "WordCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Basic", 
                   "WordCount"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Basic", 
                    "SentenceCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Basic", 
                   "SentenceCount"]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordsPerSentence\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordsPerSentence\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "WordsPerSentence"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived", 
                   "WordsPerSentence"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharactersPerWord\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharactersPerWord\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "CharactersPerWord"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived", 
                   "CharactersPerWord"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllablesPerWord\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllablesPerWord\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "SyllablesPerWord"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived", 
                   "SyllablesPerWord"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpellingErrors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpellingErrors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "SpellingErrors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived", 
                   "SpellingErrors"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GrammarCorrections\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GrammarCorrections\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Derived", 
                    "GrammarCorrections"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Derived", 
                   "GrammarCorrections"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ARI\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ARI\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "ARI"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "ARI"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dale-Chall\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dale-Chall\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "Dale-Chall"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "Dale-Chall"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"FleschRE\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FleschRE\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "FleschRE"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "FleschRE"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Flesch-Kincaid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Flesch-Kincaid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "Flesch-Kincaid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "Flesch-Kincaid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gunning-Fog\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gunning-Fog\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "Gunning-Fog"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "Gunning-Fog"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"SMOG\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SMOG\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Original", "Calculations", "Readability", 
                    "SMOG"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Original", "Calculations", "Readability", 
                   "SMOG"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharacterCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharacterCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "CharacterCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Basic", 
                   "CharacterCount"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllableCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllableCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "SyllableCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Basic", 
                   "SyllableCount"]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "WordCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Basic", 
                   "WordCount"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceCount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Basic", 
                    "SentenceCount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Basic", 
                   "SentenceCount"]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordsPerSentence\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WordsPerSentence\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "WordsPerSentence"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived", 
                   "WordsPerSentence"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharactersPerWord\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CharactersPerWord\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "CharactersPerWord"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived", 
                   "CharactersPerWord"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllablesPerWord\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SyllablesPerWord\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "SyllablesPerWord"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived", 
                   "SyllablesPerWord"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpellingErrors\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpellingErrors\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "SpellingErrors"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived", 
                   "SpellingErrors"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GrammarCorrections\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GrammarCorrections\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Derived", 
                    "GrammarCorrections"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Derived", 
                   "GrammarCorrections"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ARI\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ARI\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "ARI"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "ARI"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dale-Chall\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dale-Chall\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "Dale-Chall"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "Dale-Chall"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"FleschRE\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FleschRE\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "FleschRE"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "FleschRE"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Flesch-Kincaid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Flesch-Kincaid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "Flesch-Kincaid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "Flesch-Kincaid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gunning-Fog\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Gunning-Fog\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "Gunning-Fog"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "Gunning-Fog"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"SMOG\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SMOG\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    All, "Essay", "Adjusted", "Calculations", "Readability", 
                    "SMOG"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                  All, "Essay", "Adjusted", "Calculations", "Readability", 
                   "SMOG"]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromBoth, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[1]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Colby Ellis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Bikes and Cars", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think New london would be better if people Rode bikes \
instead of \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["859"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["177"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["159"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["31.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.40252"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["177."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["30."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.9158"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.63508"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["80.3806"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.94785"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20.72"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.15136"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think New London would be better if people rode bikes \
instead of cars.  People \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["897"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["202"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["168"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.33929"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["202."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.718"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.17958"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90.9036"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0581"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.40042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[1], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[2]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ten Year Olds", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think that ten is a good age because.  There responsible, \
they can call and so \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["173"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["152"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.6667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.00658"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["173."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.48432"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.34175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["97.6902"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.78026"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.0667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.40042"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think that ten is a good age because. They're responsible, \
they can call and s \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["762"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["174"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["149"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.4615"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.11409"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["174."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.38815"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.29104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["96.4069"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.65987"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13.8154"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.30685"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[2], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[3]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Are You Old Enough to Stay Home Alone?", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "My opinion is you are old enough to stay home alone when you \
are twelve and olde \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1077"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["253"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["196"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.4949"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["253."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.251"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.2892"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["77.7379"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.28563"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.00329"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "My opinion is you are old enough to stay home alone when you \
are twelve and olde \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1077"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["253"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["196"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.4949"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["253."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.251"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.2892"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["77.7379"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.28563"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.00329"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[3], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4"], 
                    Style[
                    RawBoxes["4"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[4]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[4]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Year Ten", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think you should at least be ten or older for just a few \
hours. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["444"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["103"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.04545"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["103."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.1341"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.84455"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["89.9505"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.08536"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.04"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.15136"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I think you should at least be ten or older for just a few \
hours. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["457"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["109"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.19318"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["109."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.52989"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.0555"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90.8814"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.31591"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.95503"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[4], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[4], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[4], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5"], 
                    Style[
                    RawBoxes["5"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[5]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[5]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Electronics", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "You will read five reasons when you would be a great \
stay-home kid. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["150"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["137"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.5714"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.93431"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["150."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.5963"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.46235"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["94.3423"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.96257"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.4`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"19.571428571428573`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"14.285714285714286`", " ", 
                    RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "True"}], "]"}]}]}], 
                    ")"}]}], FontFamily -> "Courier", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.043`", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"3.1291`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"4.285714285714286`", " ", 
                    RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "True"}], "]"}]}]}]]}], 
                   FontFamily -> "Courier", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "You will read five reasons when you would be a great \
stay-home kid. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["674"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["157"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.2857"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.99259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["157."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.728"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.91005"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["88.8733"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.65439"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.1429"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.56769"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[5], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[5], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[5], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6"], 
                    Style[
                    RawBoxes["6"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[6]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[6]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Savannah Cole", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Staying Home", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I am supost to tell you what age I think kids should be \
aloud to stay home alone \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1261"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["283"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["252"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.00397"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["283."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["35."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.1387"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.34411"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["93.5579"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.68159"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.9143"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.84011"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I am supposed to tell you what age I think kids should be \
alowed to stay home al \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["294"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["252"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.8235"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.05952"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["294."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.81212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.31187"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["93.0891"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.95784"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.3412"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.3291"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[6], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[6], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["4 total \:203a ", 
                    Style[
                    "4 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[6], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7"], 
                    Style[
                    RawBoxes["7"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[7]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[7]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["We are Responsible", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I'm going to give you 4 reasons that 10 is a responsible age \
to stay home alone. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["839"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["199"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["173"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.2222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.84971"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["199."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.0232"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.69955"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90.01"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.48008"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["25.4667"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.23186"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I'm going to give you 4 reasons that 10 is a responsible age \
to stay home alone. \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["842"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["205"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["174"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.3333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.83908"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["205."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11.0287"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.76853"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["87.5393"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.8523"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["29.9556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.64056"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[7], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[7], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["4 total \:203a ", 
                    Style[
                    "4 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[7], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8"], 
                    Style[
                    RawBoxes["8"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[8]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[8]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Zee E.", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Ones I was at a beach I was bored I told my mom I was going \
to go explore the be \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["941"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["227"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["208"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.52404"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["227."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.87822"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.72798"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["98.2671"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.52788"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.6308"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.30685"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Once I was at a beach I was bored.  I told my mom I was \
going to go explore the  \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1003"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["209"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.74074"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.79904"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["240."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.04386"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.89911"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["101.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.979128"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.9481"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.61577"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[8], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[8], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[8], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["9"], 
                    Style[
                    RawBoxes["9"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[9]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[9]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "I put the glasses on.I went on a train,the train was going \
over a bridge.I saw s \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["412"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["367"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.4762"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.26158"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["412."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["66."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.0901"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.2123"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["94.1234"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.47258"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.55189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "| put the glasses on.  I went on a train, the train was \
going over a bridge. I s \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2871"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["657"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["562"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["72"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.80556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.10854"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["657."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.53401"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.12393"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100.012"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.24883"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.67778"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.81721"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[9], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[9], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[9], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["10"], 
                    Style[
                    RawBoxes["10"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[10]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                   GeneralUtilities`Slice[
                    Key[10]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Student"], 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Student"], 
                   Key["Grade"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "There was a little Girl named Roxy. roxy saw a Pare of \
glasses By the slide. Rox \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["832"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["183"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["162"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.1358"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["183."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.15963"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.62938"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100.306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.95163"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.4`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.8`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"6.666666666666667`", " ", 
                    RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "True"}], "]"}]}]}], 
                    ")"}]}], FontFamily -> "Courier", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.043`", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"3.1291`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "True"}], "]"}]}]}]]}], 
                   FontFamily -> "Courier", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Original"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "There was a little girl named Roxy. Roxy was in the Park. \
Roxy saw a pair of gla \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Body"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["850"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["CharacterCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["198"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SyllableCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["164"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["WordCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Basic"], 
                   Key["SentenceCount"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.11111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["WordsPerSentence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.18293"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["CharactersPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["198."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SyllablesPerWord"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["SpellingErrors"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Derived"], 
                   Key["GrammarCorrections"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.53714"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["ARI"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.36222"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Dale-Chall"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["95.4482"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["FleschRE"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.20967"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Flesch-Kincaid"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.7556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["Gunning-Fog"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.5312"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Essay"], 
                   Key["Adjusted"], 
                   Key["Calculations"], 
                   Key["Readability"], 
                   Key["SMOG"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Ideas"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Organization"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Voice"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["A", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[10], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["A"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Sentence Fluency"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["A"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["C"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["D"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Conventions"], 
                   Key["E"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["B", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   522896746][
                    GeneralUtilities`Slice[
                    Key[10], 
                    Key["Rubric"], 
                    Key["Word Choice"], 
                    Key["B"]]], "Mouse"], 
                  ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Word Choice"], 
                   Key["B"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove,
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["3 total \:203a ", 
                    Style[
                    "3 total \:203a ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][{
                    
                    Key[10], 
                    Key["Rubric"], 
                    Key["Word Choice"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
                 
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Rubric"], 
                   Key["Word Choice"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Rubric", "Word Choice"}]], MenuEvaluator -> 
                    Automatic], Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Rubric", "Word Choice"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Center, Baseline}, Background -> 
                GrayLevel[0.98]], SpanFromLeft, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746][
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 522896746]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[522896746][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.6768625292188597`*^9, {3.6768657968147507`*^9, 3.676865826755007*^9}, 
   3.676865876891487*^9, 3.676867927600383*^9, 3.676902742814086*^9, 
   3.677251363908036*^9, 3.6781271318305826`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cIA", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Ideas\>\"", ",", "\"\<A\>\""}],
          "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cIB", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Ideas\>\"", ",", "\"\<B\>\""}],
          "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cIC", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Ideas\>\"", ",", "\"\<C\>\""}],
          "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cID", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Ideas\>\"", ",", "\"\<D\>\""}],
          "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cV", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{"#", ",", "\"\<Rubric\>\"", ",", "\"\<Voice\>\""}], "]"}]}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cOA", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Organization\>\"", ",", 
          "\"\<A\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], ";", 
  RowBox[{"cOB", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Organization\>\"", ",", 
          "\"\<B\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], ";", 
  RowBox[{"cOC", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Organization\>\"", ",", 
          "\"\<C\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], ";", 
  RowBox[{"cOD", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Organization\>\"", ",", 
          "\"\<D\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], ";", 
  RowBox[{"cOE", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Organization\>\"", ",", 
          "\"\<E\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cWCA", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Word Choice\>\"", ",", 
          "\"\<A\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cWCB", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Word Choice\>\"", ",", 
          "\"\<B\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cWCC", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Word Choice\>\"", ",", 
          "\"\<C\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cSFA", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Sentence Fluency\>\"", ",", 
          "\"\<A\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cSFB", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Sentence Fluency\>\"", ",", 
          "\"\<B\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cSFC", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Sentence Fluency\>\"", ",", 
          "\"\<C\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cSFD", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Sentence Fluency\>\"", ",", 
          "\"\<D\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cSFE", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Sentence Fluency\>\"", ",", 
          "\"\<E\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCA", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Conventions\>\"", ",", 
          "\"\<A\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCB", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Conventions\>\"", ",", 
          "\"\<B\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCC", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Conventions\>\"", ",", 
          "\"\<C\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCD", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Conventions\>\"", ",", 
          "\"\<D\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCE", " ", "=", " ", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Original\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{
           "#", ",", "\"\<Essay\>\"", ",", "\"\<Adjusted\>\"", ",", " ", 
            "\"\<Body\>\""}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{
         "#", ",", "\"\<Rubric\>\"", ",", "\"\<Conventions\>\"", ",", 
          "\"\<E\>\""}], "]"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"data", "//", "Length"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676862970913275*^9, 3.676863172752964*^9}, {
  3.676863220357973*^9, 3.676863238715363*^9}, {3.676863276979521*^9, 
  3.676863601215597*^9}, {3.676863655564312*^9, 3.676863687643474*^9}, {
  3.676863719074391*^9, 3.676863723504377*^9}}],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.676902938815497*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"display", "[", "essay_String", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classified", ",", " ", "result", ",", " ", 
      RowBox[{"adjustedbody", " ", "=", " ", "essay"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"classified", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Classify", "[", 
         RowBox[{"\"\<FacebookTopic\>\"", ",", " ", "#"}], "]"}], "&"}], "@", 
       
       RowBox[{"TextSentences", "[", "adjustedbody", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"classified", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "classified", "]"}], "//", "Range"}]}], 
            " ", "}"}], "]"}], "}"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Classify", "[", 
             RowBox[{"\"\<Sentiment\>\"", ",", " ", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"TextSentences", "[", "adjustedbody", "]"}]}], "}"}], "[", 
         
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"WordCounts", "[", 
            RowBox[{"DeleteStopwords", "@", "adjustedbody"}], "]"}], ",", 
           "10"}], "]"}], ",", " ", 
         RowBox[{"ChartLabels", "\[Rule]", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"WordCounts", "[", 
              RowBox[{"DeleteStopwords", "@", "adjustedbody"}], "]"}], "//", 
             "Keys"}], ",", "10"}], "]"}]}], ",", " ", 
         RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}], 
       ",", 
       RowBox[{"PieChart", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Intersection", "[", 
              RowBox[{
               RowBox[{"TextWords", "@", "adjustedbody"}], ",", " ", 
               RowBox[{"WordData", "[", 
                RowBox[{"All", ",", " ", "\"\<Stopwords\>\""}], "]"}]}], 
              "]"}], "//", "Length"}], ",", "\"\<Stopwords\>\""}], "]"}], ",", 
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"TextWords", "[", "adjustedbody", "]"}], ",", 
               RowBox[{"WordData", "[", 
                RowBox[{"All", ",", "\"\<Stopwords\>\""}], "]"}]}], "]"}], "//",
              "Length"}], ",", "\"\<Other Words\>\""}], "]"}]}], "}"}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PieChart", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Intersection", "[", 
                RowBox[{
                 RowBox[{"TextWords", "@", "adjustedbody"}], ",", "dclist"}], 
                "]"}], "//", "Length"}], ",", " ", "\"\<Common Words\>\""}], 
             "]"}], ",", 
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"TextWords", "@", "adjustedbody"}], ",", "dclist"}], 
                "]"}], "//", "Length"}], ",", "\"\<Uncommon Words\>\""}], 
             "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"Graph", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{"result", ",", "2", ",", "1"}], "]"}], "/.", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a_", ",", "b_"}], "}"}], " ", "\[Rule]", " ", 
             RowBox[{"a", " ", "\[DirectedEdge]", "b"}]}]}], ",", " ", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", " ", 
           RowBox[{
           "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mouseover", "[", 
            RowBox[{"#", ",", 
             RowBox[{"TextStructure", "[", 
              RowBox[{"#", ",", " ", "\"\<ConstituentGraphs\>\""}], "]"}]}], 
            "]"}], "&"}], "/@", 
          RowBox[{"TextSentences", "[", "adjustedbody", "]"}]}], "]"}], 
        "}"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6768688020640383`*^9, 3.6768688233174887`*^9}, {
   3.676868890096199*^9, 3.676868897277804*^9}, 3.676869751779923*^9, {
   3.6768698011941147`*^9, 3.676869803063463*^9}, {3.6768698498480797`*^9, 
   3.67686985560042*^9}, {3.676870007220972*^9, 3.6768700159088993`*^9}, {
   3.676870370893363*^9, 3.6768704284979897`*^9}, {3.67687047797773*^9, 
   3.676870482592515*^9}, {3.676870604039686*^9, 3.676870662092518*^9}, 
   3.67687071042905*^9, {3.6768707407889433`*^9, 3.676870757793672*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"updateclassify", "[", 
   RowBox[{
   "adjustedbody_", ",", " ", "name_", ",", " ", "gradelevel_", ",", " ", 
    "title_", ",", " ", "originalbody_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dataset", " ", "=", " ", "data"}], ",", "newstats", ",", 
      "rubric", ",", " ", "classified", ",", " ", "result"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"newstats", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<NumSentences\>\"", " ", "\[Rule]", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"TextSentences", "[", "adjustedbody", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<NumWords\>\"", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"TextWords", "[", "adjustedbody", "]"}], "//", 
             "Length"}], " ", ")"}]}], ",", 
          RowBox[{"\"\<NumCharacters\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Characters", "@", 
              RowBox[{"StringTrim", "[", "adjustedbody", "]"}]}], "//", 
             "Length"}], ")"}]}], ",", 
          RowBox[{"\"\<NumSyllables\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"WordData", "[", 
                  RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
                RowBox[{"TextWords", "[", "adjustedbody", "]"}]}], "//", 
               "DeleteMissing"}], "//", "Flatten"}], "//", "Length"}], 
            ")"}]}], ",", 
          RowBox[{"\"\<LongestSentence\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", " ", "\[Rule]", " ", 
                 RowBox[{"(", 
                  RowBox[{"Length", "[", 
                   RowBox[{"Characters", "[", "#", "]"}], "]"}], ")"}]}], 
                "&"}], "/@", 
               RowBox[{"TextSentences", "[", "adjustedbody", "]"}]}], "//", 
              "Sort"}], "//", "First"}], ")"}]}], ",", 
          RowBox[{"\"\<Polysyllables\>\"", "\[Rule]", "  ", 
           RowBox[{"DeleteDuplicates", "@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"TextWords", "[", "adjustedbody", "]"}], ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"WordData", "[", 
                  RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "]"}], 
                ">", "2"}], "&"}]}], "]"}]}]}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"rubric", " ", "=", "  ", 
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<Ideas\>\"", " ", "\[Rule]", " ", 
           RowBox[{"<|", " ", 
            RowBox[{
             RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cIA", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cIB", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cIC", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cID", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}]}], "|>"}]}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"\"\<Organization\>\"", " ", "\[Rule]", " ", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cOA", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cOB", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cOC", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cOD", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cOE", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<Voice\>\"", " ", "\[Rule]", " ", 
           RowBox[{"cV", "[", 
            RowBox[{"{", 
             RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<Word Choice\>\"", " ", "\[Rule]", " ", 
           RowBox[{"<|", " ", 
            RowBox[{
             RowBox[{"\"\<A\>\"", " ", "\[Rule]", 
              RowBox[{"cWCA", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cWCB", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cWCC", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<Sentence Fluency\>\"", " ", "\[Rule]", " ", 
           RowBox[{"<|", " ", 
            RowBox[{
             RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cSFA", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cSFB", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cSFC", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cSFD", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cSFE", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<Conventions\>\"", " ", "\[Rule]", " ", 
           RowBox[{"<|", " ", 
            RowBox[{
             RowBox[{"\"\<A\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cCA", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<B\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cCB", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<C\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cCC", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cCD", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}], ",", " ", 
             RowBox[{"\"\<E\>\"", " ", "\[Rule]", " ", 
              RowBox[{"cCE", "[", 
               RowBox[{"{", 
                RowBox[{"originalbody", ",", " ", "adjustedbody"}], "}"}], 
               "]"}]}]}], "|>"}]}]}], "|>"}]}]}], "}"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dataupdate1", "[", 
      RowBox[{
      "originalbody", ",", " ", "name", ",", "gradelevel", ",", " ", "title", 
       ",", " ", "adjustedbody", ",", "rubric"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dataset", "[", "rubric", "]"}], ",", 
       RowBox[{"display", "[", "adjustedbody", "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.676864453837904*^9, {3.676864502357622*^9, 3.676864567727253*^9}, {
   3.676864671847855*^9, 3.6768646863431873`*^9}, {3.6768647237051477`*^9, 
   3.676864738172557*^9}, {3.676865869068465*^9, 3.676865875127345*^9}, {
   3.6768679940820827`*^9, 3.676867998588463*^9}, {3.676868637464525*^9, 
   3.676868648688526*^9}, {3.676869386874946*^9, 3.6768694349293823`*^9}, {
   3.676869954176691*^9, 3.676869964878428*^9}, {3.6768700860462112`*^9, 
   3.67687013057063*^9}, 3.67687016125896*^9, {3.676870200722855*^9, 
   3.676870240314711*^9}, 3.6768702720094624`*^9, {3.676870329088305*^9, 
   3.6768703416456423`*^9}, {3.676870792612864*^9, 3.676870834601725*^9}, {
   3.67687087101923*^9, 3.676870875464491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"essayanalyze3", " ", "=", " ", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"name", " ", "=", " ", "#Name"}], ",", "  ", 
        RowBox[{"gradelevel", " ", "=", " ", "#GradeLevel"}], ",", " ", 
        RowBox[{"title", " ", "=", " ", "#Title"}], ",", 
        RowBox[{"originalbody", " ", "=", " ", "#EssayBody"}], ",", " ", 
        RowBox[{"originalstats", " ", "=", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<NumSentences\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"TextSentences", "[", "#EssayBody", "]"}], "]"}]}], ",", 
           
           RowBox[{"\"\<NumWords\>\"", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"TextWords", "[", "#EssayBody", "]"}], "//", "Length"}],
              " ", ")"}]}], ",", 
           RowBox[{"\"\<NumCharacters\>\"", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Characters", "@", 
               RowBox[{"StringTrim", "[", "#EssayBody", "]"}]}], "//", 
              "Length"}], ")"}]}], ",", 
           RowBox[{"\"\<NumSyllables\>\"", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"WordData", "[", 
                   RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "&"}], "/@", 
                 RowBox[{"TextWords", "[", "#EssayBody", "]"}]}], "//", 
                "DeleteMissing"}], "//", "Flatten"}], "//", "Length"}], 
             ")"}]}], ",", 
           RowBox[{"\"\<LongestSentence\>\"", " ", "\[Rule]", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", " ", "\[Rule]", " ", 
                  RowBox[{"(", 
                   RowBox[{"Length", "[", 
                    RowBox[{"Characters", "[", "#", "]"}], "]"}], ")"}]}], 
                 "&"}], "/@", 
                RowBox[{"TextSentences", "[", "#EssayBody", "]"}]}], "//", 
               "Sort"}], "//", "First"}], ")"}]}], ",", 
           RowBox[{"\"\<Polysyllables\>\"", "\[Rule]", "  ", 
            RowBox[{"DeleteDuplicates", "@", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"TextWords", "[", "#EssayBody", "]"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"WordData", "[", 
                   RowBox[{"#", ",", "\"\<Hyphenation\>\""}], "]"}], "]"}], 
                 ">", "2"}], "&"}]}], "]"}]}]}]}], "|>"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"Normal", "@", "originalstats"}], ",", 
           RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], "]"}], ";", 
        RowBox[{"Print", "[", 
         RowBox[{"(", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"SpellingCorrectionList", "[", "#", "]"}], "]"}], 
                ">", " ", "1"}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"Highlighted", "[", 
                   RowBox[{"Tooltip", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"SpellingCorrectionList", "[", "#", "]"}]}], 
                    "]"}], "]"}], ",", "StandardForm"}], "]"}], "<>", 
                "\"\< \>\""}], ",", 
               RowBox[{"#", "<>", "\"\< \>\""}]}], "]"}], "&"}], "/@", 
            RowBox[{"TextWords", "[", "#EssayBody", "]"}]}], "]"}], ")"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FormFunction", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<EssayBody\>\"", " ", "\[Rule]", " ", 
             RowBox[{
             "\"\<TextArea\>\"", " ", "\[Rule]", " ", "#EssayBody"}]}], "}"}],
            ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"update", " ", "DB"}], " ", "|", " ", "classify", " ", 
             "|", " ", 
             RowBox[{"email", " ", "display"}]}], "*)"}], " ", 
           RowBox[{
            RowBox[{"updateclassify", "[", 
             RowBox[{
             "#EssayBody", ",", " ", "name", ",", " ", "gradelevel", ",", " ",
               "title", ",", " ", "originalbody"}], "]"}], "&"}]}], "]"}], 
         "[", "]"}]}], ")"}]}], "]"}], "&"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.676863934607456*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application", "Section",
 CellChangeTimes->{{3.676869071165365*^9, 3.676869073562724*^9}}],

Cell[CellGroupData[{

Cell["Putting it All Together", "Subsection",
 CellChangeTimes->{{3.676869115163836*^9, 3.676869118889531*^9}}],

Cell["\<\
Run the \[OpenCurlyDoubleQuote]form\[CloseCurlyDoubleQuote] function below \
and add one of the test strings below to see how the application performs.  \
Normally, an essay with mistakes (like testString) will be inputted the first \
time, outputting basic statistics about the essay. The teacher would then \
make adjustments to the essay to help the machine better understand the \
context of the student\[CloseCurlyQuote]s writing.  After the essay is \
adjusted and submitted, the student\[CloseCurlyQuote]s essay statistics along \
with several visualizations are displayed.  Below, a rubric based on a \
classifying machine learning algorithm is returned along with word usage data \
and a sentence-by-sentence topic and polarity classifying graph, identifying \
a sort of writing \[OpenCurlyDoubleQuote]path/outline\[CloseCurlyDoubleQuote] \
taken.  Additionally, textStructure analysis is presented upon mouseover.\
\>", "Text",
 CellChangeTimes->{{3.6768690995082617`*^9, 3.676869101962051*^9}, {
  3.6768691336438026`*^9, 3.676869142097518*^9}, {3.676869198730399*^9, 
  3.6768693500378532`*^9}, {3.6768709846893587`*^9, 3.67687117070061*^9}, {
  3.676906223040416*^9, 3.676906224511161*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Strings", "Subsection",
 CellChangeTimes->{{3.676905148596642*^9, 3.6769051504338923`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "string1", "=", " ", 
   "\"\<You can save water by not putting chemicals in water.Also by not \
putting food in water and also not putting chlorine in plane water.So all the \
animals and mammals won't die.Don't just take one little sip and through the \
rest away because you're just wasting money to.And if you're wasting money \
you're wasting trees.Because everyone including animals drinks water from all \
kinds of body of water like rivers,lakes.Try to make water as clear as you \
can by not doing all three of those things.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string2", " ", "=", 
   "\"\<One day in KRES-NL it was picture day in the Morning All my friend's \
Look Asome And I was Just Wearing My I Love New Yory Shirt on And Some Plon \
Jean's My friend had summer dresses. That day All bad thing's were hapening \
my ucle got run over by a goat My Ant was in here car and some Agrey \
butterflys grabd here car And flew away. but one day in the Lunch Room | sew \
A black pair of glasses when I put them on And suddenle I was wearing a flowe \
midnit blue gown My uncle stop getting ran over by a goat the butterfly gave \
up. Ahhhhh! I was All a dream but I was wearing the glasses. And the dress.\>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string3", " ", "=", " ", 
   "\"\<I found thes glass in a cave. It see things that are warm look at me \
I'm glowred. NOW look at Mrs. Griswald chair. it glows Blue. that's becuse \
your seeing whith Heat. thing that are alive glow red. thing that are not \
alive like are desk glow Blue. can we go see the cave that your found those \
glasses yes. Hers the cave. Wow. hnnm. lecks look form some glasses. haw \
whats this gold. thats gold. whats this. that platnom. whats this that rubes. \
whats this. thats emrols. whats this. thats red Dimons. thats 12.6 millon \
Dollers woth of rocks. the end\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string4", " ", "=", " ", 
   "\"\<The Glasses I'm walking around and they give me magic powers to see \
threw anything.And the record what you see.And I can talk to the glasses and \
they tell me what I ask them and they have a gps inside the glasses to tell \
you where to go. The glasses give me a lot of powers and if im in danger the \
glasses will tell me and call the police.And they give me the power to watch \
movies and shows on\nthe glasses. The end\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string5", " ", "=", " ", 
   "\"\<I am walking around in the woods. I put on my special glasses. I'm \
not walking in the woods anymore. I'm in a wonderful castle with houses, \
markets, villeges with villigers. I was a king and I had my own masion. I had \
billions of Dollars. I hana servent, a throne, a pet lion, and a golden \
crown. In my mansion, had 50 romes, a prison, a globe, a tv, the fanciest car \
in the world. The\nend\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string6", " ", "=", " ", 
   "\"\<Do you want clean and fresh water? I know I do! Here are some ways \
you can help! One way you can help is solar power If you have solar power \
less fuel is produced into the air. Which will then turn into a cloud, then a \
rain cloud, then finally rain which will fall from a cloud into other sources \
of water.\\t\\t\\t\\t\\n\\nCleaning your town! If you live near a source of \
water  you should clean all trash! If trash gets into the water you it will \
kill animals and destroy there habitat. Don\[CloseCurlyQuote]t put soap fuel \
or any other source of liquid except for water in any water source it will \
pollute the water and no one wants that!\\n\\n\\t\\tI hope you help your \
town. You should always feel free to ask your parents some more ways to help! \
So always remember you can help with anything. I almost forgot NEVER \
litter!\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string7", " ", "=", " ", 
   "\"\<One day I went to my adic and i Found a Pair of old glasses i Pout \
tem on my hair strated to grow really fast. But wenitoke them of...my hair \
started to srink very slowly then i Put them Back on my hair was like \
Rapunzles. Hair it was long! My mom saw me and she was like. My Old Old \
glasses! Were did you Find these? in the adic Mom! Oh yeah iremember Putting \
them in there The end\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "string8", " ", "=", " ", 
   "\"\<If I had magical glasses I WoulD run Like flash. shoot Lazers out of \
the glasses, Learn kung sy, fly Like super man, and move stuff with my mind. \
I can Be a hero if I had those powers. It Would Be awesome If I had every \
singal super power.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.676905255135664*^9, 3.67690527383967*^9}, {
  3.676905392758853*^9, 3.67690539300596*^9}, {3.676905572754352*^9, 
  3.676905643030549*^9}, {3.676905709302891*^9, 3.676905757653606*^9}, {
  3.676905812204577*^9, 3.676905817658248*^9}, {3.676905860267314*^9, 
  3.676905865048729*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application", "Subsection",
 CellChangeTimes->{{3.67690614498592*^9, 3.6769061462953253`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6769053687243547`*^9, 3.676905389207377*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"form", "=", 
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
       RowBox[{"\"\<GradeLevel\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", " ", 
       RowBox[{"\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<String\>\""}], ",", 
       " ", 
       RowBox[{
       "\"\<EssayBody\>\"", " ", "\[Rule]", " ", "\"\<TextArea\>\""}]}], 
      "}"}], ",", "essayanalyze3"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"form", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.676863952401866*^9, 3.676863952912525*^9}, {
  3.676869124909462*^9, 3.676869126954567*^9}, {3.6768704911024933`*^9, 
  3.6768705166845093`*^9}, {3.676870567014007*^9, 3.676870569939254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\<\"NumSentences\"\>", "\[Rule]", "22"}]},
    {
     RowBox[{"\<\"NumWords\"\>", "\[Rule]", "103"}]},
    {
     RowBox[{"\<\"NumCharacters\"\>", "\[Rule]", "549"}]},
    {
     RowBox[{"\<\"NumSyllables\"\>", "\[Rule]", "65"}]},
    {
     RowBox[{"\<\"LongestSentence\"\>", "\[Rule]", 
      RowBox[{"\<\"can we go see the cave that your found those glasses \
yes.\"\>", "\[Rule]", "57"}]}]},
    {
     RowBox[{"\<\"Polysyllables\"\>", "\[Rule]", 
      RowBox[{"{", "}"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.6768705784785147`*^9, {3.676870690019597*^9, 3.676870719824629*^9}, 
   3.6768707663779716`*^9, {3.6768708164871693`*^9, 3.676870845828302*^9}, 
   3.676870886504939*^9, 3.6768709476742268`*^9, 3.676904892217725*^9, 
   3.676905160559154*^9, 3.676905890097176*^9, 3.676908454969241*^9, 
   3.6769117788465443`*^9, 3.6772516647623816`*^9, 3.677253615197261*^9, 
   3.67812739681654*^9}],

Cell[BoxData["\<\"I found \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"thes\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"the\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"hes\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"these\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"thees\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thews\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"thee\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"tees\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"shes\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"this\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"ties\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"then\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"toes\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thus\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"them\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"they\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"the\\\", \\\"hes\\\", \\\"these\\\", \\\
\"thees\\\", \\\"thews\\\", \\\"thee\\\", \\\"tees\\\", \\\"shes\\\", \
\\\"this\\\", \\\"ties\\\", \\\"then\\\", \\\"toes\\\", \\\"thus\\\", \
\\\"them\\\", \\\"they\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, None]], \
\\\"Highlighted\\\"]\\) glass in a cave It see things that are warm look at \
me I'm \\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"glowred\\\\\\\"\
\\\", RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"growled\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"glowed\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"glowered\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"glow \
red\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"glow-red\\\\\\\"\\\", \\\",\\\", \\\"\
\\\\\\\"lowered\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"glower\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"glamored\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"gloved\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"colored\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Clorets\\\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"growled\\\", \\\"glowed\\\", \\\"glowered\\\", \\\"glow red\\\", \
\\\"glow-red\\\", \\\"lowered\\\", \\\"glower\\\", \\\"glamored\\\", \
\\\"gloved\\\", \\\"colored\\\", \\\"Clorets\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) NOW look at Mrs. \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"Griswald\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Oswald\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Crosswalk\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Grunewald\\\\\\\"\\\
\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], List[\\\"Oswald\\\", \
\\\"Crosswalk\\\", \\\"Grunewald\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, \
None]], \\\"Highlighted\\\"]\\) chair it glows Blue that's \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"becuse\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"because\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"bemuse\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"excuse\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"accuse\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"beseech\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"secure\\\\\\\
\"\\\", \\\",\\\", \\\"\\\\\\\"bequest\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Backus\\\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"because\\\", \\\"bemuse\\\", \\\"excuse\\\", \\\"accuse\\\", \
\\\"beseech\\\", \\\"secure\\\", \\\"bequest\\\", \\\"Backus\\\"], \
\\\"Tooltip\\\"]]], Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) your \
seeing \\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"whith\\\\\\\"\\\
\", RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"whit\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"white\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"whits\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"which\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"whit h\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"White\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"whist\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"whether\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"worth\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"whit\\\", \\\"with\\\", \\\"white\\\", \
\\\"whits\\\", \\\"which\\\", \\\"whit h\\\", \\\"White\\\", \\\"whist\\\", \
\\\"whether\\\", \\\"worth\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, None]], \
\\\"Highlighted\\\"]\\) Heat thing that are alive glow red thing that are not \
alive like are desk glow Blue can we go see the cave that your found those \
glasses yes Hers the cave Wow \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"hnnm\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"NM\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"hahnium\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"hansom\\\\\\\"\\\"]], \
\\\"}\\\"]]], Function[Annotation[Slot[1], List[\\\"NM\\\", \\\"hahnium\\\", \
\\\"hansom\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, None]], \\\"Highlighted\
\\\"]\\) \\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"lecks\\\\\\\"\
\\\", RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"flecks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"leeks\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"licks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"leaks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"lacks\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"necks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"locks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"decks\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"lucks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"pecks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"becks\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"fleck\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"deckles\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"heckles\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"speckle\\\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"flecks\\\", \\\"leeks\\\", \\\"licks\\\", \\\"leaks\\\", \\\"lacks\\\
\", \\\"necks\\\", \\\"locks\\\", \\\"decks\\\", \\\"lucks\\\", \
\\\"pecks\\\", \\\"becks\\\", \\\"fleck\\\", \\\"deckles\\\", \
\\\"heckles\\\", \\\"speckle\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, \
None]], \\\"Highlighted\\\"]\\) look form some glasses haw whats this gold \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"thats\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"thatch\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"tats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"hats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\[CloseCurlyQuote]s\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"teats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"chats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"ghats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thaws\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"twats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"whats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ghats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"t hats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that s\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"thatch\\\", \\\"that\\\", \\\"tats\\\", \
\\\"hats\\\", \\\"that\\\\[CloseCurlyQuote]s\\\", \\\"teats\\\", \
\\\"chats\\\", \\\"ghats\\\", \\\"thaws\\\", \\\"twats\\\", \\\"whats\\\", \\\
\"Ghats\\\", \\\"t hats\\\", \\\"that s\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) gold whats this that \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"platnom\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"platoon\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Plato\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Plano\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"plat\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"plutonium\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"plaiting\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"platoon\\\", \\\"Plato\\\", \\\"Plano\\\
\", \\\"plat\\\", \\\"plutonium\\\", \\\"plaiting\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) whats this that rubes whats \
this \\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"thats\\\\\\\"\\\"\
, RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"thatch\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"tats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"hats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that\\\\[CloseCurlyQuote]s\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"teats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"chats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"ghats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thaws\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"twats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"whats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ghats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"t hats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that s\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"thatch\\\", \\\"that\\\", \\\"tats\\\", \
\\\"hats\\\", \\\"that\\\\[CloseCurlyQuote]s\\\", \\\"teats\\\", \
\\\"chats\\\", \\\"ghats\\\", \\\"thaws\\\", \\\"twats\\\", \\\"whats\\\", \\\
\"Ghats\\\", \\\"t hats\\\", \\\"that s\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"emrols\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"embroils\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"enrolls\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"roles\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"amaryllis\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"emerald\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"embroils\\\", \\\"enrolls\\\", \
\\\"roles\\\", \\\"amaryllis\\\", \\\"emerald\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) whats this \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"thats\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"thatch\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"tats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"hats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\[CloseCurlyQuote]s\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"teats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"chats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"ghats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thaws\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"twats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"whats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ghats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"t hats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that s\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"thatch\\\", \\\"that\\\", \\\"tats\\\", \
\\\"hats\\\", \\\"that\\\\[CloseCurlyQuote]s\\\", \\\"teats\\\", \
\\\"chats\\\", \\\"ghats\\\", \\\"thaws\\\", \\\"twats\\\", \\\"whats\\\", \\\
\"Ghats\\\", \\\"t hats\\\", \\\"that s\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) red \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"Dimons\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Demons\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Dimensions\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Dimension\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Simmons\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Diamonds\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Demonize\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Sysadmins\
\\\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"Demons\\\", \\\"Dimensions\\\", \\\"Dimension\\\", \\\"Simmons\\\", \
\\\"Diamonds\\\", \\\"Demonize\\\", \\\"Sysadmins\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"thats\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"thatch\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"tats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"hats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"that\\\\[CloseCurlyQuote]s\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"teats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"chats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"ghats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"thaws\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"twats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"whats\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ghats\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"t hats\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"that s\\\\\\\"\\\"]], \\\"}\\\"]]], \
Function[Annotation[Slot[1], List[\\\"thatch\\\", \\\"that\\\", \\\"tats\\\", \
\\\"hats\\\", \\\"that\\\\[CloseCurlyQuote]s\\\", \\\"teats\\\", \
\\\"chats\\\", \\\"ghats\\\", \\\"thaws\\\", \\\"twats\\\", \\\"whats\\\", \\\
\"Ghats\\\", \\\"t hats\\\", \\\"that s\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) 12.6 \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"millon\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"million\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Dillon\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Villon\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"mill on\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"mill-on\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"millpond\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Milton\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"milling\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Mellon\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"milliner\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"mullion\\\
\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"million\\\", \\\"Dillon\\\", \\\"Villon\\\", \\\"mill on\\\", \
\\\"mill-on\\\", \\\"millpond\\\", \\\"Milton\\\", \\\"milling\\\", \
\\\"Mellon\\\", \\\"milliner\\\", \\\"mullion\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"Dollers\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Rollers\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Hollers\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Dollars\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Doodlers\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Dwellers\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Drillers\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Drollery\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Dolly\\\\[CloseCurlyQuote]s\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Doilies\\\\\\\"\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], \
List[\\\"Rollers\\\", \\\"Hollers\\\", \\\"Dollars\\\", \\\"Doodlers\\\", \
\\\"Dwellers\\\", \\\"Drillers\\\", \\\"Drollery\\\", \
\\\"Dolly\\\\[CloseCurlyQuote]s\\\", \\\"Doilies\\\"], \\\"Tooltip\\\"]]], \
Rule[FrameStyle, None]], \\\"Highlighted\\\"]\\) \
\\!\\(\\*TemplateBox[List[TagBox[TooltipBox[\\\"\\\\\\\"woth\\\\\\\"\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"quoth\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"wot\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"worth\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"wroth\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"loth\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"doth\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"goth\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"moth\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"both\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Roth\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Goth\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"wot h\\\\\\\"\
\\\"]], \\\"}\\\"]]], Function[Annotation[Slot[1], List[\\\"quoth\\\", \
\\\"with\\\", \\\"wot\\\", \\\"worth\\\", \\\"wroth\\\", \\\"loth\\\", \
\\\"doth\\\", \\\"goth\\\", \\\"moth\\\", \\\"both\\\", \\\"Roth\\\", \
\\\"Goth\\\", \\\"wot h\\\"], \\\"Tooltip\\\"]]], Rule[FrameStyle, None]], \\\
\"Highlighted\\\"]\\) of rocks the end \"\>"], "Print",
 CellChangeTimes->{
  3.6768705784785147`*^9, {3.676870690019597*^9, 3.676870719824629*^9}, 
   3.6768707663779716`*^9, {3.6768708164871693`*^9, 3.676870845828302*^9}, 
   3.676870886504939*^9, 3.6768709476742268`*^9, 3.676904892217725*^9, 
   3.676905160559154*^9, 3.676905890097176*^9, 3.676908454969241*^9, 
   3.6769117788465443`*^9, 3.6772516647623816`*^9, 3.677253615197261*^9, 
   3.6781273983055987`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 20, "Length" -> 6, "InitialType" -> 
          TypeSystem`Struct[{
            "Ideas", "Organization", "Voice", "Word Choice", 
             "Sentence Fluency", "Conventions"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D"]], 
              TypeSystem`Atom[Integer], 4], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C"]], 
              TypeSystem`Atom[Integer], 3], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5]}], "Shape" -> 
          TypeSystem`PackageScope`DocumentShape[
            
            Association[{"Ideas"} -> 
             TypeSystem`PackageScope`ElidedShape[1], {"Organization"} -> 
             TypeSystem`PackageScope`ElidedShape[1], {"Voice"} -> 
             TypeSystem`PackageScope`AtomShape[34], {"Word Choice"} -> 
             TypeSystem`PackageScope`ElidedShape[1], {"Sentence Fluency"} -> 
             TypeSystem`PackageScope`ElidedShape[1], {"Conventions"} -> 
             TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[243319409], "Type" -> 
          TypeSystem`Struct[{
            "Ideas", "Organization", "Voice", "Word Choice", 
             "Sentence Fluency", "Conventions"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D"]], 
              TypeSystem`Atom[Integer], 4], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C"]], 
              TypeSystem`Atom[Integer], 3], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration["A", "B", "C", "D", "E"]], 
              TypeSystem`Atom[Integer], 5]}], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[243319409]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Ideas\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Ideas\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Ideas"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Ideas"]]], "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Ideas"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Ideas"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}, {
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Organization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Organization\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Organization"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Organization"]]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Organization"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Organization"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}, {
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Voice\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Voice\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Voice"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Voice"]]], "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Voice"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Word Choice\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Word Choice\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Word Choice"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Word Choice"]]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Word Choice"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Word Choice"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}, {
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sentence Fluency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sentence Fluency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Sentence Fluency"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Sentence Fluency"]]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Sentence Fluency"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Sentence Fluency"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}, {
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Conventions\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Conventions\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Conventions"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Conventions"]]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 5], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"A", "B", "C", "D", "E"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][{
                    Key["Conventions"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1332411721][
                    GeneralUtilities`Slice[
                    Key["Conventions"]]], "Mouse"], BaseStyle -> {
                    GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721][
                  TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          Initialization :> If[
            Not[$CloudEvaluation], 
            TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1332411721]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1332411721][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1332411721][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
          ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           
           TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           
           TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
      DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{
       {Opacity[0], PointBox[{0.3429357798165137, 0.}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
         Thickness[Small]}], 
         {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5412844036697247, 0.}, {1.4587155963302751`, 
                5.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{15.30320951910176, 
               46.11407685999796}, {-107.7767434650529, 96.82582808496338}}],
             StatusArea[#, 5]& ,
             TagBoxNote->"5"],
            StyleBox["5", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[5, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.2548481111111111, 0.35357422222222223`, 0.5389008888888889], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5412844036697246`, 0.}, {2.458715596330275, 
                4.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{48.34205492067861, 
               79.1529222615748}, {-66.95622915504964, 96.82582808496338}}],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.2704347777777778, 0.43505644444444447`, 0.35968022222222223`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.541284403669725, 0.}, {3.4587155963302756`, 
                3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{81.38090032225547, 
               112.19176766315168`}, {-26.13571484504638, 96.82582808496338}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.33311066666666667`, 0.5032283333333333, 0.26154733333333335`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5412844036697253`, 0.}, {4.458715596330276, 
                3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{114.41974572383235`, 
               145.23061306472854`}, {-26.13571484504638, 96.82582808496338}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.5090482222222222, 0.6077703333333333, 0.25180933333333333`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.541284403669725, 0.}, {5.458715596330276, 2.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{147.4585911254092, 178.2694584663054}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.7294032222222222, 0.7249631111111111, 0.2860526666666667], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.541284403669725, 0.}, {6.458715596330276, 2.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{180.49743652698606`, 211.30830386788227`}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, 
         {RGBColor[0.8562609999999999, 0.742794, 0.31908333333333333`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.541284403669725, 0.}, {7.458715596330276, 2.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{213.53628192856294`, 244.34714926945912`}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.8272665555555555, 0.5658831111111111, 0.3086672222222222], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.541284403669725, 0.}, {8.458715596330276, 2.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{246.5751273301398, 277.385994671036}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, 
         {RGBColor[
          0.7390852222222222, 0.2704317777777778, 0.23901633333333333`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.541284403669724, 0.}, {9.458715596330276, 2.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{279.6139727317166, 310.4248400726128}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, 
         {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.541284403669724, 0.}, {10.458715596330276`, 
                2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{312.65281813329347`, 343.4636854741897}, {
               14.684799464956868`, 96.82582808496338}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.3429357798165137, 0.}, {10.66103119266055, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5412844036697247, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5412844036697247, 
                0.}]}], 
             LineBox[{{10.458715596330276`, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {10.458715596330276`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               LineBox[{{1.4587155963302751`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4587155963302751`, 
                  0.}]}], 
               LineBox[{{1.5412844036697249`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.5412844036697249`, 
                  0.}]}], 
               LineBox[{{2.458715596330275, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.458715596330275, 
                  0.}]}], 
               LineBox[{{2.541284403669725, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.541284403669725, 
                  0.}]}], 
               LineBox[{{3.4587155963302756`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.4587155963302756`, 
                  0.}]}], 
               LineBox[{{3.5412844036697253`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5412844036697253`, 
                  0.}]}], 
               LineBox[{{4.458715596330276, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.458715596330276, 
                  0.}]}], 
               LineBox[{{4.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.541284403669724, 
                  0.}]}], 
               LineBox[{{5.458715596330275, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.458715596330275, 
                  0.}]}], 
               LineBox[{{5.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.541284403669724, 
                  0.}]}], 
               LineBox[{{6.458715596330275, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.458715596330275, 
                  0.}]}], 
               LineBox[{{6.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.541284403669724, 
                  0.}]}], 
               LineBox[{{7.458715596330275, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.458715596330275, 
                  0.}]}], 
               LineBox[{{7.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.541284403669724, 
                  0.}]}], 
               LineBox[{{8.458715596330276, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {8.458715596330276, 
                  0.}]}], 
               LineBox[{{8.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {8.541284403669724, 
                  0.}]}], 
               LineBox[{{9.458715596330276, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {9.458715596330276, 
                  0.}]}], 
               LineBox[{{9.541284403669724, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {9.541284403669724, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"whats\"\>", Offset[{0., -2.}, {1., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"thats\"\>", Offset[{0., -2.}, {2., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"look\"\>", 
               Offset[{0., -2.}, {3.0000000000000004, 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"cave\"\>", Offset[{0., -2.}, {4., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"thing\"\>", Offset[{0., -2.}, {5., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"red\"\>", Offset[{0., -2.}, {6., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"gold\"\>", Offset[{0., -2.}, {7., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"glow\"\>", Offset[{0., -2.}, {8., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"glasses\"\>", Offset[{0., -2.}, {9., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox["\<\"found\"\>", Offset[{0., -2.}, {10., 0.}], 
               ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
             "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.3429357798165137, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
           FormBox["\"whats\"", TraditionalForm], 0}, {2., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
           FormBox["\"thats\"", TraditionalForm], 0}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox["\"look\"", TraditionalForm], 0}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox["\"cave\"", TraditionalForm], 0}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox["\"thing\"", TraditionalForm], 0}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox["\"red\"", TraditionalForm], 0}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox["\"gold\"", TraditionalForm], 0}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox["\"glow\"", TraditionalForm], 0}, {9., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
           FormBox["\"glasses\"", TraditionalForm], 0}, {10., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
           FormBox["\"found\"", TraditionalForm], 0}}, {{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.004, 0}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{358., Automatic},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], ",", 
     TemplateBox[{GraphicsBox[{{}, {}, 
         DynamicModuleBox[{
          DynamicChart`click$387369$390813 = False, 
           DynamicChart`click$387375$390813 = False}, {{
            Directive[
             RGBColor[0.5, 0.5, 1.], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]]], {{{{{{}, {{
                   Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                   GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.2660149499540958`, 
                    3.141592653589793}]}], StatusArea[#, 20]& , TagBoxNote -> 
                    "20"], 
                    StyleBox["20", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[20, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387369$390813, 
                    FEPrivate`Not[DynamicChart`click$387369$390813]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$387369$390813, {{{1., 0}, {
                    0, 1.}}, {-0.1183144424827045, 0.16125040372044597`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$387369$390813}]]}, {
                  
                   Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                   GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.2660149499540958`}]}], StatusArea[#, 47]& , TagBoxNote -> 
                    "47"], 
                    StyleBox["47", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[47, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387375$390813, 
                    FEPrivate`Not[DynamicChart`click$387375$390813]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$387375$390813, {{{1., 0}, {0, 1.}}, {
                    0.1183144424827045, -0.16125040372044597`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$387375$390813}]]}}}}}, {}}, {{}}}}, {{{{
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{{}, {}}, StatusArea[#, 20]& , TagBoxNote -> "20"], 
                   
                   StyleBox["20", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[20, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$387369$390813, 
                    FEPrivate`Not[DynamicChart`click$387369$390813]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$387369$390813, {{{1., 0}, {
                    0, 1.}}, {-0.1183144424827045, 0.16125040372044597`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$387369$390813}]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{{}, {}}, StatusArea[#, 47]& , TagBoxNote -> "47"], 
                   
                   StyleBox["47", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[47, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$387375$390813, 
                    FEPrivate`Not[DynamicChart`click$387375$390813]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$387375$390813, {{{1., 0}, {0, 1.}}, {
                   0.1183144424827045, -0.16125040372044597`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$387375$390813}]]}, {}}}, {}}}, 
          DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
        ContentSelectable -> False, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], LabelStyle -> {
           GrayLevel[0], FontFamily -> "Arial"}, 
         PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
         Scaled[0.02]}],FormBox[
        FormBox[
         TemplateBox[{"\"Stopwords\"", "\"Other Words\""}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}, {
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{GraphicsBox[{{}, {}, 
           
           DynamicModuleBox[{
            DynamicChart`click$387473$390831 = False, 
             DynamicChart`click$387477$390831 = False}, {{
              Directive[
               RGBColor[0.5, 0.5, 1.], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5157838684998168, 
                    3.141592653589793}]}], StatusArea[#, 39]& , TagBoxNote -> 
                    "39"], 
                    StyleBox["39", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[39, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387473$390831, 
                    FEPrivate`Not[DynamicChart`click$387473$390831]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$387473$390831, {{{1., 0}, {0, 1.}}, {
                    0.05100855371233531, 0.19338595463005015`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$387473$390831}]]}, {
                    
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.5157838684998168}]}], 
                    StatusArea[#, 28]& , TagBoxNote -> "28"], 
                    StyleBox["28", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[28, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387477$390831, 
                    FEPrivate`Not[DynamicChart`click$387477$390831]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    If[
                    DynamicChart`click$387477$390831, {{{1., 0}, {
                    0, 1.}}, {-0.051008553712335286`, \
-0.19338595463005015`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$387477$390831}]]}}}}}, {}}, {{}}}}, {{{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 39]& , TagBoxNote -> "39"], 
                    StyleBox["39", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[39, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387473$390831, 
                    FEPrivate`Not[DynamicChart`click$387473$390831]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$387473$390831, {{{1., 0}, {0, 1.}}, {
                    0.05100855371233531, 0.19338595463005015`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$387473$390831}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
                    StyleBox["28", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                    Style[28, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$387477$390831, 
                    FEPrivate`Not[DynamicChart`click$387477$390831]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                  Dynamic[
                   If[
                   DynamicChart`click$387477$390831, {{{1., 0}, {
                    0, 1.}}, {-0.051008553712335286`, \
-0.19338595463005015`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$387477$390831}]]}, {}}}, {}}}, 
            
            DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {ContentSelectable -> False, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], LabelStyle -> {
             GrayLevel[0], FontFamily -> "Arial"}, 
           PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
           Scaled[0.02]}],FormBox[
          FormBox[
           
           TemplateBox[{"\"Common Words\"", "\"Uncommon Words\""}, 
            "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}, {
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
               Background -> Automatic, StripOnInput -> False], 
              TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                  ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       GraphicsBox[
        NamespaceBox["NetworkGraphics",
         DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{{Indeterminate, 1} -> "Positive", {"Weather", 2} -> 
             "Positive", {Indeterminate, 3} -> "Negative", {"Fashion", 4} -> 
             "Positive", {"FoodAndDrink", 5} -> 
             "Positive", {Indeterminate, 6} -> "Positive", {Indeterminate, 7} -> 
             "Negative", {Indeterminate, 8} -> "Positive", {Indeterminate, 9} -> 
             "Positive", {Indeterminate, 10} -> 
             "Positive", {Indeterminate, 11} -> 
             "Neutral", {Indeterminate, 12} -> 
             "Positive", {Indeterminate, 13} -> 
             "Positive", {Indeterminate, 14} -> 
             "Neutral", {Indeterminate, 15} -> 
             "Positive", {Indeterminate, 16} -> 
             "Neutral", {Indeterminate, 17} -> "Neutral", {Indeterminate, 18} -> 
             "Positive", {Indeterminate, 19} -> 
             "Neutral", {Indeterminate, 20} -> 
             "Positive", {Indeterminate, 21} -> 
             "Positive", {Indeterminate, 22} -> "Negative"}, {{{1, 2}, {2, 
             3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10,
              11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {15, 16}, {16, 
             17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}}, Null}, {
            GraphLayout -> "LayeredDigraphEmbedding", 
             VertexLabels -> {"Name"}}]]}, 
          TagBox[GraphicsGroupBox[{
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[1.25], 
              ArrowBox[{{0., 21.}, {0., 20.}}, 0.09236311239193083], 
              ArrowBox[{{0., 20.}, {0., 19.}}, 0.09236311239193083], 
              ArrowBox[{{0., 19.}, {0., 18.}}, 0.09236311239193083], 
              ArrowBox[{{0., 18.}, {0., 17.}}, 0.09236311239193083], 
              ArrowBox[{{0., 17.}, {0., 16.}}, 0.09236311239193083], 
              ArrowBox[{{0., 16.}, {0., 15.}}, 0.09236311239193083], 
              ArrowBox[{{0., 15.}, {0., 14.}}, 0.09236311239193083], 
              ArrowBox[{{0., 14.}, {0., 13.}}, 0.09236311239193083], 
              ArrowBox[{{0., 13.}, {0., 12.}}, 0.09236311239193083], 
              ArrowBox[{{0., 12.}, {0., 11.}}, 0.09236311239193083], 
              ArrowBox[{{0., 11.}, {0., 10.}}, 0.09236311239193083], 
              ArrowBox[{{0., 10.}, {0., 9.}}, 0.09236311239193083], 
              ArrowBox[{{0., 9.}, {0., 8.}}, 0.09236311239193083], 
              ArrowBox[{{0., 8.}, {0., 7.}}, 0.09236311239193083], 
              ArrowBox[{{0., 7.}, {0., 6.}}, 0.09236311239193083], 
              ArrowBox[{{0., 6.}, {0., 5.}}, 0.09236311239193083], 
              ArrowBox[{{0., 5.}, {0., 4.}}, 0.09236311239193083], 
              ArrowBox[{{0., 4.}, {0., 3.}}, 0.09236311239193083], 
              ArrowBox[{{0., 3.}, {0., 2.}}, 0.09236311239193083], 
              ArrowBox[{{0., 2.}, {0., 1.}}, 0.09236311239193083], 
              ArrowBox[{{0., 1.}, {0., 0.}}, 0.09236311239193083]}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
              0.7]}], {DiskBox[{0., 21.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "1"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 21.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 20.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\<\"Weather\"\>", ",", "2"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 20.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 19.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "3"}], "}"}], 
                 "\[Rule]", "\<\"Negative\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 19.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 18.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\<\"Fashion\"\>", ",", "4"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 18.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 17.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\<\"FoodAndDrink\"\>", ",", "5"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 17.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 16.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "6"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 16.09236311239193}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 15.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "7"}], "}"}], 
                 "\[Rule]", "\<\"Negative\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 15.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 14.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "8"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 14.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 13.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "9"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 13.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 12.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "10"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 12.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 11.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "11"}], "}"}], 
                 "\[Rule]", "\<\"Neutral\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 11.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 10.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "12"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 10.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 9.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "13"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 9.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 8.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "14"}], "}"}], 
                 "\[Rule]", "\<\"Neutral\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 8.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 7.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "15"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 7.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 6.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "16"}], "}"}], 
                 "\[Rule]", "\<\"Neutral\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 6.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 5.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "17"}], "}"}], 
                 "\[Rule]", "\<\"Neutral\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 5.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 4.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "18"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 4.092363112391931}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 3.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "19"}], "}"}], 
                 "\[Rule]", "\<\"Neutral\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 3.0923631123919306}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 2.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "20"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 2.0923631123919306}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 1.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "21"}], "}"}], 
                 "\[Rule]", "\<\"Positive\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 1.0923631123919308}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 0.}, 0.09236311239193083], InsetBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Indeterminate", ",", "22"}], "}"}], 
                 "\[Rule]", "\<\"Negative\"\>"}], 
                Offset[{2, 2}, {0.09236311239193083, 0.09236311239193083}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}}],
           MouseAppearanceTag["NetworkGraphics"]],
          AllowKernelInitialization->False]],
        DefaultBaseStyle->{
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]},
        FormatType->TraditionalForm,
        FrameTicks->None,
        ImageSize->{153.23959679503747`, Automatic}]}], "}"}], ",", 
     RowBox[{"{", 
      TagBox[GridBox[{
         {
          
          PaneSelectorBox[{False->"\<\"I found thes glass in a cave.\"\>", 
           True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"PRP1", "I1", "NP1", "VBD1", "found1", "JJ1", "thes1", 
                  "NN1", "glass1", "NP2", "IN1", "in1", "DT1", "a1", "NN2", 
                  "cave1", "NP3", "PP1", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 9}, {10, 6}, {10, 
                  8}, {11, 12}, {13, 14}, {15, 16}, {17, 13}, {17, 15}, {18, 
                  11}, {18, 17}, {19, 4}, {19, 10}, {19, 18}, {20, 21}, {22, 
                  3}, {22, 19}, {22, 20}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 440, 
                  VertexLabels -> {"thes1" -> Placed[
                    Framed[
                    Style["thes", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "cave1" -> Placed[
                    Framed[
                    Style["cave", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP1" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PP1" -> Placed[
                    Framed[
                    Style["Prepositional Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "in1" -> Placed[
                    Framed[
                    Style["in", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "I1" -> Placed[
                    Framed[
                    Style["I", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glass1" -> Placed[
                    Framed[
                    Style["glass", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "found1" -> Placed[
                    Framed[
                    Style["found", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "a1" -> Placed[
                    Framed[
                    Style["a", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBD1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQBWImKIaB8/t67Wp3fbaH8UVWpgf/8X1lj1/+Fwa/tfFT
NO8LJoc1JxW27C1gcBCCmgPTD+PDzEeXh+mHmScEpVHV/7KXANO3MORh9sLM
OwemmR1g8jA+TD+6PLp+dD5293E5oLqPywHVfQj5YxLci2fb8KOZLwBXD+PD
whVd3tYlvHKuqBCaf4TR/CMM148uj64fnY/uPnQ+uv9x8WHhBuELockLoZmH
Lo/QDwCjyif9
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.2330295985702155}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.2330295985702155},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.8220197323801437}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"I\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.8220197323801437},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.6440394647602874}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.6440394647602874},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.8220197323801435, 1.2330295985702155}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.8220197323801435, 1.2330295985702155},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.8220197323801435, 0.8220197323801437}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"found\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.8220197323801435, 0.8220197323801437},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.644039464760287, 0.8220197323801437}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.644039464760287, 0.8220197323801437},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.644039464760287, 0.41100986619007207}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"thes\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.644039464760287, 0.41100986619007207},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.4660591971404306, 0.8220197323801437}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.4660591971404306, 0.8220197323801437},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.4660591971404306, 0.41100986619007207}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glass\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.4660591971404306, 0.41100986619007207},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.055049330950359, 1.2330295985702155}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.055049330950359, 1.2330295985702155},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.288078929520574, 0.8220197323801437}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.288078929520574, 0.8220197323801437},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.288078929520574, 0.41100986619007207}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"in\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.288078929520574, 0.41100986619007207},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.110098661900718, 0.41100986619007207}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.110098661900718, 0.41100986619007207},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.110098661900718, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"a\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.110098661900718, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.932118394280861, 0.41100986619007207}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.932118394280861, 0.41100986619007207},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.932118394280861, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"cave\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.932118394280861, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.52110852809079, 0.8220197323801437}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.52110852809079, 0.8220197323801437},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.904593728805682, 1.2330295985702155}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Prepositional Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.904593728805682, 1.2330295985702155},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.3633067305929125, 1.6440394647602874}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.3633067305929125, 1.6440394647602874},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.726613461185825, 1.6440394647602874}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.726613461185825, 1.6440394647602874},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.726613461185825, 1.2330295985702155}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.726613461185825, 1.2330295985702155},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.3633067305929125, 2.055049330950359}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.3633067305929125, 2.055049330950359},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->440], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{
           False->"\<\"It see things that are warm look at me I'm \
glowred.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"PRP1", "It1", "NP1", "VBP1", "see1", "NNS1", 
                  "things1", "NP3", "WDT1", "that1", "WHNP1", "VBP2", "are1", 
                  "JJ1", "warm1", "ADJP1", "VP2", "S4", "SBAR2", "NP2", 
                  "VBP3", "look1", "IN1", "at1", "PRP2", "me1", "NP4", "PP1", 
                  "VP3", "S3", "SBAR1", "VP1", "S2", "PRP3", "I1", "NP5", 
                  "VBP4", "'m1", "VBN1", "glowred1", "VP5", "VP4", ".1", ".2",
                   "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 6}, {9, 10}, {11, 
                  9}, {12, 13}, {14, 15}, {16, 14}, {17, 12}, {17, 16}, {18, 
                  17}, {19, 11}, {19, 18}, {20, 8}, {20, 19}, {21, 22}, {23, 
                  24}, {25, 26}, {27, 25}, {28, 23}, {28, 27}, {29, 21}, {29, 
                  28}, {30, 20}, {30, 29}, {31, 30}, {32, 4}, {32, 31}, {33, 
                  3}, {33, 32}, {34, 35}, {36, 34}, {37, 38}, {39, 40}, {41, 
                  39}, {42, 37}, {42, 41}, {43, 44}, {45, 33}, {45, 36}, {45, 
                  42}, {45, 43}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 900, 
                  VertexLabels -> {"S3" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP5" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "me1" -> Placed[
                    Framed[
                    Style["me", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "'m1" -> Placed[
                    Framed[
                    Style["'m", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP2" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP3" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "are1" -> Placed[
                    Framed[
                    Style["are", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP4" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBN1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S4" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADJP1" -> Placed[
                    Framed[
                    Style["Adjective Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "see1" -> Placed[
                    Framed[
                    Style["see", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "warm1" -> Placed[
                    Framed[
                    Style["warm", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "at1" -> Placed[
                    Framed[
                    Style["at", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "I1" -> Placed[
                    Framed[
                    Style["I", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glowred1" -> Placed[
                    Framed[
                    Style[
                    "glowred", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP1" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "It1" -> Placed[
                    Framed[
                    Style["It", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP3" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "things1" -> Placed[
                    Framed[
                    Style[
                    "things", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WHNP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP2" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "look1" -> Placed[
                    Framed[
                    Style["look", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PP1" -> Placed[
                    Framed[
                    Style["Prepositional Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP4" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP5" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WDT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP3" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP4" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDQAWImKOZfrMt6VPuxvfuzWtsyLkEHGP9P0JzXfpd4HXDJ
C4BpYQy+jd1Wg92x3+xvxN89I+wr6nBuu8iBiAW/4PphfJj56PIVVzPfn5zE
6AAzjwEKIPKMcH7OTZuYjf0/7XHJ3wTbz4rB/w229619Flg/p4MbWN9He5h5
ML4HlMYlD7MPnf8LbP5fe5h9blBxVPNg/If26PI3oPpg9sHcCVMP48P8hUse
Zh46H918XHyYf9D56P5D56OHLzqfy/9kXfpVVgdY/P+G0qj6eeH2ocuvPhK6
UFZayAFmHj80ncDUw/gw/6DLw9IlzLyFMr1TkvLE4ephfFh44ZKHmYfORzcf
nY/ufnQ+evjg4sPyCzofPf+g89HzJzp/7bv2FJ9jAnB/6Tp1zF0UxQfXD+PD
7MMlDzMPnY9u/opZyvfe5QvD9cP4MPPR5QvDLy+1nSgKN89KpDm3Z5M4XD2M
DwsvXPIw89D56Oaj89Hdf7r30R/Nr9JweRgfZh66PLp+AMQnQaQ=
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {
                    DiskBox[{0.5990929700029443, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.5990929700029443, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.5990929700029443, 3.7276895911294314}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"It\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.5990929700029443, 3.7276895911294314},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.5990929700029443, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.5990929700029443, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.6641471388970674, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.6641471388970674, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.6641471388970674, 3.7276895911294314}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"see\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.6641471388970674, 3.7276895911294314},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.1301083377882466}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.1301083377882466},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.5975812533411853}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"things\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.5975812533411853},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.6626354222353084}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.6626354222353084},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.065054168894123, 1.5975812533411853}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.065054168894123, 1.5975812533411853},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.065054168894123, 1.0650541688941235}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.065054168894123, 1.0650541688941235},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.065054168894123, 2.1301083377882466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.065054168894123, 2.1301083377882466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.130108337788246, 1.0650541688941235}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.130108337788246, 1.0650541688941235},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.130108337788246, 0.5325270844470618}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"are\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.130108337788246, 0.5325270844470618},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1951625066823697, 0.5325270844470618}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1951625066823697, 0.5325270844470618},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1951625066823697, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"warm\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1951625066823697, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1951625066823697, 1.0650541688941235}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1951625066823697, 1.0650541688941235},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.662635422235308, 1.5975812533411853}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.662635422235308, 1.5975812533411853},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.662635422235308, 2.1301083377882466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.662635422235308, 2.1301083377882466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.8638447955647153, 2.6626354222353084}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.8638447955647153, 2.6626354222353084},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9319223977823577, 3.1951625066823697}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9319223977823577, 3.1951625066823697},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.727689591129431, 2.6626354222353084}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.727689591129431, 2.6626354222353084},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.727689591129431, 2.1301083377882466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"look\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.727689591129431, 2.1301083377882466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.792743760023554, 2.1301083377882466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.792743760023554, 2.1301083377882466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.792743760023554, 1.5975812533411853}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"at\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.792743760023554, 1.5975812533411853},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.857797928917678, 1.5975812533411853}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.857797928917678, 1.5975812533411853},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.857797928917678, 1.0650541688941235}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"me\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.857797928917678, 1.0650541688941235},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.857797928917678, 2.1301083377882466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.857797928917678, 2.1301083377882466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.325270844470616, 2.6626354222353084}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Prepositional Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.325270844470616, 2.6626354222353084},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.526480217800024, 3.1951625066823697}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.526480217800024, 3.1951625066823697},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7292013077911905, 3.7276895911294314}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7292013077911905, 3.7276895911294314},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7292013077911905, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7292013077911905, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1966742233441288, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1966742233441288, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3978835966735366, 5.325270844470616}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3978835966735366, 5.325270844470616},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7942554766853136, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7942554766853136, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7942554766853136, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"I\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7942554766853136, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7942554766853136, 5.325270844470616}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7942554766853136, 5.325270844470616},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.859309645579437, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.859309645579437, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.859309645579437, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"'m\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.859309645579437, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.92436381447356, 4.260216675576493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.92436381447356, 4.260216675576493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.92436381447356, 3.7276895911294314}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glowred\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.92436381447356, 3.7276895911294314},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.92436381447356, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.92436381447356, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.391836730026498, 5.325270844470616}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.391836730026498, 5.325270844470616},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.989417983367683, 5.325270844470616}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.989417983367683, 5.325270844470616},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.989417983367683, 4.792743760023555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.989417983367683, 4.792743760023555},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.19365079002061, 5.857797928917678}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.19365079002061, 5.857797928917678},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->900], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{False->"\<\"NOW look at Mrs. Griswald chair.\"\>", 
           True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNP1", "NOW1", "NP1", "VBP1", "look1", "IN1", "at1", 
                  "NNP2", "Mrs.1", "NNP3", "Griswald1", "NN1", "chair1", 
                  "NP2", "PP1", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12,
                   13}, {14, 8}, {14, 10}, {14, 12}, {15, 6}, {15, 14}, {16, 
                  4}, {16, 15}, {17, 18}, {19, 3}, {19, 16}, {19, 17}}}, {
                 EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 380, 
                  VertexLabels -> {"S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PP1" -> Placed[
                    Framed[
                    Style["Prepositional Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Griswald1" -> Placed[
                    Framed[
                    Style[
                    "Griswald", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNP3" -> Placed[
                    Framed[
                    Style["Proper Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "look1" -> Placed[
                    Framed[
                    Style["look", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNP1" -> Placed[
                    Framed[
                    Style["Proper Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "chair1" -> Placed[
                    Framed[
                    Style["chair", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Mrs.1" -> Placed[
                    Framed[
                    Style["Mrs.", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NOW1" -> Placed[
                    Framed[
                    Style["NOW", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNP2" -> Placed[
                    Framed[
                    Style["Proper Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "at1" -> Placed[
                    Framed[
                    Style["at", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAmImKIaBBz+k69LXfLeH8bUWVv3tnPDeHr/8fwy+JpTe
tSTHLmwXs4Mm1ByYfhgfZj52+f/26Oahqv9vrwOm72PI3webw+4AMw/Gh6mH
8WHuRpeHmMfvgGofP4Y8TD8ueZh+SDgIw+VhfJh+dHlc9hPyH3Hhhyt+YOb/
h9uHah66PEI/AOBOEg4=
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.479590885748216}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Proper Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.479590885748216},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.986393923832144}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"NOW\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.986393923832144},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.972787847664288}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.972787847664288},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9863939238321439, 1.479590885748216}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9863939238321439, 1.479590885748216},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9863939238321439, 0.986393923832144}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"look\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9863939238321439, 0.986393923832144},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9727878476642877, 0.986393923832144}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9727878476642877, 0.986393923832144},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9727878476642877, 0.4931969619160721}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"at\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9727878476642877, 0.4931969619160721},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.9591817714964317, 0.4931969619160721}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Proper Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.9591817714964317, 0.4931969619160721},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.9591817714964317, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Mrs.\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.9591817714964317, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9455756953285754, 0.4931969619160721}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Proper Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9455756953285754, 0.4931969619160721},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9455756953285754, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Griswald\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9455756953285754, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.93196961916072, 0.4931969619160721}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.93196961916072, 0.4931969619160721},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.93196961916072, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"chair\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.93196961916072, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9455756953285754, 0.986393923832144}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9455756953285754, 0.986393923832144},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.9591817714964317, 1.479590885748216}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Prepositional Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.9591817714964317, 1.479590885748216},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9727878476642877, 1.972787847664288}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9727878476642877, 1.972787847664288},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9455756953285754, 1.972787847664288}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9455756953285754, 1.972787847664288},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9455756953285754, 1.479590885748216}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9455756953285754, 1.479590885748216},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9727878476642877, 2.46598480958036}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9727878476642877, 2.46598480958036},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->380], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"it glows Blue.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"PRP1", "it1", "NP1", "VBZ1", "glows1", "NNP1", 
                  "Blue1", "NP2", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 6}, {9, 4}, {9, 
                  8}, {10, 11}, {12, 3}, {12, 9}, {12, 10}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 240, 
                  VertexLabels -> {"PRP1" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glows1" -> Placed[
                    Framed[
                    Style["glows", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Blue1" -> Placed[
                    Framed[
                    Style["Blue", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "it1" -> Placed[
                    Framed[
                    Style["it", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNP1" -> Placed[
                    Framed[
                    Style["Proper Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgBmImKIaBINutC67xf7aH8QPA/Mf2uOR/3+b/eHD6Hwz+
HygNUc/sANOHTsPMRxeH6f+NZg6qemYHVHdhyqOai+Cjm4+LD9MH4fM4oMrz
oJmHLo/QDwAzg6Va
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.191366794362541}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.191366794362541},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.5956833971812703}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"it\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.5956833971812703},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.7870501915438115}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.7870501915438115},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.191366794362541, 1.191366794362541}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.191366794362541, 1.191366794362541},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.191366794362541, 0.5956833971812703}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glows\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.191366794362541, 0.5956833971812703},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.382733588725082, 0.5956833971812703}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Proper Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.382733588725082, 0.5956833971812703},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.382733588725082, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Blue\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.382733588725082, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.382733588725082, 1.191366794362541}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.382733588725082, 1.191366794362541},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.7870501915438117, 1.7870501915438115}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.7870501915438117, 1.7870501915438115},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.5741003830876235, 1.7870501915438115}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.5741003830876235, 1.7870501915438115},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.5741003830876235, 1.191366794362541}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.5741003830876235, 1.191366794362541},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.7870501915438117, 2.382733588725082}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.7870501915438117, 2.382733588725082},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->240], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{
           False->"\<\"that's becuse your seeing whith Heat.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"DT1", "that1", "NP1", "VBZ1", "'s1", "RB1", "becuse1",
                   "ADVP1", "PRP$1", "your1", "JJ1", "seeing1", "NN1", 
                  "whith1", "NN2", "Heat1", "NP2", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 6}, {9, 10}, {11, 
                  12}, {13, 14}, {15, 16}, {17, 9}, {17, 11}, {17, 13}, {17, 
                  15}, {18, 4}, {18, 8}, {18, 17}, {19, 20}, {21, 3}, {21, 
                  18}, {21, 19}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 420, 
                  VertexLabels -> {"S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP$1" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "'s1" -> Placed[
                    Framed[
                    Style["'s", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Heat1" -> Placed[
                    Framed[
                    Style["Heat", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "becuse1" -> Placed[
                    Framed[
                    Style[
                    "becuse", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "RB1" -> Placed[
                    Framed[
                    Style["Adverb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whith1" -> Placed[
                    Framed[
                    Style["whith", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "seeing1" -> Placed[
                    Framed[
                    Style[
                    "seeing", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "your1" -> Placed[
                    Framed[
                    Style["your", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADVP1" -> Placed[
                    Framed[
                    Style["Adverb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAWImKIaB1FVOH9LiX9rD+Clg/k17XPJn/hua9LJ/xuCr
XtU9Oq2Q0QGi/qc9TB86DTMfXRymH2YezBxU9T/R3IUpj2ruT5zmQ2hmB5h+
GB/VXwj5jf+9zgV38zigms/pgGo/pwOq+zhx6v8XErzGYTs/XB7Gh+lHl0fX
D3GfMJr7hdHcL4xTPzofPXxw8WHhCuELoskLopmHLo/QDwChtQ6A
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7928957645975286}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7928957645975286},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.39644788229876426}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.39644788229876426},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.189343646896293}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.189343646896293},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.7928957645975286, 0.7928957645975286}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.7928957645975286, 0.7928957645975286},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.7928957645975286, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"'s\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.7928957645975286, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.5857915291950573, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adverb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.5857915291950573, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.5857915291950573, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"becuse\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.5857915291950573, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.5857915291950573, 0.7928957645975286}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adverb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.5857915291950573, 0.7928957645975286},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.378687293792586, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.378687293792586, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.378687293792586, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"your\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.378687293792586, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1715830583901146, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1715830583901146, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1715830583901146, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"seeing\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1715830583901146, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.964478822987643, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.964478822987643, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.964478822987643, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"whith\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.964478822987643, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.757374587585172, 0.39644788229876426}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.757374587585172, 0.39644788229876426},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.757374587585172, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Heat\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.757374587585172, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.5680309406888786, 0.7928957645975286}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.5680309406888786, 0.7928957645975286},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1804633526432036, 1.189343646896293}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1804633526432036, 1.189343646896293},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.360926705286407, 1.189343646896293}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.360926705286407, 1.189343646896293},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.360926705286407, 0.7928957645975286}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.360926705286407, 0.7928957645975286},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1804633526432036, 1.5857915291950573}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1804633526432036, 1.5857915291950573},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->420], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{False->"\<\"thing that are alive glow red.\"\>", 
           True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NN1", "thing1", "NP2", "WDT1", "that1", "WHNP1", 
                  "VBP1", "are1", "JJ1", "alive1", "ADJP1", "VP1", "S2", 
                  "SBAR1", "NP1", "VBZ1", "glow1", "JJ2", "red1", "ADJP2", 
                  "VP2", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 10}, {11, 
                  9}, {12, 7}, {12, 11}, {13, 12}, {14, 6}, {14, 13}, {15, 
                  3}, {15, 14}, {16, 17}, {18, 19}, {20, 18}, {21, 16}, {21, 
                  20}, {22, 23}, {24, 15}, {24, 21}, {24, 22}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 480, 
                  VertexLabels -> {"are1" -> Placed[
                    Framed[
                    Style["are", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "alive1" -> Placed[
                    Framed[
                    Style["alive", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADJP1" -> Placed[
                    Framed[
                    Style["Adjective Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WHNP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADJP2" -> Placed[
                    Framed[
                    Style["Adjective Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "thing1" -> Placed[
                    Framed[
                    Style["thing", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WDT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "red1" -> Placed[
                    Framed[
                    Style["red", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ2" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glow1" -> Placed[
                    Framed[
                    Style["glow", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQB2ImKIaBxFd6AirXGRxg/EnxbhLbnH7a45L/tcRK5C0P
KwZfSypIpr7irT1EP6cDRN8He5h5MH4SlMYlD7MPnQ8x/689zD6YeBKaugQw
/cAeXf4nVB/MPpg7YephfNRwwJRPQnE3J07zcfFh7kLno/sPOx8Rvuj87qOn
Kh9e44KK88JpVP28aPYh5CHiAg4w89YeN5nE8UkIrh7Gh/kHlzzMPHQ+uvno
fHT3uzY5TLuoLg6Xh/Fh5qHLo+sHAGFtCbY=
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 2.105049253875493}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.105049253875493},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.5787869404066197}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"thing\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.5787869404066197},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.6313115673443663}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.6313115673443663},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.0525246269377464, 1.5787869404066197}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.0525246269377464, 1.5787869404066197},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.0525246269377464, 1.0525246269377466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.0525246269377464, 1.0525246269377466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.0525246269377464, 2.105049253875493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.0525246269377464, 2.105049253875493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.105049253875493, 1.0525246269377466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.105049253875493, 1.0525246269377466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.105049253875493, 0.5262623134688731}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"are\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.105049253875493, 0.5262623134688731},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1575738808132394, 0.5262623134688731}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1575738808132394, 0.5262623134688731},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1575738808132394, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"alive\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1575738808132394, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1575738808132394, 1.0525246269377466}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1575738808132394, 1.0525246269377466},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.631311567344366, 1.5787869404066197}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.631311567344366, 1.5787869404066197},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.631311567344366, 2.105049253875493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.631311567344366, 2.105049253875493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.8419180971410563, 2.6313115673443663}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.8419180971410563, 2.6313115673443663},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9209590485705281, 3.1575738808132394}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9209590485705281, 3.1575738808132394},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.6838361942821125, 2.6313115673443663}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.6838361942821125, 2.6313115673443663},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.6838361942821125, 2.105049253875493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glow\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.6838361942821125, 2.105049253875493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.736360821219859, 2.105049253875493}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.736360821219859, 2.105049253875493},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.736360821219859, 1.5787869404066197}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"red\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.736360821219859, 1.5787869404066197},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.736360821219859, 2.6313115673443663}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.736360821219859, 2.6313115673443663},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.210098507750986, 3.1575738808132394}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.210098507750986, 3.1575738808132394},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.788885448157605, 3.1575738808132394}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.788885448157605, 3.1575738808132394},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.788885448157605, 2.6313115673443663}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.788885448157605, 2.6313115673443663},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.354922248364067, 3.6838361942821125}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.354922248364067, 3.6838361942821125},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->480], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{
           False->"\<\"thing that are not alive like are desk glow Blue.\"\>",
            True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NN1", "thing1", "NP2", "WDT1", "that1", "WHNP1", 
                  "VBP1", "are1", "RB1", "not1", "JJ1", "alive1", "IN1", 
                  "like1", "PP1", "ADJP1", "VP1", "S2", "SBAR1", "NP1", 
                  "VBP2", "are2", "NN2", "desk1", "NP4", "NN3", "glow1", 
                  "VBN1", "Blue1", "ADJP2", "NP3", "VP2", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 10}, {11, 
                  12}, {13, 14}, {15, 13}, {16, 11}, {16, 15}, {17, 7}, {17, 
                  9}, {17, 16}, {18, 17}, {19, 6}, {19, 18}, {20, 3}, {20, 
                  19}, {21, 22}, {23, 24}, {25, 23}, {26, 27}, {28, 29}, {30, 
                  26}, {30, 28}, {31, 25}, {31, 30}, {32, 21}, {32, 31}, {33, 
                  34}, {35, 20}, {35, 32}, {35, 33}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 700, 
                  VertexLabels -> {"NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Blue1" -> Placed[
                    Framed[
                    Style["Blue", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glow1" -> Placed[
                    Framed[
                    Style["glow", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP2" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "are1" -> Placed[
                    Framed[
                    Style["are", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "are2" -> Placed[
                    Framed[
                    Style["are", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP4" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBN1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADJP1" -> Placed[
                    Framed[
                    Style["Adjective Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "alive1" -> Placed[
                    Framed[
                    Style["alive", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "thing1" -> Placed[
                    Framed[
                    Style["thing", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN3" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "desk1" -> Placed[
                    Framed[
                    Style["desk", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WHNP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PP1" -> Placed[
                    Framed[
                    Style["Prepositional Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "like1" -> Placed[
                    Framed[
                    Style["like", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WDT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "not1" -> Placed[
                    Framed[
                    Style["not", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "RB1" -> Placed[
                    Framed[
                    Style["Adverb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "ADJP2" -> Placed[
                    Framed[
                    Style["Adjective Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBQAmImKIaBtX3P7NRcmBxg/Ee1XKevWf61xyWfdc9dIvE1
Kwb/oOpu8xLe9/Zqeis/zp7E6QAx5609zDwYPwOs/qs9LnmYfeh8iPn/7WH2
wfShmvfX/gGauTB5j7YfLf/2scP1wcyBycP4MP3o8uj6ITSvA6p9MP5dDPnz
z0wvdRQIwM1bB/aXEFw9jA8LV1zyMPPQ+ejmo/PR3Y+LDwtvdD56+GPnI+If
nX/22Q89yTg+B1i4wNwH0w/jw+xDl5/Ckx1wZ5GwA8y8HrPpqw+Li8DdD+PD
/ItLHmY+Oj/SaME5/aticPsg/hdHCx9xtPBEyEPcJQk3j+VaZJxlmjRcHsaH
6UeXR9ePzkd3HzofPXzQ+ejhL9rEuCKrRgouD+PDzEOXR9cPAKCn4v4=
                    
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 2.2832760728941452}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.2832760728941452},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.8266208583153163}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"thing\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.8266208583153163},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.7399312874729747}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.7399312874729747},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9133104291576581, 1.8266208583153163}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9133104291576581, 1.8266208583153163},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9133104291576581, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9133104291576581, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9133104291576581, 2.2832760728941452}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9133104291576581, 2.2832760728941452},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.8266208583153163, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.8266208583153163, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.8266208583153163, 0.9133104291576579}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"are\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.8266208583153163, 0.9133104291576579},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7399312874729747, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adverb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7399312874729747, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7399312874729747, 0.9133104291576579}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"not\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7399312874729747, 0.9133104291576579},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.6532417166306326, 0.9133104291576579}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.6532417166306326, 0.9133104291576579},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.6532417166306326, 0.45665521457882896}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"alive\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.6532417166306326, 0.45665521457882896},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.566552145788291, 0.45665521457882896}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.566552145788291, 0.45665521457882896},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.566552145788291, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"like\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.566552145788291, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.566552145788291, 0.9133104291576579}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Prepositional Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.566552145788291, 0.9133104291576579},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.1098969312094615, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.1098969312094615, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.968258894762389, 1.8266208583153163}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.968258894762389, 1.8266208583153163},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.968258894762389, 2.2832760728941452}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.968258894762389, 2.2832760728941452},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9407846619600237, 2.7399312874729747}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9407846619600237, 2.7399312874729747},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9703923309800119, 3.1965865020518036}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9703923309800119, 3.1965865020518036},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.1098969312094615, 2.7399312874729747}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.1098969312094615, 2.7399312874729747},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.1098969312094615, 2.2832760728941452}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"are\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.1098969312094615, 2.2832760728941452},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.02320736036712, 1.8266208583153163}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.02320736036712, 1.8266208583153163},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.02320736036712, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"desk\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.02320736036712, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.02320736036712, 2.2832760728941452}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.02320736036712, 2.2832760728941452},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.936517789524778, 1.8266208583153163}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.936517789524778, 1.8266208583153163},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.936517789524778, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glow\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.936517789524778, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.849828218682436, 1.8266208583153163}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.849828218682436, 1.8266208583153163},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.849828218682436, 1.3699656437364869}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Blue\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.849828218682436, 1.3699656437364869},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.393173004103607, 2.2832760728941452}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.393173004103607, 2.2832760728941452},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.708190182235364, 2.7399312874729747}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.708190182235364, 2.7399312874729747},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.909043556722413, 3.1965865020518036}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.909043556722413, 3.1965865020518036},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.621500611393022, 3.1965865020518036}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.621500611393022, 3.1965865020518036},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.621500611393022, 2.7399312874729747}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.621500611393022, 2.7399312874729747},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7959464711865167, 3.6532417166306326}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7959464711865167, 3.6532417166306326},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->700], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{
           False->"\<\"can we go see the cave that your found those glasses \
yes.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"MD1", "can1", "PRP1", "we1", "NP1", "VB1", "go1", 
                  "VB2", "see1", "DT1", "the1", "NN1", "cave1", "NP2", "IN1", 
                  "that1", "PRP2", "your1", "NP3", "VBD1", "found1", "DT2", 
                  "those1", "NP4", "VBZ1", "glasses1", "UH1", "yes1", "NP5", 
                  "VP4", "S2", "SBAR2", "VP3", "S1", "SBAR1", "VP2", "VP1", 
                  ".1", ".2", "SQ1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 3}, {6, 7}, {8, 9}, {10, 11}, {12,
                   13}, {14, 10}, {14, 12}, {15, 16}, {17, 18}, {19, 17}, {20,
                   21}, {22, 23}, {24, 22}, {25, 26}, {27, 28}, {29, 27}, {30,
                   25}, {30, 29}, {31, 24}, {31, 30}, {32, 31}, {33, 20}, {33,
                   32}, {34, 19}, {34, 33}, {35, 15}, {35, 34}, {36, 8}, {36, 
                  14}, {36, 35}, {37, 6}, {37, 36}, {38, 39}, {40, 1}, {40, 
                  5}, {40, 37}, {40, 38}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "SQ1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 800, 
                  VertexLabels -> {"glasses1" -> Placed[
                    Framed[
                    Style[
                    "glasses", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VB2" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "go1" -> Placed[
                    Framed[
                    Style["go", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VB1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP4" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "cave1" -> Placed[
                    Framed[
                    Style["cave", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "the1" -> Placed[
                    Framed[
                    Style["the", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SQ1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "your1" -> Placed[
                    Framed[
                    Style["your", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "yes1" -> Placed[
                    Framed[
                    Style["yes", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT2" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "UH1" -> Placed[
                    Framed[
                    Style["Interjection", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "MD1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "see1" -> Placed[
                    Framed[
                    Style["see", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "those1" -> Placed[
                    Framed[
                    Style["those", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "can1" -> Placed[
                    Framed[
                    Style["can", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP1" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "found1" -> Placed[
                    Framed[
                    Style["found", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBD1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PRP2" -> Placed[
                    Framed[
                    Style["Pronoun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP5" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP4" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP3" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "we1" -> Placed[
                    Framed[
                    Style["we", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBQB2ImKIYBsYk1Ky0eCjrA+L9e7DldLy7ggC7v9cbZs9ia
1cHI0qb94yphhz2Nv273zn5jD1MP4+8D0zw45WHmofOxm/8HTf8fNPMR8o02
h1menuNwgJnn+/B3yqoSVgeYehi/zbBaQYaDE0NeaM6RXsYVgg6o9vHA1cP4
flB96PIwfTDzYO6AycP4MP3o8uj60fno7oO4XxTNP6Jw89Hl69y5X66dKgE3
rxUsLukgDnYHI5y/DxquuORh5qPz16+Vyt24TRotvGTg+mF8mPno8jc0d+10
S5WDm3cq9JZXVoOswwFoOkHl37HHJR8A1v8Vgw8JNwW4/YyXdZjfdSrA9aPy
72DI8y/nKTqVpwg3T7b6zYNlwUpw9TA+LN/gkoeZh85HNx+dj+5+XHxYeKLz
0cMXnY8ef+h89PSDzkdPn+h89PyJzkfP/xC+KJq8KNw87PII/QDyVENi
                    
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 4.469942711093855}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 4.469942711093855},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 4.02294843998447}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"can\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 4.02294843998447},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.893988542218771, 4.02294843998447}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], 
                    {0.893988542218771, 4.02294843998447},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.893988542218771, 3.575954168875085}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"we\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.893988542218771, 3.575954168875085},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.893988542218771, 4.469942711093855}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.893988542218771, 4.469942711093855},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.787977084437542, 4.02294843998447}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.787977084437542, 4.02294843998447},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.787977084437542, 3.575954168875085}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"go\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.787977084437542, 3.575954168875085},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.681965626656313, 3.575954168875085}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.681965626656313, 3.575954168875085},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.681965626656313, 3.128959897765699}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"see\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.681965626656313, 3.128959897765699},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.575954168875084, 3.128959897765699}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.575954168875084, 3.128959897765699},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.575954168875084, 2.6819656266563134}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"the\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.575954168875084, 2.6819656266563134},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.469942711093855, 3.128959897765699}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.469942711093855, 3.128959897765699},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.469942711093855, 2.6819656266563134}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"cave\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.469942711093855, 2.6819656266563134},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.02294843998447, 3.575954168875085}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.02294843998447, 3.575954168875085},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.363931253312626, 3.128959897765699}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.363931253312626, 3.128959897765699},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.363931253312626, 2.6819656266563134}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.363931253312626, 2.6819656266563134},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.257919795531397, 2.234971355546928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Pronoun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.257919795531397, 2.234971355546928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.257919795531397, 1.7879770844375424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"your\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.257919795531397, 1.7879770844375424},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.257919795531397, 2.6819656266563134}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.257919795531397, 2.6819656266563134},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.151908337750168, 2.234971355546928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.151908337750168, 2.234971355546928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.151908337750168, 1.7879770844375424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"found\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.151908337750168, 1.7879770844375424},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.375405473304861, 0.8939885422187714}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.375405473304861, 0.8939885422187714},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.375405473304861, 0.4469942711093857}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"those\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.375405473304861, 0.4469942711093857},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.375405473304861, 1.3409828133281572}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.375405473304861, 1.3409828133281572},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{8.269394015523632, 0.8939885422187714}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {8.269394015523632, 0.8939885422187714},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{8.269394015523632, 0.4469942711093857}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"glasses\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {8.269394015523632, 0.4469942711093857},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{9.163382557742404, 0.4469942711093857}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Interjection\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {9.163382557742404, 0.4469942711093857},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{9.163382557742404, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"yes\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {9.163382557742404, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{9.163382557742404, 0.8939885422187714}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {9.163382557742404, 0.8939885422187714},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{8.716388286633018, 1.3409828133281572}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {8.716388286633018, 1.3409828133281572},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{8.04589687996894, 1.7879770844375424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {8.04589687996894, 1.7879770844375424},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{8.04589687996894, 2.234971355546928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {8.04589687996894, 2.234971355546928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{7.598902608859554, 2.6819656266563134}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {7.598902608859554, 2.6819656266563134},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.928411202195476, 3.128959897765699}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.928411202195476, 3.128959897765699},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{6.146171227754051, 3.575954168875085}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {6.146171227754051, 3.575954168875085},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.414068427205182, 4.02294843998447}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.414068427205182, 4.02294843998447},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.101022755821362, 4.469942711093855}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.101022755821362, 4.469942711093855},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.308056969423953, 4.469942711093855}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.308056969423953, 4.469942711093855},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{5.308056969423953, 4.02294843998447}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {5.308056969423953, 4.02294843998447},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.6540284847119766, 4.916936982203241}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.6540284847119766, 4.916936982203241},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->800], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"Hers the cave.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"VB1", "Hers1", "DT1", "the1", "NN1", "cave1", "NP1", 
                  "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 6}, {7, 3}, {7, 5}, {8, 1}, {8, 
                  7}, {9, 10}, {11, 8}, {11, 9}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 220, 
                  VertexLabels -> {"cave1" -> Placed[
                    Framed[
                    Style["cave", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VB1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Hers1" -> Placed[
                    Framed[
                    Style["Hers", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "the1" -> Placed[
                    Framed[
                    Style["the", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKIaBoDUJly3dvtqj8p/ao8tXMwnuDXv5Hkr/t4eJ
w9RjNwchj10fqwOqflYHVP0IeXT92PkI96HzmXv2/ebzZHSAmZt23cLjxHQu
B5g8jA8zD10eXT8AZ3yABg==
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.3296449906290673}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.3296449906290673},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.6648224953145336}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Hers\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.6648224953145336},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3296449906290673, 0.6648224953145336}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3296449906290673, 0.6648224953145336},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3296449906290673, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"the\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3296449906290673, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.6592899812581345, 0.6648224953145336}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.6592899812581345, 0.6648224953145336},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.6592899812581345, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"cave\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.6592899812581345, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.994467485943601, 1.3296449906290673}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.994467485943601, 1.3296449906290673},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.9972337429718005, 1.994467485943601}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.9972337429718005, 1.994467485943601},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.324112476572668, 1.994467485943601}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.324112476572668, 1.994467485943601},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.324112476572668, 1.3296449906290673}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.324112476572668, 1.3296449906290673},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1606731097722345, 2.6592899812581345}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1606731097722345, 2.6592899812581345},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->220], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"Wow. hnnm.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"UH1", "Wow1", ".1", ".2", "INTJ1", "VB1", "hnnm1", 
                  "VP1", ".3", ".4", "S1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 1}, {5, 3}, {6, 7}, {8, 6}, {9, 
                  10}, {11, 5}, {11, 8}, {11, 9}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 220, 
                  VertexLabels -> {"UH1" -> Placed[
                    Framed[
                    Style["Interjection", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "hnnm1" -> Placed[
                    Framed[
                    Style["hnnm", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".3" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VB1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Wow1" -> Placed[
                    Framed[
                    Style["Wow", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "INTJ1" -> Placed[
                    Framed[
                    Style["Interjection", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".4" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKIYBIRHrQN3wJ/YMOABMHpX+gkYjxFH1ocuj60fw
J2wUXu5+htFBet6Nn4eb/kHFWRxQ1bE4oJqPKY9qPoKPbj6E5oPLo/KfYMij
6wcAZJxeGQ==
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.6356417261637282}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Interjection\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.6356417261637282},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Wow\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.2712834523274563, 0.6356417261637282}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.2712834523274563, 0.6356417261637282},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.2712834523274563, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.2712834523274563, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.6356417261637282, 1.2712834523274563}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Interjection\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.6356417261637282, 1.2712834523274563},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.5425669046549126, 0.6356417261637282}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.5425669046549126, 0.6356417261637282},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.5425669046549126, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"hnnm\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.5425669046549126, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.5425669046549126, 1.2712834523274563}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.5425669046549126, 1.2712834523274563},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.813850356982369, 1.2712834523274563}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.813850356982369, 1.2712834523274563},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.813850356982369, 0.6356417261637282}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.813850356982369, 0.6356417261637282},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.2247460415730487, 1.9069251784911845}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.2247460415730487, 1.9069251784911845},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->220], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{False->"\<\"lecks look form some glasses.\"\>", 
           True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "lecks1", "NP1", "VBP1", "look1", "VB1", 
                  "form1", "DT1", "some1", "NNS2", "glasses1", "NP2", "VP2", 
                  "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12,
                   8}, {12, 10}, {13, 6}, {13, 12}, {14, 4}, {14, 13}, {15, 
                  16}, {17, 3}, {17, 14}, {17, 15}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 340, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "lecks1" -> Placed[
                    Framed[
                    Style["lecks", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "some1" -> Placed[
                    Framed[
                    Style["some", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VB1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "form1" -> Placed[
                    Framed[
                    Style["form", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "look1" -> Placed[
                    Framed[
                    Style["look", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "glasses1" -> Placed[
                    Framed[
                    Style[
                    "glasses", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNS2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAGImKIYB27bO9FU1P+1hfE2Wje+P/f1gj1+ewQGdf+Z5
NuPV2//tjV3nrrawZXWAmQPTD+Oj0zB5mH6Yeaj0B7i4Bph+YI8uvyN1cufH
GHYHmHkQmhOuHsZH9RdC3v14qbLMHl40+wTQ7BNA87cATv3ofHT3ofPR/Y+L
DwtfCJ/fAVWeH808dHmEfgCswuop
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.5929359478399328}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.5929359478399328},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.0619572985599552}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"lecks\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.0619572985599552},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.1239145971199105}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.1239145971199105},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.0619572985599552, 1.5929359478399328}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.0619572985599552, 1.5929359478399328},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.0619572985599552, 1.0619572985599552}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"look\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.0619572985599552, 1.0619572985599552},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1239145971199105, 1.0619572985599552}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1239145971199105, 1.0619572985599552},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.1239145971199105, 0.5309786492799775}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"form\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.1239145971199105, 0.5309786492799775},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1858718956798655, 0.5309786492799775}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1858718956798655, 0.5309786492799775},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.1858718956798655, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"some\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.1858718956798655, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.247829194239821, 0.5309786492799775}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.247829194239821, 0.5309786492799775},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.247829194239821, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"glasses\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.247829194239821, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.716850544959843, 1.0619572985599552}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.716850544959843, 1.0619572985599552},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.9203825710398768, 1.5929359478399328}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.9203825710398768, 1.5929359478399328},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9911699347999159, 2.1239145971199105}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9911699347999159, 2.1239145971199105},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9823398695998318, 2.1239145971199105}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9823398695998318, 2.1239145971199105},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.9823398695998318, 1.5929359478399328}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.9823398695998318, 1.5929359478399328},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9911699347999159, 2.654893246399888}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9911699347999159, 2.654893246399888},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->340,
             ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"haw whats this gold.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NN1", "haw1", "NP1", "VBZ1", "whats1", "DT1", "this1",
                   "NN2", "gold1", "NP2", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 9}, {10, 6}, {10, 
                  8}, {11, 4}, {11, 10}, {12, 13}, {14, 3}, {14, 11}, {14, 
                  12}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 280, 
                  VertexLabels -> {"S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "gold1" -> Placed[
                    Framed[
                    Style["gold", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "haw1" -> Placed[
                    Framed[
                    Style["haw", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "this1" -> Placed[
                    Framed[
                    Style["this", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whats1" -> Placed[
                    Framed[
                    Style["whats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWImKIaBct57XpdSPtrD+GVg/kN7XPJGIr4F1uK/MPgT
prMwFxT8s4eoZ3SA6UOnYeaji8P0w8yDmYOqntEB1V0I+asTpt5l28cKt9cY
bA4XXB7Gh+lHl0fXj85Hdx8uPsxdED6fA6o8H5p56PII/QBQ5JaU
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.087114613009218}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.087114613009218},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.5435573065046089}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"haw\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.5435573065046089},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.6306719195138268}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.6306719195138268},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.087114613009218, 1.087114613009218}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.087114613009218, 1.087114613009218},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.087114613009218, 0.5435573065046089}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"whats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.087114613009218, 0.5435573065046089},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.174229226018436, 0.5435573065046089}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.174229226018436, 0.5435573065046089},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.174229226018436, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"this\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.174229226018436, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.261343839027654, 0.5435573065046089}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.261343839027654, 0.5435573065046089},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.261343839027654, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"gold\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.261343839027654, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.717786532523045, 1.087114613009218}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.717786532523045, 1.087114613009218},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9024505727661314, 1.6306719195138268}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9024505727661314, 1.6306719195138268},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.8049011455322628, 1.6306719195138268}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.8049011455322628, 1.6306719195138268},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.8049011455322628, 1.087114613009218}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.8049011455322628, 1.087114613009218},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.9024505727661314, 2.174229226018436}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.9024505727661314, 2.174229226018436},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->280], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"thats gold.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{"JJ1", "thats1", "NN1", "gold1", ".1", ".2", "NP1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 6}, {7, 1}, {7, 3}, {7, 5}}}, {
                 EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 140, 
                  VertexLabels -> {"thats1" -> Placed[
                    Framed[
                    Style["thats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "gold1" -> Placed[
                    Framed[
                    Style["gold", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.6546536707079771}, {0., 0.}}, {{0., 
                    0.6546536707079771}, {1.3093073414159542`, 
                    1.3093073414159542`}}, {{1.3093073414159542`, 
                    0.6546536707079771}, {1.3093073414159542`, 0.}}, {{
                    1.3093073414159542`, 0.6546536707079771}, {
                    1.3093073414159542`, 1.3093073414159542`}}, {{
                    2.6186146828319083`, 0.6546536707079771}, {
                    2.6186146828319083`, 0.}}, {{2.6186146828319083`, 
                    0.6546536707079771}, {1.3093073414159542`, 
                    1.3093073414159542`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.6546536707079771}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.6546536707079771},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"thats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3093073414159542, 0.6546536707079771}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3093073414159542, 0.6546536707079771},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3093073414159542, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"gold\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3093073414159542, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.6186146828319083, 0.6546536707079771}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.6186146828319083, 0.6546536707079771},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.6186146828319083, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.6186146828319083, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3093073414159542, 1.3093073414159542}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3093073414159542, 1.3093073414159542},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->140,
             ImageCache->GraphicsData["CompressedBitmap", "\<\
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
wZ8q/A1IR8Am\
\>"]], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"whats this.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "whats1", "NP2", "DT1", "this1", "NP3", ".1", 
                  ".2", "NP1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 3}, {9, 
                  6}, {9, 7}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 180, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "this1" -> Placed[
                    Framed[
                    Style["this", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whats1" -> Placed[
                    Framed[
                    Style["whats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.7071067811865475}, {0., 0.}}, {{0., 
                    0.7071067811865475}, {0., 1.414213562373095}}, {{0., 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}, {{1.414213562373095, 
                    0.7071067811865475}, {1.414213562373095, 0.}}, {{
                    1.414213562373095, 0.7071067811865475}, {
                    1.414213562373095, 1.414213562373095}}, {{
                    1.414213562373095, 1.414213562373095}, {1.414213562373095,
                     2.1213203435596424`}}, {{2.82842712474619, 
                    1.414213562373095}, {2.82842712474619, 
                    0.7071067811865475}}, {{2.82842712474619, 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7071067811865475}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7071067811865475},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"whats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.414213562373095}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.414213562373095},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"this\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 2.1213203435596424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 2.1213203435596424},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->180], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"that platnom.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{
                 "DT1", "that1", "NP1", "VBP1", "platnom1", "VP1", ".1", ".2",
                   "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 3}, {9, 
                  6}, {9, 7}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 180, 
                  VertexLabels -> {"S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBP1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "platnom1" -> Placed[
                    Framed[
                    Style[
                    "platnom", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.7071067811865475}, {0., 0.}}, {{0., 
                    0.7071067811865475}, {0., 1.414213562373095}}, {{0., 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}, {{1.414213562373095, 
                    0.7071067811865475}, {1.414213562373095, 0.}}, {{
                    1.414213562373095, 0.7071067811865475}, {
                    1.414213562373095, 1.414213562373095}}, {{
                    1.414213562373095, 1.414213562373095}, {1.414213562373095,
                     2.1213203435596424`}}, {{2.82842712474619, 
                    1.414213562373095}, {2.82842712474619, 
                    0.7071067811865475}}, {{2.82842712474619, 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7071067811865475}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7071067811865475},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.414213562373095}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.414213562373095},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"platnom\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 2.1213203435596424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 2.1213203435596424},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->180], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"whats this that rubes.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"VBZ1", "whats1", "DT1", "this1", "NP2", "WDT1", 
                  "that1", "WHNP1", "VBZ2", "rubes1", "VP2", "S2", "SBAR1", 
                  "NP1", "VP1", ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 3}, {6, 7}, {8, 6}, {9, 10}, {11, 
                  9}, {12, 11}, {13, 8}, {13, 12}, {14, 5}, {14, 13}, {15, 
                  1}, {15, 14}, {16, 17}, {18, 15}, {18, 16}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 360, 
                  VertexLabels -> {"rubes1" -> Placed[
                    Framed[
                    Style["rubes", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP2" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WHNP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "that1" -> Placed[
                    Framed[
                    Style["that", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "SBAR1" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ2" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "this1" -> Placed[
                    Framed[
                    Style["this", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "WDT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S2" -> Placed[
                    Framed[
                    Style["Clause", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whats1" -> Placed[
                    Framed[
                    Style["whats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQBGImKIYB4Q3MYXW23A4wvtNnporTp1gd0OVvTWHiLBL8
bF9kxjRLIkLAAaLuK5TPAOej09jlWTH4EPOZHWD24VLnAKaf4jQH1T4EH91c
mD9g5sH4MH/jkkf1FyYfZh86H91+dD66/7HzEeGPzi9ZcyjlxH5mqLiwQzUf
y9Hr33jh7oDxYeahy6PrBwAlEMDq
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 3.4050261230349945}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 3.4050261230349945},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 2.7240208984279954}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"whats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 2.7240208984279954},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3620104492139977, 2.043015673820997}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3620104492139977, 2.043015673820997},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3620104492139977, 1.3620104492139977}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"this\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3620104492139977, 1.3620104492139977},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.3620104492139977, 2.7240208984279954}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.3620104492139977, 2.7240208984279954},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7240208984279954, 1.3620104492139977}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7240208984279954, 1.3620104492139977},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7240208984279954, 0.6810052246069986}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"that\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7240208984279954, 0.6810052246069986},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.7240208984279954, 2.043015673820997}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.7240208984279954, 2.043015673820997},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.086031347641994, 0.6810052246069986}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.086031347641994, 0.6810052246069986},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.086031347641994, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"rubes\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.086031347641994, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.086031347641994, 1.3620104492139977}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.086031347641994, 1.3620104492139977},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.086031347641994, 2.043015673820997}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.086031347641994, 2.043015673820997},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.4050261230349945, 2.7240208984279954}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Clause\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.4050261230349945, 2.7240208984279954},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.383518286124496, 3.4050261230349945}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.383518286124496, 3.4050261230349945},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.191759143062248, 4.086031347641994}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.191759143062248, 4.086031347641994},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.745528735338494, 4.086031347641994}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.745528735338494, 4.086031347641994},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.745528735338494, 3.4050261230349945}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.745528735338494, 3.4050261230349945},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.468643939200371, 4.767036572248992}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.468643939200371, 4.767036572248992},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->360], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"whats this.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "whats1", "NP2", "DT1", "this1", "NP3", ".1", 
                  ".2", "NP1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 3}, {9, 
                  6}, {9, 7}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 180, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "this1" -> Placed[
                    Framed[
                    Style["this", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whats1" -> Placed[
                    Framed[
                    Style["whats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.7071067811865475}, {0., 0.}}, {{0., 
                    0.7071067811865475}, {0., 1.414213562373095}}, {{0., 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}, {{1.414213562373095, 
                    0.7071067811865475}, {1.414213562373095, 0.}}, {{
                    1.414213562373095, 0.7071067811865475}, {
                    1.414213562373095, 1.414213562373095}}, {{
                    1.414213562373095, 1.414213562373095}, {1.414213562373095,
                     2.1213203435596424`}}, {{2.82842712474619, 
                    1.414213562373095}, {2.82842712474619, 
                    0.7071067811865475}}, {{2.82842712474619, 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7071067811865475}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7071067811865475},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"whats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.414213562373095}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.414213562373095},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"this\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 2.1213203435596424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 2.1213203435596424},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->180], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"thats emrols.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "thats1", "NP1", "VBZ1", "emrols1", "VP1", 
                  ".1", ".2", "S1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 3}, {9, 
                  6}, {9, 7}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "S1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 180, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "S1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Sentence"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "thats1" -> Placed[
                    Framed[
                    Style["thats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VP1" -> Placed[
                    Framed[
                    Style["Verb Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "emrols1" -> Placed[
                    Framed[
                    Style[
                    "emrols", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "VBZ1" -> Placed[
                    Framed[
                    Style["Verb", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.7071067811865475}, {0., 0.}}, {{0., 
                    0.7071067811865475}, {0., 1.414213562373095}}, {{0., 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}, {{1.414213562373095, 
                    0.7071067811865475}, {1.414213562373095, 0.}}, {{
                    1.414213562373095, 0.7071067811865475}, {
                    1.414213562373095, 1.414213562373095}}, {{
                    1.414213562373095, 1.414213562373095}, {1.414213562373095,
                     2.1213203435596424`}}, {{2.82842712474619, 
                    1.414213562373095}, {2.82842712474619, 
                    0.7071067811865475}}, {{2.82842712474619, 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7071067811865475}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7071067811865475},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"thats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.414213562373095}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.414213562373095},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"emrols\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Verb Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 2.1213203435596424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"sentence\"\>",
                    Entity["GrammaticalUnit", "Sentence"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 2.1213203435596424},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->180], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"whats this.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{
                 "NNS1", "whats1", "NP2", "DT1", "this1", "NP3", ".1", ".2", 
                  "NP1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 4}, {7, 8}, {9, 3}, {9, 
                  6}, {9, 7}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 180, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "this1" -> Placed[
                    Framed[
                    Style["this", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "whats1" -> Placed[
                    Framed[
                    Style["whats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.7071067811865475}, {0., 0.}}, {{0., 
                    0.7071067811865475}, {0., 1.414213562373095}}, {{0., 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}, {{1.414213562373095, 
                    0.7071067811865475}, {1.414213562373095, 0.}}, {{
                    1.414213562373095, 0.7071067811865475}, {
                    1.414213562373095, 1.414213562373095}}, {{
                    1.414213562373095, 1.414213562373095}, {1.414213562373095,
                     2.1213203435596424`}}, {{2.82842712474619, 
                    1.414213562373095}, {2.82842712474619, 
                    0.7071067811865475}}, {{2.82842712474619, 
                    1.414213562373095}, {1.414213562373095, 
                    2.1213203435596424`}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.7071067811865475}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7071067811865475},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"whats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.414213562373095}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.414213562373095},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"this\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 1.414213562373095}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 1.414213562373095},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.7071067811865475}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.82842712474619, 0.7071067811865475},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.414213562373095, 2.1213203435596424}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.414213562373095, 2.1213203435596424},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->180], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"thats red Dimons.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "thats1", "NP2", "JJ1", "red1", "NNS2", 
                  "Dimons1", "NP3", ".1", ".2", "NP1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 4}, {8, 6}, {9, 
                  10}, {11, 3}, {11, 8}, {11, 9}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 220, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "thats1" -> Placed[
                    Framed[
                    Style["thats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Dimons1" -> Placed[
                    Framed[
                    Style[
                    "Dimons", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNS2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "red1" -> Placed[
                    Framed[
                    Style["red", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKIYBGeMJrssrH9kz4ADo8hD+Jwz+ap+IF1XbfsNp
Wag4TL8smj50eZg+mHkQeSYHVP1MDqj6EfLo+nHxUWluB1R5bjTz0OUR+gEc
inhn
                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.5773502691896257}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.5773502691896257},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"thats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.1547005383792515}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.1547005383792515},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.1547005383792517, 0.5773502691896257}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.1547005383792517, 0.5773502691896257},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.1547005383792517, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"red\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.1547005383792517, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.3094010767585034, 0.5773502691896257}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.3094010767585034, 0.5773502691896257},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.3094010767585034, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Dimons\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.3094010767585034, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.7320508075688774, 1.1547005383792515}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.7320508075688774, 1.1547005383792515},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.464101615137755, 1.1547005383792515}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.464101615137755, 1.1547005383792515},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.464101615137755, 0.5773502691896257}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.464101615137755, 0.5773502691896257},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.7320508075688774, 1.7320508075688774}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.7320508075688774, 1.7320508075688774},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->220], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          
          PaneSelectorBox[{
           False->"\<\"thats 12.6 millon Dollers woth of rocks.\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"NNS1", "thats1", "NP2", "CD1", "12.61", "JJ1", 
                  "millon1", "NNP1", "Dollers1", "NN1", "woth1", "NP4", "IN1",
                   "of1", "NNS2", "rocks1", "NP5", "PP1", "NP3", ".1", ".2", 
                  "NP1"}, {
                 Null, {{1, 2}, {3, 1}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12,
                   4}, {12, 6}, {12, 8}, {12, 10}, {13, 14}, {15, 16}, {17, 
                  15}, {18, 13}, {18, 17}, {19, 12}, {19, 18}, {20, 21}, {22, 
                  3}, {22, 19}, {22, 20}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "NP1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 440, 
                  VertexLabels -> {"NNS1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "woth1" -> Placed[
                    Framed[
                    Style["woth", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "PP1" -> Placed[
                    Framed[
                    Style["Prepositional Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "thats1" -> Placed[
                    Framed[
                    Style["thats", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "millon1" -> Placed[
                    Framed[
                    Style[
                    "millon", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "CD1" -> Placed[
                    Framed[
                    Style["Numeral", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "Dollers1" -> Placed[
                    Framed[
                    Style[
                    "Dollers", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP4" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "NounPhrase"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP3" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "IN1" -> Placed[
                    Framed[
                    Style["Preposition", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP2" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".1" -> Placed[
                    Framed[
                    Style["Punctuation", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "JJ1" -> Placed[
                    Framed[
                    Style["Adjective", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "12.61" -> Placed[
                    Framed[
                    Style["12.6", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "rocks1" -> Placed[
                    Framed[
                    Style["rocks", FontFamily -> "Arial", FontSize -> Medium],
                     Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP5" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNP1" -> Placed[
                    Framed[
                    Style["Proper Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "of1" -> Placed[
                    Framed[
                    Style["of", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NNS2" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], ".2" -> Placed[
                    Framed[
                    Style[".", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQBWImKIaBG9Xaj+dLfLKH8RWWPtG7qvDCHpe8PFj+BwZf
85ik2dpZzA7p5+ZWcWn+s5eHmgMzD5V/A0Mepg9mH8xcVP0/0PT/wKn/Ophm
coDJo/JvYMhjt5/DAdV+DgdU+zlw6sdlHszdEHk+NP18cPPR5VsNbSdMmibg
gOo/ITT/CDnA4gWXPGp4COE0H52P7n50Pnr8Q/jCaPLCcPOwyyP0AwA/zSEQ

                    "]]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 1.1310118554899784}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.1310118554899784},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 0.7540079036599856}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"thats\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.7540079036599856},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0., 1.508015807319971}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 1.508015807319971},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.7540079036599855, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Numeral\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.7540079036599855, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.7540079036599855, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"12.6\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.7540079036599855, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.508015807319971, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Adjective\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.508015807319971, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.508015807319971, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"millon\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.508015807319971, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.2620237109799564, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Proper Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.2620237109799564, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.2620237109799564, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Dollers\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.2620237109799564, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.016031614639942, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.016031614639942, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.016031614639942, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"woth\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.016031614639942, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.8850197591499638, 1.1310118554899784}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.8850197591499638, 1.1310118554899784},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7700395182999276, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Preposition\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7700395182999276, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.7700395182999276, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"of\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.7700395182999276, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.524047421959913, 0.3770039518299928}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.524047421959913, 0.3770039518299928},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.524047421959913, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"rocks\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.524047421959913, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.524047421959913, 0.7540079036599856}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.524047421959913, 0.7540079036599856},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.14704347012992, 1.1310118554899784}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Prepositional Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.14704347012992, 1.1310118554899784},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{3.016031614639942, 1.508015807319971}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {3.016031614639942, 1.508015807319971},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.9010513737899055, 1.508015807319971}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Punctuation\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.9010513737899055, 1.508015807319971},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{4.9010513737899055, 1.1310118554899784}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\".\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {4.9010513737899055, 1.1310118554899784},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{2.4505256868949528, 1.8850197591499638}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"noun phrase\"\>",
                    Entity["GrammaticalUnit", "NounPhrase"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {2.4505256868949528, 1.8850197591499638},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->440], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]},
         {
          PaneSelectorBox[{False->"\<\"the end\"\>", True->
           RowBox[{"{", 
            GraphicsBox[
             NamespaceBox["NetworkGraphics",
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{"DT1", "the1", "NN1", "end1", "NP1", "FRAG1"}, {
                 Null, {{1, 2}, {3, 4}, {5, 1}, {5, 3}, {6, 5}}}, {EdgeStyle -> {
                    GrayLevel[0.65]}, 
                  GraphLayout -> {
                   "LayeredEmbedding", "RootVertex" -> "FRAG1", 
                    LayerSizeFunction -> (0.5& )}, ImageSize -> 120, 
                  VertexLabels -> {"FRAG1" -> Placed[
                    Framed[
                    Style[
                    Entity["GrammaticalUnit", "Fragment"], 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NN1" -> Placed[
                    Framed[
                    Style["Noun", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "NP1" -> Placed[
                    Framed[
                    Style["Noun Phrase", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "DT1" -> Placed[
                    Framed[
                    Style["Determiner", 
                    GrayLevel[0.55]], Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "the1" -> Placed[
                    Framed[
                    Style["the", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center], "end1" -> Placed[
                    Framed[
                    Style["end", FontFamily -> "Arial", FontSize -> Medium], 
                    Background -> Directive[
                    GrayLevel[1], 
                    Opacity[1]], RoundingRadius -> 2, 
                    FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> 
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
                    Directive[
                    GrayLevel[1], 
                    Opacity[0]]}}]]}, 
               TagBox[GraphicsGroupBox[{
                  {GrayLevel[0.65], Opacity[0.7], 
                   LineBox[{{{0., 0.8451542547285167}, {0., 0.}}, {{0., 
                    0.8451542547285167}, {0.8451542547285166, 
                    1.6903085094570334`}}, {{1.6903085094570331`, 
                    0.8451542547285167}, {1.6903085094570331`, 0.}}, {{
                    1.6903085094570331`, 0.8451542547285167}, {
                    0.8451542547285166, 1.6903085094570334`}}, {{
                    0.8451542547285166, 1.6903085094570334`}, {
                    0.8451542547285166, 2.53546276418555}}}]}, 
                  {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
                   0.7]}], {DiskBox[{0., 0.8451542547285167}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"Determiner\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.8451542547285167},
                    BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"the\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0., 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.6903085094570331, 0.8451542547285167}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.6903085094570331, 0.8451542547285167},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{1.6903085094570331, 0.}, 0.], InsetBox[
                    FrameBox[
                    StyleBox["\<\"end\"\>",
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->Medium],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {1.6903085094570331, 0.},
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.8451542547285166, 1.6903085094570334}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox["\<\"Noun Phrase\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.8451542547285166, 1.6903085094570334},
                    
                    BaseStyle->"Graphics"]}, {
                    DiskBox[{0.8451542547285166, 2.53546276418555}, 0.], 
                    InsetBox[
                    FrameBox[
                    StyleBox[
                    InterpretationBox["\<\"fragment\"\>",
                    Entity["GrammaticalUnit", "Fragment"],
                    BaseStyle->"Entity"],
                    StripOnInput->False,
                    LineColor->GrayLevel[0.55],
                    FrontFaceColor->GrayLevel[0.55],
                    BackFaceColor->GrayLevel[0.55],
                    GraphicsColor->GrayLevel[0.55],
                    FontColor->GrayLevel[0.55]],
                    Background->Directive[
                    GrayLevel[1], 
                    Opacity[1]],
                    FrameMargins->{{0, 0}, {-1, -2}},
                    FrameStyle->Directive[
                    GrayLevel[1], 
                    Opacity[0]],
                    RoundingRadius->2,
                    StripOnInput->False], {0.8451542547285166, 2.53546276418555},
                    
                    BaseStyle->"Graphics"]}}}],
                MouseAppearanceTag["NetworkGraphics"]],
               AllowKernelInitialization->False]],
             
             DefaultBaseStyle->{
              "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
               Hue[0.8, 1., 0.6]},
             FormatType->TraditionalForm,
             FrameTicks->None,
             ImageSize->120], "}"}]}, Dynamic[
            CurrentValue["MouseOver"]],
           FrameMargins->0,
           ImageSize->Automatic]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Column"], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676868768929048*^9, 3.676868859002421*^9, 3.67686894653197*^9, 
   3.6768691843744593`*^9, 3.676869485121027*^9, 3.6768699299314547`*^9, 
   3.676869987729309*^9, 3.6768700389361153`*^9, 3.676870150450672*^9, 
   3.676870182490081*^9, 3.676870231123507*^9, 3.676870263748155*^9, 
   3.676870294122938*^9, 3.676870518266398*^9, {3.6768705487528276`*^9, 
   3.676870550733941*^9}, 3.676870591644248*^9, {3.676870703697982*^9, 
   3.6768707324571323`*^9}, 3.6768707770395517`*^9, 3.676870826434576*^9, 
   3.676870856649891*^9, 3.676870896732342*^9, 3.676870954966856*^9, 
   3.6769049114646*^9, 3.6769051730391283`*^9, 3.676905974518269*^9, 
   3.6769084655601673`*^9, 3.676911878122859*^9, 3.6772516973005676`*^9, 
   3.6772536853992186`*^9, 3.6781274367882648`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordData", "[", 
  RowBox[{"\"\<really\>\"", ",", "\"\<Hyphenation\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6772536326951785`*^9, 3.6772536726180305`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"re\"\>", ",", "\<\"al\"\>", ",", "\<\"ly\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6772536855638337`*^9, 3.677253685639387*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison with Rubric", "Subsubsection",
 CellChangeTimes->{{3.676906163769267*^9, 3.676906170246676*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nFZULleE7pPX4xEeT3rSfTx8grgdGIDz0SN4BYWQpMh8ci5Lo8tjdXHNZ6gf
uV9+eU6J/OVrp3x7WHMqKAGt6sHfjZn20wZ279nHvv372br8G1pXKkexqh/i
HJpCWtBe6lQ3wajxB6zffZiTBjvuWjoJ04plKWvzC8FCtwcabLDA0Y8MrQqH
GS1FXRWhzsdruBoWj0ylRq1Ro5ClE3x+K5scvUhWPDYH+UeI/H6mrw8j5pz0
EdfIK1ik6yH2HDnGSfuTeXk7ZY+9ZxhybXZ+vbw3bz2Hjufl28HhKHOHt6V8
yaKMWXlBb28d2jRvprdsQI36renQphEly1bkgwWniM3Q5OUx3342HNe3B5Vo
JwoyEm+zZmwbKpUqxZBlZ0lMvpXf7uasf9DujmO37QKxCUIrq0X9qgL5orau
PpsxbfFqdh44wKEjRzl2yI61q3ZwJ1FGdiGGyRa6Ljs3V/jV57To0pHmrVsK
TWlCsaJv0fS9Xzly7CDHHR1wOnuawzsP4X0vnsToALZ+35vmwo+avT2B3Rdv
42e/kI5NzDCfaod/tPxZa0BCQkJCQkJCQuIVka/tjKrStqsFFuZtqVi0KBVN
hrDyZBAyw9yGnnxtZ0rb7hb062eLVc8OlC9fhmJiLF2lyXhWHbhCim4snqsb
B4dz9uBmvps0CBtrC3r37Il59y60a1GfchUrYdxmOtci0/F/oO16FKbtMrmy
dARVK5Sg4sDlen3wxKrMrHjsrNpjXLwEHQcPprtpBTHmrsMql1DSYlyxbFuV
4kL3DXpnICZlS1G2zse4hOjmqnIf0UMNmrWibctmVK9WTeg6kb86zenSYxFe
URlkqR/EE5onOEGv1fTkj+Ufari84wXi6zSSTtsZyjnux3lM7tOZ8kIXGHed
xIbdGxhVxYTSQtsFJsSy57M6mJYx4qv9HkL7ZqMMPszoT75m5vc/MvfHH/lx
xiKc7ySjeXxgn39Nkz+vn/zy2Bai7fLy7aDXdg/iFadFx2706t0LCwsLzDu1
pEzxYhiZf49HRDoZQXuoU0Nou+JladSqNS0aVqdaVTMqG5enXov2jFl1lgSZ
Jt8G80/5Ct0lZ6+hrJN2eZCsfnTdX474XbdGNTf3mZWdaKMBfC7yq9N23+13
J91QIYG7JtOnrwU9LXrTrZ2oY5G3Jt/s536aOv/ZglnDZrRu24aG1atR1awK
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
SEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhI
SEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhI
SEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhI
SEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEj8G9Fqtcjl
cpRKpRTewKBSqV55HqQgBSlIQQpSkMJfD9K9XApSeP2DTo/pdNnfJTAwkEuX
LuHh4SGFNzBcuXIFd3f3V54PKUhBCn89XL16lZs3b/6jaer6BVdX1388XSlI
QQr/fHBzc+PGjRsv7XrXrl3TX08aP0hBCv9ccHFx4c6dO39b2+3atYv169fj
5OQkhTcw/PDDD5w8efKV50MKUpDCXw8rV65k9+7dnDp16h9L08HBgQULFnDs
2LFXXj4pSEEKfxx++ukn9u3b99Kut27dOnbs2CGNH6QghX8wrFixQn/v/bvo
+oKLFy/q5/OlUDAoyMjIQPnK8/Fiw8yZM0lJSXnl+XjdglKhfOV5kIIUHoSd
O3fq59d0fdY/lWZaWpp+vBgTE/PKy/dfC3JZBnLRh/wb7i+6dUAKhRyZTPav
yZMUnj+sWrWKgICAl3a9o0eP6tf9JCcnv/Ky/1dDnm8qRH8hQyZX6P9+1XmS
wosN9vb2eo33dzlw4IB+Pc9rQU4marX6saB54u+snL97IS2RPuc5edIRl9Bk
/nZy/2J02k7Xnt5cstE80abUaDOznxI/l4yoIC5fuIj77RjUObl/49pZyDPS
SVdoyH2mZHLRKGUkJ8YTH5dASoaCzKxMNJrMZzxf4r/Knj178Pb2JjMz8x9L
U6PR8PPPP5OamvqPpfnvIxu1Uk5qYiKxsfEkJKeh0mjJFGXPzM7hRbiVMjGc
i+dPc8Y5kBTli/LdHLSaJ/u1x4MyPRY31yucP38WR0dHAuNk4v4pdSavI2vW
rOHu3bsv7Xq6Mej169f1euNNISdL+8R4QavrJx5xmVwytZo/ifPnqFMicL/u
irPzOc6Ksb6L733SlFnPm2O02sfHyGo0mVl/mJ9sjZL0tHSUmiyk7uDlotN1
p0+f/tvpvE7aLjsliIMHD+rD2UvOhn8f0f/fucDfwcnP2/4fv9B9FvQxo3Ll
Kpj97wQPeq4sTd5cXoZuLP63S/Pv4I3XdjnpeF84ypEjou0c0rWfwyIc4lpA
jH5sp9NSujpXqB+MwTK5uHgU9WpVp/3opdyRaf6y9s+S3WHP1o1s3HWFVE32
H7epXA0xQZc5sXcrK9Zt0Y/ld27Zi4PTKY6eCUCeqctFbiH5/QfIzUIp06Ur
F/eo/0rL/28habvnJ1ORzO1rLhzdu53VW3azc/c+4VObOHzcHvujR/GJTCPz
mQY2uWiVunmvB35nOEfnN3IZsgyZ3m/yjmbjs3MaLRvXoorZCJwCE9C+iIeH
OWm4Odhz5LDo086c4/ThIxwV98dDhw9z+NApzjsc4ojo7/busGP0iH7Uqlmd
KlWqsMQpENkLyZDEi0bSdi8eWewdzjud5LDOlx6MRb3DSVU9HHPmqONxdXbK
//3gQXvc78SheE6/ivc+yozJY2jXsB7Vzczo/t12fKNlz5fhXDl33M9x8vij
45tLHndIV2nRqhV5awjEv7Mf9HW5agIv2LNl7Xr2uPiTIM/8z4x3XwfeRG2n
8NuMqakpvQcM58eVS+jexFT/t2mT7ixe+RMjBlvRQPy91ivt711IHcwX7RtR
vXotmr97ELnhcLzPSezs7LDb5Uz6f+T298Zru8x4ji1+n0HmzcXYprK+PXWy
HMTqgx4oMtUEnNzJti12HPGI0ms90Tiw/6IvbRvXpkQZa1xiFTxthu+PyeG+
0w/UqWGGsckQHO+mkPUHYkwRd52574g+vlEHbL5dzaFju5gzaghdqlWjiuUa
ouRa3dNCAp/I7z9AVgKnd25ni912/ONVr+w5Xm5OtvQM8Sk8q7bLyc4mW4Sc
ZzDkf1nbZSsTOX9oNWOaNqBZW3Ns523gyKkTbJj5Hv27Nad61Sosdgx4Rp2T
SfDp/ezaZsfhG+EoNYYeIUtcY/8ettltwzsqHf3jFzRc+WUY7RrVom6jjhz1
jUL9Iu4lan8+b9uCNp0tGPTtHKb27UxdUaa8/m0CP375DtYda1DVfAFO9uto
VdWEokZGzHPwJeON0Ha5wgdyhC/kPNTirznPp+1y9eXW9QN/tfhvorZLDr7I
rGkf06VBPWroxp41TWkxdhlud5LzxwFpfnsY0PvtvLGpaX26WnzI2mOeJMqf
77lbtlZBQthVZvRtTeXiRnSbshm/qOfUdlkpXLSbyXjbdtStVVWfpzbd+jB3
rT0RSWncvXySgzvsOHglgCSZYW9G7X2WDLKkgbExJkMX4XIn8T+9du3fxpuo
7eQ+6zCt9zaOgbGkZiSy2tYII3E/MrJaSWxGmvADNz5qWouV1+Pz1psodfNs
urF3Lhp5Gskp6WgfOGBOFkpxTmJCAonJKciV2vxnE1lqOTePb2T27PnsuhCG
bmVOllaN59phGIv2bmzSC9dkZd5auFdljH+IN17b5WahSEvg0m+jKFuqmL49
zTnhR2KGCo0qmW0D61C9sjG9fnYhSbQltTaTpODr7PzpM0obv8PVeCW6qaxM
0WZSkhJFW0pFJs8gNU20uz+6aWoTWPZudUoW07XhUny43k2MqZ6mErNxX/8+
1SoWo0izb3ENTRTtVUFajC9rerSkVNefiZCr0aiTCsmvYT5QtHeVLJ0kQ3uX
KR+uA9WtM3nEX3J1/pJOcmq6aBsa1KkevFenFlWMTfjZOZQMpfqPy/aPI/Ij
S8DT5TznvaP161skHuXPtJ1WkUJYwFVczp/lzJkznD9/AS//EJLl2qfq5f+u
tsvk3plVtG5ci5JFTBix4ACB0Sn698xkqbFc2DSVhpXKMv/kozonJ1ODLC1Z
3DMSSU2XG+bidGsfk9kzphUNqhpjPv8k9xIzUCpUqFK8+Kx1M6oLv5l34pYY
O6lE/ahJDrrIup8W8svaw9xPU5GVlfmI/+nWRGpVctJSkoUPyp9YI5mlVZKe
kkRiYjJpIh+6/lu/1krn6w+iqv2Y0KwDX6135E5MIl5bJol8lNH3b98fdicy
NppTyyxp2P83/EOvMrF2NcqI3xY5+ZGuUJCelqK/X2qynlyXqlUpSE1OJCEx
RcRVGfoC3dovkQeVEoXo/3RruXT5TEsR/aHq4RqCwm34MslGlhhFwM2rXDh3
TvjCOVxc3Am6l4BS+ydrJ/7lPLu2yyQh1JOrl5w5f+22aJd/bR3Sm6jtcrQq
UhOCWdmvPbWMS2FUsyhFja3Z4OhHRmaufs7ryuoP6dWmOiVKFBf+1pll+12J
Ebopz09yxVhBRUZqst5/U4QPaLIea3f6dTJivCru02np8Ryc1pVGxkaYC23n
Hy3Pj6ZLJ+1BPyBTin6isPtiDqqMZDx2fEOb+iZ6/5+w/ADBsTLRb6RwYqot
HWob03GaHTfDkkQfkkWOOpwl1h2pWtSIcjY/ciE44QX6RQ6pUXcJ8fPBy8sH
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
8NOqRUyzaEmNkkaUtviO0/7RhDot5p3Z67Fb+y1tm1bVa7vNBm2Xqwxh7RQr
WtYxpc3ni1m6eCSd2tSicpUh2DkFkJGpJdrlAFO7t6duwzb0+GYBC+e/j0UD
Y0oXeajtVMkBbJ0zljatOjBu3m+s/GEkHVqIdPp+xn7PMBSFvBMfZr+kgLZz
ICo1giOzv2VAU1NxXzCicqMOWPUfypJ9F4lOU+K7dzpv16/BlPWOQge+wBmM
nBR2TezJ6A51ebtTF7p27UqXLp3p3LEzXy5cK2m7v8HrpO0epXBtpyNbIyfk
zAKDDqsq7nn2LHq7OXVq1aP1JHtCzy6mXYumNG46Dq+ouxz/oqc+bomyUwnO
zEWTEcvBbzrlnW+jSzsXVUYCrsveMaRpy7mIBBIy1K/9/IGk7fJ4QttlZZKR
GMm64eUpVcwIqzkOhEfGkiHGTvK4+0Qny8nUrbFQBfBJDROKi/OGzVyPvYML
V8/vZEQvO2LlhWs7beoN3q1em53e94l0W0OFcqX0120xYQfxisLnUGRh57Ht
000/rtPN85UoU46KxmLcV6UdU5du416qnPSn5DfK+Vd6tG9Fk2bv4xrsj/03
NpQpXlS090l4JKvQahSEOi+lfNmSIh9VWLDrAIu6tKNR7fq0+ng73i6/GX4z
YsEpHyJj4lBl/fX3NJ4HbVoc9+/5stymHKXE2NmoxwpiFNK83eP8kbbLjLnE
MKvutGjVjg1XwklLDGXBwBr6e7pu3srpdlKh+3n8V7WdMnA/DWuY6jWXkfkS
guJl+mcF2coErl9z45K7O9fOXsH5wkUu+kYR67WTNk1rUUT43aTNjlzzPMdn
NapSxqgELT7ZRkDIXezer4lJKSN6f7efgNAoUjNSibq5kZpVK+Wtg9x/hbtR
scgVGYRdXElNM91xKxyCElCrlQWOGTN51QH8w0OxXzKayuWF35V6D+eQFLSJ
1xjRtLZ+TD5l203iUiL5dXBNKomxZY8Z+wgV+i/nKU5ZqLZ7gMY/X9v1+OJ3
rgaFcn3/bKqZlhPx27LjRgSq7CzcN4+nYbWyFKk5jD3nXPE8PCsvTslyfG9/
i+jwC3xUy4zSIh3jsXNZObcP7VvUpYHod+xPrqF546fY8NOdRKSoXopPR4q+
bIxtV94e8guuQYmkBx3BvH0jvV2sZ+0gKO711Sl/pu1y1Cm47J7DmJFjsa5v
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
Z1jjKfTKFsGDzuFv+l2WRjb+9Scs9cmloUmDu8ivClZSP5D3SNXicI6gsSlr
FK4Kg4mAdx9izprd+J86QHRZB6Z21VDddvMg/mwaGstY/tCbgi9WbBU+/M9v
F1Kqa6XEZyb/8dpe6gzXuYtoDH5wcKd9u2GwcXKEbzf4zO/le1l+LI6qugrc
n5lLXLWQywvv8uRHu/APCmLfJ8+z8WwanQPrMn3ddrI9XuHXS46QV1NP2o7J
/HrxSaEr+vOTPGJoEmPw/P5jJGQr8Hr/P5m0M1I86yRNvDdhazQ6vVHG8ajA
oazRkiTeu39XvKwfBsHeWcfWybOJrW3BrIvmsQfXoihrxGKsxu3Zd4gRNua1
6NTmX2bP0RAykvz562/eJLyydfjMWl83bVke/PJfd1Fa10roZ88xf+VWfI4f
JKq4Sd4rOljOUB/Ma7/9ivjcahpSdvDL3+6nVFPBlicmsj+uhFaTibJzy/jj
OC8q1A0cnfBLNgTn0mbrHdrXaldf4qGHvsTbL5gzez/huQ8OkFtbw7Ynf8nS
o3HUastZL3geU92EoSOTua/vo1i016TX9Le9RkezNoYZ933BpbR0CoSfW+o/
jyc/vrJv2gd8uxaBp5QdTz3ECt8c1BWRrN90Hk2LeXhvQ28z25+Yzfmsagwm
HeEBMag7rJgqBnw7TS3bHnucuTtPE3jOk4nPvYhfdg1pZw9yMiqNCM8Z/PyJ
HZRpW8jcJeRg8RGS03PRdliG9uOOwY3h7vHthuFK304GRzmrZ27mUoSQpbSD
PDJ+JxGpBRx58w3eW7OHU2ePMmPadA5FZNPhGLAe7G14z3yUr3b4kletEWUf
YdWBMyhVGjxnPMI2v3DKixM47hNCfPQ5Xnz8PU7GFdNm0OE5fxEhacV0WAZx
+KCsKmP3rM+5pCjBNMK30ud789g4DyKTG6iOWMGEFceILmmiNf8Ijz7qQci5
07z6yip27D/D2YNLmLrAg5jCfIJOnyE6KU74a48yZeMJCnSWYSb02Mk79j5T
t/iTW5rNovlz+HzTLg4JOvKqmxlaeuptx+utRfiEZNDY2UhiRBLl2naMg75d
UiFHZkwfzaPwNBRBPpwR/kiI90f86cX1RGXWovR+n0e+2IF/dIYYpwacQ98R
LQR9/iHHAiKFn1nKhfVPMnu3L6EnFzJt8UYO+QTgufQNNnmHUJ0XyOsvLeNS
XCFll1fw3DvuRCvraFUO8CihRm7XK0t3EJFXQfqR+UInXyC1Sn1NPt+oLwK3
7+fonnMoM8+warM7W0OKiNm6lPUffUlspZFB8vsEL9P2LmPr0q+Iyk1j29K9
rNsQS5uxHcWhDXz55ToulOiHWN+Wf4b16z/ni11++OxYypYtW4hMj+fAsu1s
XnOR6qLLLP14B6u2JhK9Zz27lruTrtVTGXWAZe7ueKX/sH27urDl8n7KTckt
ww97DRyf/v9xz8/epdAyWvd2Zu+Wfbvphwvl/7tbk5jwD/fwiz9OZPX+vcx4
+RF+9s+LUY06oN2HoeIcr/1qCicLdLQXess45p0oHS7SYxb8X8wD4x7kiSee
4A9//BML3Y+SIcZH95j6vyn4Or5dsddk/rwtFdMI30569siufn+vROTHCd+v
peAoP/3rcjLK6miuryIpPpNme8/wngeHkllP7qdJ+HB99jxmirxuIP/WY/35
9sITrPxiNwl5Chb99U0StZ3ChjJxZPJMFG1WoeNzmCHeaxRlnaXe/L//Z7+8
JjWy+0uOSrRlYDaVMuun/8hpZYv8jbfE80Ue3ZlK6zXo1HUUs/OL5ZyOzSJo
7X08tDVB3us4DOYRNAj7zfcAM95+m0n3LyKpzsLwJz47Rx//KbvSmnD09Oc9
RN45mE+tl9e6h2g0Nl2BS09J1Fl2LJrN7NeexC2iCke3cbjuvpH4LXi+NJPk
FitdzYm88KuHuZShJGrf63zlm49N+o7S7Rx1nmEMfpjw3fl2dvm73a7YkhG+
nZ3T8rMK8czGiRnvkaBqJf/4TGZsCCJf+BYNlRlkKNU4nMNrrOWn3+IJ4Yvp
jK7+vMdw/pldcTQ0F3Ng9TpORaRwccP9PLk5VPbb+n9PkPXAYNnB/CCOYbDI
/kqippXOitP86v615KoN9PSZOTZ1HrHVLeR7X01nU95p3JbvJjojiSXj5xBd
psM24qO4o8KHX/3XAWGLdVCREMjeJXOZ8/oE1gXn0zniu6GkA9996TA1jSac
g+9UK5n/q//kUHw5FjGR2YqP8Kv/OUBJfSsnJD7GlIz69miv8uXe8SuJyami
qb4aRVKW4EMnJycN8twq8zxe8NxhK+CDFz2p0kl7v8xDbXfYC/lA0CHtvZR6
rfzktfpGz8k3RHm1dAaxm9rLW5g0YyM73Lfgm6HFOnLzk6uaD347nuOplZi7
u2jTVKNtt2MqP93fRlURi/4wnh2hmagaG1CmxlKobST26EbWH71M7Nml/Kvw
7Up0Jkqv6Ldul1Pe+zmmwm4Md6Nv51D3+3be0SN9uzJWzz1OVm6D/N3gySf2
EZGYifuL09l0LIQibT1F2ckUqJqHv3njIHj+eHb7R1Nvscv5XSPzZ8MpyQ9i
78a9BEdHsW7qQoLiCzB0WQj8fDlRWUI/9YzEIZ4vWkFEhvR8mF5nbTBPjj9A
dIqO3KPT+MsKT6G7jNhrhX/1gMB96hCPTV3LqdAc6rU1ZKblotIWcmLnDrwD
ogjc8SKvCt8uu940Sl5rgz/nzd2B5NZqUYT68fEnH/LiY59yLqEK4+CGQ5eG
1ROnsf98Ii2OLjoa1NS3memsCpJpikq6Bo9qNST47WOr13lCzqxj3OQthOc0
UBn0OVN2BQg6RviYMpgJXLiEiPQiOiU75NQcXj9wDv/9H/DRppPEKTXU1+SR
k1+NoS6dhZOmcMQnmMgTC3A/GUZ1i20Uj6rkdgWQK+qR2thfZ/t1+Gzl4nX6
IvPkac57naOkJIo16zaz7GAoATvcOLnXC5V55HebLrI8V7Fn3UoSCxSs+mQj
S9bHYO7toy7mAF9tXsuBrGE/pTnzFDu3uXEwrIR6TRklRcXUaUs5czCA415C
dluyWbvoIKvdwzi9dgGrF6+lWN8t3juB267NeKbp6BZzqnTW8E7pnzvn23UR
s+pJ4Wc9Qlzz8Dzca8ln9s/u4WdTTmLsG12+1O8DUf4nfBVSJz9pS93Fj4Wf
9umRCMqqyzi/dTq/nBMkRms3roE1zR5bI0c/fYQ//maF8KszUYTs459/dA+P
rI2Xv+v1OTvRNpmwdtTL54y8d67h4b/+nt/84te8sCX+qvs0x+Drwd/y7brt
JlJ3PsU/f+iDqtXWv3bcbSfT4yn+7BZNo6GTjJ0DeVUcDz/8GJuPBwuZiue8
53k0FtfA2m4f1pZYXnpiA+UNHZia43nxgQ0U13dglPLjllDQaKbUdxITP9tP
ckEKX/5iEvvDC2g1qFn91AtcqmrGoAnlmfs3Utmkpy1rHz/9HzcqmqzD54G7
raRu66enxVTPnof+l/d3CZ1aVsHZr+7nfxeep646hoeuoLOi+DQP/9cCzsbm
cO6Lf+GPn55CPfTNUTTZqu2nQdh+XaZKLvhFE5MQwuL7H+JkTsvQmZpuWzMe
437CRuGTGUwt7Bz3U5GvlPO7Rd4ttByzw0LKII3NpVzwHYErt4awYydITYzl
zIapPHUoS9jW6qG67ZamfvxRlXR0NrDxyRcIks4LGnOZ8ftnhD7ax769OwmI
LKDD1o2xJkbo0vqxMys/cPhufLs+HKYG9jz576w/n0GLtf8OEGkM7BXP3C9m
Ud+iZfdL0whQ1lIVsZZJE5bgHRhLUlQYPsGFmG39mltaj8098DKPuAVR1awn
59DLPLp2IH9YygdSnHuGZ/+0iBMhaZxb9mse/PQQRbo20vdI712ipqWT7AP9
+armjqF8Tcfw9+tuWwObXp5KQL6KTm04Tz02hb3CviipzGGFGEte8UUUh65m
4hV0Kk+9ymuLPIjOSmLFf7/GngvpNNsG71Tppj3rEPeO20xWtYYYXz8U8VH4
b5nJpIPJNA19NxQ6sCGaV57cQn51E605nuIdd7Irq/Ga+ASfbfWjWNhqlVEe
THg/AHV7B2dn/J4lBy5QqjMO3xfRmspzzz7L+sP+KFLiCTh6XuhUleD5L9kY
lENjRwM7JZ4LXWKzFLLgyZUExhTS1K7BXW57Da0NCbzx1Bqyyxrl84gNMeuv
6htDu5pNT4vyuSpsQn90WyrZ/vwEJszYS2HjFfFb+gycnvsML688QFhyCpEB
p0iubUOXcbCfLxVqznzyAjNW7CMkMYXQi6eJKlay8sW/sOFYIIrANfziwUVE
FqpJ3/cSjywNoKpVOsPtokLowoom87VjJY3BENx1vl2vC32RH4+Oe4G9gQra
5XPpfcKeTuOz6buITaqktdCXxyduJlCMu+C1c5m3ZBM+4fFEXPYnskCN3j5g
Hzra8XnrMTZ6BYux3cJpOR9Epcj7irz74UDizn7IvGVu+MfEinlxHjuFf1Ch
U7H/vY/wjc6g1djSj+NokJCnBo7O/xi/yHTah9ZwezAU+gl6thCYqKIydA0T
56zk8PloFEHbGfe7xZzy9eWNN6exZKsnMYlxBJ8ORJnuw8xJy9h1LJLz7o/z
/CcbiC5rHTojJum2gpPvMdntBIriIqIvJxIRdZl1r73KwYA0oTcH6u8zErxs
Nm98uVHQlUhU8BkSy9Rocn37aboWj/IycH9nEus9PIkO2Mz9ExdzPEpJxvF3
mbz8KEkVhivOZVi59MVivAKiKaytIXTzHDxCEsiK8ODt179k19HLxEVHcPZS
Lo11eaycOoevlq9n975dnA1Opq7VSFv+ID0V5J6az+QNJ+S7dwtOD+TLajn1
1qNX8bmlU8eh6/RF1P69eO70IlcZyVa3lcz9fDMH9x/GP0wh9LdtxH2cXeSd
3MCmRR9xNiaaLWu+4L3Pt5JcqCLt3DZ2H/IgXm0eKm2oiGDb55+zaPlxIoVc
XApVkJmh4OCmI+zaHUtTTRLLvtgs+vMykbvdWPrOAo5FZhLrt4H3Fy1iZ3A2
hYViTqjQ4LxD6ueO+Xbyfsof86N/W0/DiCumLRW+/JPw1173zB11D6qjo5h1
L/ycn/9mBnH1ks/QQ+aul+S9mxeqbfIdW50lF9hyqRp9bRJZcj84qQrcwoSn
FnLAO0iOqxB2+Syz/3gPP57gKfuOjtowlrgnyHdhSvcMdbY1UpwewJSf3MM/
vHwU07fmxN8n/C3fztZYjv/6yYx/fQ0JxS3yvU7iISFuk5m44gxF6kqC1/Xn
qzr0hB1dwYxZs3n33XkcD83H7Bpc7+hFk3WaV19aTFhOBZXpfrwi9FBwRjnl
6WeYPHEawQXNqKLcmfzGXPac8GLNEy8yc1s4tZWJzJo8mcNxxZTHeYqyK4gv
qiE/bC9PPb+I+NK2ofsSpFgH/l9N5vnlZ6hot1IRfJipM+eycvce5kx9jgmv
7SJP20yo12g69fVJfDThDeZvPcLWT5/g2dc3kasbvk/FokmRaTgUX4pT+Ha7
33cnIiGcPQvdyNRah/YNWRtyWf/Ck7idSUddnT2QT6FG5LeI/IpjiTR31HJm
6QCNDaV4vDeMK6Oulcsb3uV4SASXjqxiV4KKjprkobr1mgGc51OoKEtiycuT
2RdWiL7yAg8+Mokp02fw1uy5zH5d8LmyE1XEh7y/PUm+B2cMfrjw3fh2vTQL
GVwzZSLLDgqbS7rvQwwYqzaHtVMnseZEqJhHhZ01bTp7xBzZ3ljAkcVvM3fO
HObN3U5kfvPQXqFeu47IbTOYvOIomRUVhO96g1cWi3ylyO+W8odIzYlm4Utz
mL/hAJs+e4YXpqwnuaiIc2tm8PKyEyirha2y9U2B44TAUcrlzW/I+QLZD+mn
2KrN4IMZ09kbnoPJXE/A3mXMe/ddYQduZMaLL7P4wCWq63I5fAWdqridzHj7
XXZ4HWLdM68ye+NFVEbHwNxnpThkDy9OXkWYsobLWz7lRFAwwUfXsze2HNNQ
PKBe1CmneOPV1YRnlqKMOCTe+VzowzrUiRdYOv9Djp87i/e2vVzMqMfqcpB5
5EvmzFtGeJFuiFd93RZiTq1nztx3mDtvHl5BGWirs9g67UXW+8ZQXJzMqunT
2R2Ygcmi4siMeby//KyQjwTmS20PS6cg/jRvvjqLM3FF8p2WLn3JVX2jV6Xx
wdRp7BV2ntkhyZWDlI3vsPpsjnwn1JWy0Jh5hmmz32G2oGmN12XU+jYKB/gS
mq1Fm3WBBW+/wzvvvMucfRcoaWkgQMwj899bzgGPZTzzwjSORSkIdJ/OZOE/
ZtaahD/XyYUvFhKUp70j8TS+z3DX+XauTopjjzFr2lS2HruEuqP//qL63Iss
eGc9Z8KyyI87yZzZazgdUYwqL5x1Cz4W/89lzo6TKNRtQ+c5bS1leH48m3X7
zpNblM2BD6W8P1ki7yXyq7b5ESdk7YNP3sdtzy42vD6LeWLsK7IS+Orj99h6
Joqaqrx+HAf9ychPYdtH77H9eDg6w6D9Y6My/jhvz1yNT3QpLXXZHFqwkPdn
zeXdOdOFffoah87HEeLjwScfzRPjby77fKPEPJ/KxncX8O6yHbh98RpT3vhK
2DV12IZ0WyNRuz/hra/2E52Xx/F1+7kYcAHPtTuIza7FPCTXvbQWXObjTz7i
zTnzWLHvLEX1Okpi+2m6Fo9SamsJ3fceCz5YyI4ty3lt2kx2nb1MoMeHzJq9
hbBM3RAd/dBF/tldLNm2n0PHD3HoiA95qmbM+irObviMD9+Zxdy5mwhIrKa5
JkbUO4sXXpnCm7PmMGvqAnzic8kIP9bPI+EnXd77EbNW7icsu4DIAwP55CT2
fjDrKj5Xl6az8pNr98WZXe64rd9NyLmjuC96i0mvTmfW27OZ8cUmvBNLRsRr
6EGTGsC2Lxey3TuYmNhANq7exuat3hw/cYrLSUo6R+wn6LY3ofDbxZfvzGDO
OyvYfzKJ/DwFu9duZtOui2SnR7Bx+RrW7QkmLzWRfeuX8d7SFXz2+ce88trH
bD/kz5GjxzgREE/nHVoev1O+nasxVt5P+ZeFYQyfDu2hzG++vE9zV1b/ebi+
HilOaTWXD3zCuD/9L195p8v7S+hqY8/LP+Wen82l1D4wNzn1qKrL8fzwD6yP
16LXhvP5nx7FI6yGDmFHdHR0iNTI0ak/4Z4ff0K5TeiDqOX88y8WUjlif02X
qYIF993Dve+c5/q7AsbgRvC3fLseh4VmTYmwF2rRm1393+16nLSKZyXSngm7
lVZ1f166G8pm0FGQl01ufgFNnfYRewH7sHc2UVJcTZtJur+qWc63dg7mi2k1
OYXf1ExRfj6a+no0RfkUC/1ut+kpLSlBpxdlOxpEWYkWG6b2BhmH3uIajgPQ
bae5VtBb2yzbAi5LB2WFSoqraiguLKKguB6Ts/tqOrssaIoLyK/VCl1dTFGh
Rt6DOrTebzcIGoplGnpFHfXF5dTVaahTN8n1DJczohbl6lqM2KydA3kDVpGv
E3l1owFnl03ozX4arS4b2qKRuLppVwkdXq9Bq1HJPOmyDdftsg3gbDVgMeup
Efn6dgul/gt4aaGYM8KiiY0O59CK9/DMa8HYVEBBjX7UXYFj8MOD7+q7ndPc
gaqsFJWuFevA3t9uq5DL8jJqGlroaGtBU1aGplm6X9FFR30pBTnZKAvV8nrD
cPwOB+3acspUjZhsFtrryyirFnnrYF6H0WKirrRY3odUW11CUZEag8UsxnsZ
pbVNQhfZaa0TZVVNMo5WTX/e4hoexz32TsoFvfXtJjEmujG3aSnKy6FSXSXG
fBGV2lbsXU5BZ9koOp2mVkqLClFrtUIvFVIs3SPXPXh/eY/A00BZaS3tZjtt
6lKhv9Ro69QDMYKHTgMLvdMo6lfRbrQI/aWjrKyadpOdbuluzlJRv7DVNKoG
zFL8F/Gepa1e4BVlrog3bhd4SgpyyVHmD+gFI3WC53UteswmPbWijdpWo+C5
0NUV5ZRWNYnnHaLuMtF2I+aOJlF3CU0dlv47caQ7PK/om+5BXgk87Zp8lLnJ
HHffRqq6/w7zK6HbYaSipIDsXCXVQs91CZtgiC8mR38bywrIyVJSoBU4erqF
fioTfC9Ho6mV+a9r09Mi9VuJ0NP2bjmOQqPQ/U3fItby3wvcdb5dnxhfwo6r
rChD2yjFKOmRv9vZja1UV6pp7jBh6mimukIt373uErZGQ3UpedlCPtTSuB2+
f7rHaUFXXYlG14bJ3CnKSflWjCLfKPIqrZjrDK1UlpdQo1aLsVRMWY2OTqOe
6uoK6pr12CzGARziPZOBOvFc09gxYk9LDxZ9M1UVKprFmOrudtBWW0V+Tr7Q
rfnkFxbS0GbEJMpUluSTk5cvxpgBl8siaCinqEol+C90kbBP2owj4ij1OoUO
q6aitkHYKlLZWupUKjHfC51mc40a1z0uM7UVJeSIMVQhdJGjyyVoauqn6Zo8
cmFqraGsuAyVqkbUXYK2qZUWbRUVZRo6hP0wetwIHaTXUVVdQ2V1teiXjv5+
EX3VKez3EmU2eQU1Qt84qY3ewQcrtuF55jIxMREc37yEw7E5VNU3DNBjoFVq
l9BXHSYz7Q0DeTFf1F+Dz3Isiev0RbOwd9SaKuKOHWbbig14BUcSG3WJYwcO
cSEshfauYfpdFj31Qk/WSbIg8NTXqqkQOlJd3yjmA+cVeyd7sIr21pTkkpsn
5LDZhFXQ0aAR9lZDK52GDuqFvEi4LFLf1Ak7sVTYZmWiPwur0DY0o9HWU9/U
fsfOfd0q3y4gIICMjIyrf+h1oC3JJvLYQnk/5dMrfChvNAlbX095dgoeb/6z
8O1+ydZgBSVC92bmpnLpuBvTX5vEmiNhaDud2No1ZMef5Nmf3sM94xbL+2yl
stnZaZzb+Rm/uvdf2X0+As8l9/Evv5xJQMlAbEa57nR2vXWfqGMce8PSiN46
iR/97DesOhFFdkk51YK2+MDDjH9oHDvjNGNxUW8SVq9eTVVVlfAt6m5Z0qhV
Ypx+CxzSuJPzmm9NSz8+9TXpuZpODZqvjVcjdKnqG5T/Zrgk2lTqr48jxO1V
7n/sfbYdPMEJLw++WOrGpbxy0b5v0qax9H1NXl5exMXFUSvNebcIp2Qnbtiw
QdbZN4tDc81xJ8bjTdN1G+R5kJ4raL2Kzm+glzQaoVu+wfgdxKtSqb9++4Re
U6lvkY68Qd9otbWE7HyLqZOf5aONp8kV/uiNaLqx7ldfxZchGbnee5pb28Yf
atqxYwepqal3rD5fX1/Cw8Nvsf0gbPxbLNPfNvXL6xU0SXL+LehU38h20Gjk
efu28kjSHaqrcUjjf5CumAMLmDxpDl+5HeSo1x5Wrd6Ab2w65arbxGt1Cec3
rGDGK2/x2Y4DHD2wk21bd3IuXEHNDXWK4IdKfWOeaf7G71fw/7p9cwfSuXPn
ZP/u20JwcLC89nIVdDVz3u195r75Cg8//DCTpr3NzrAKnK157Hx/PtNfeFg8
f4oZc9/Dzc2N99et5tDJs0SmKGk02GXfuSHNl/ffnckz4v2Hn5/Ku++79Zd9
/z1mTX2Rh99exca583jjZfH7U1N41zut/9vgQN1vvvKMXMcb77yH1/o5TPvo
HV6Z8TbzVm9h7+r5zJu9kiNBybTaxvab3SxI/eHn5yfL01j6/ibvfZtZs3oz
u/cd5NCBPWz3OMCpM2fx9/f/zmkbS7c/bdy4kcOHD3P27NlbhlPCtXTpUk6d
OvWdt28sfZfJH6/d61m3ZhXbD3rje+bWydhYunVp5UphDx05csfqk77pS98K
x+yHH2Y6cWgn7us3s8Njn+jnvezcvZ9jp3w4e7vq9Pfj2L7dbNywia2797Ff
5PfuEz7eCZ/vnBd3MklrNBEREd/atr9w4cK1v9v1OWmqLqa4eDippHiOLiOq
4tHPq6urKRZJ12rAMeLDpcOgG1WuuLi6v+zg/7WNaEb+Xm/o//52jbp1miqq
NSoKlDmkK/MpFn8LilUYLGO3qHwbWLVqFWq1msbGxrE0lsbS9zR5e3uTmJiI
Vqu9ZTilNUR3d3cqKiq+8/aNpbE0lm6cdu7cSVZW1h2rT1r7iY6OlvecfNdt
H0tj6YeSJJ/sVny3+zoxEO4m6Ovrpbu7S6Rexrbff3u4fuxyJ2319WgbGmiQ
ZU78FXmtVjrXYkZXm0d1s2kgfvFtgj4Hmrw8+dz+ramlG0NTLbmVLfIZbVtz
GWUto+97k+7ZbKjKQ9Vmub1tu6UgncvRUVNdSk6OGqPzzo2N28mvLumsZF4u
rSPOU95O6LW3kpcn3Xn6/dvhfcdjl7vMNNU3UC90hE6no1HSE8Kv1DYbsJna
qchXDpw1u2XkXAW9jnbR5hbso2KV3J3Q122jsSYfVYt0Bu4Kpghd21pfR6XQ
dSXS/RF38E7bG9L1LaHLqqfyDsjBINhbK6kQ7XB9ncr6XDSWl9LSYaRrBLud
QufUFGto/x6e77ubztt1WQyyzaCt1wn9INkNUqqjqcNAR3MdxdWNdNpct3We
cnSoqWnuwOq6+/XDjeSux2FCV6cmX6lE3az/evJ9S6AHc3v9bekr6e7QtvpS
anWt8l1Otx+E7ddQJ/jYIN8L8Tfp67LQoGmhQWcZjp3c68LYokaj1WC46i6p
Wwd3Mr7dGPxw4bq+nUPD2X1H8QsIwOfYDtyOnOB8YAAnDniSWlmMr9szLDid
K8blbbRDeps58dGHpNQZZf/L0mH8lnFsLeRd3MjD75+lSYxNTdQGNkRXibE+
3Abpnk3fVc+y5Hz+t2pbr7WDNmvX3/ZJhP/aprcNxSW+GehztBCw35uDB9yZ
Pc2D7KY7Z5fcKn6NwjnAu86aVBY9+jDnC1px3YG7YJwN8Xz0YbSst79nZt0d
9+2cunROefuJ+cOf4xs3csTblwB/Hw6ciKGmKJFlz07AL632tt5t6GpU8Pmi
aHTt0vhx0mGwDcUJ+HbQh1Vvoqvn1q2R9Fq1nHd/ha/OpKG/wi5wNGXgf/IE
uz59j0W7ImgyOe6Y/N2IrpuDYd6ZVJksf+72y8EgNMRvZ2u0FAvwa5zR6NMT
snk9MRnFmEbQ1l6bzqZ3thCerhpxN9/3A+4e366HupQwzvqfwc/nBNu3urHf
6yS+Pp6cDEsmMfgwby85RUrFwP0Ktwma0o9yICoDtd5Br92Iweq4JX7RrcQ1
CNeXux7qk8Pw9fJk4Ufz2RukoNl8p/aq2SiP92L6FydQ3Kq+6nPRabLjMNYT
7fUuX3kFUdVyB25C7LOQe9GHIL9AGmx/e2D3mGq4cCqagOAaBrVJn8tAXuhO
tu7ZTlRZx20jdcy3G4NbAdf17SwlYq4IoUyjJm7XZP7gFkR5nYZ0fw8uFGiI
cn+ICR4KDCYzJsvIu+B6sZmMYvxaR8c/Es9dDgcOhxNXlwunyEtJ+kbS5ex/
3t0nytht2Bx2LDJOKwXR0WitTqyGei4cjqDBYBnw766s58p3r1z8csn3x1VE
rOcfH92DziJ0THUSyVXDd0j2OK0YDS2Er/8dz+xOleOyD5PfLfjkoqfbiclo
HuVrSO+ZjEaszv57AntdZsovHsY3p17YNKP1SK/LhtFowmJzyLGbOtQR7AtS
irlCut+pB7tZtMlokWP1isoEX/p5I7Wnp8uJw2bv/20EXebyc/zlvu2k5xQQ
dMSfomaTqMMo+sUx6ltat0O0r9PUfy9WT5doj0OOLzmYH8Q7msb+d7vsFjrF
u46uYXv3hvwa4LnFPJoOKX6Jw9VNl8MiP7+yn0byzqivwe1ff8IehRaTySL6
dvS9iiZjpxwf7Sq/eKCveqX6xXsOKe6xTItF3jM+GJNjFK8lck21REdVym38
W3TebXCnfTtrRSRnorOoUZfi+difcfOLo6pGyRnPELSNZWz97b+zK7yY9k6z
6LeuoT7q63HKY8Vsc47+ziv6TNIHDmeXEHuXLPN2IX89vUI/uISukO66lMeD
0B8OG1aBs8ckdFNspZBTG3ptLJ4huTR39q+TXFVP7+h3R8pMr8su5Ktf3qV+
tnc2EOwdRV1rpzzOu+RxYxyQP6FnhL5ySjpLoqmvR+C099MnXQs9MMYcA/9L
0OO0YepsJWrLQ7zoETUi3p303cxFmf8CNp1PJCczCt/ATDrMZiGrpqv0qsMi
ngl9J8V563IJ/tglvSD4I/PNOVC2D6dN6GTTIN/73/6mdPVX2YX1Cjp6JR0k
jwsr5qv0bB+OTt0Q72xGNduuIwfXome42v46ugV9ZotNrkPOm21Da3vyeJZ1
3DANpto00qqk+xh7ZRxOV5fc3xar/Rp+uoPK9FRUTdKdnwzwzUJHczE7ZnxO
UHKpHNNarkfMM2Zhy/cMxjCV+Cbpe0nH3EX3D989vp2ddJ+zxKXkUKTw4YUJ
49lxJoxCZRyngtMpygzi7TmeJOTWYbJacXYNy0A/b03YhB7oHaUeBmwGlwuX
kH2Hs18/9widINkVru7+v3YxFq0D/W3W5pFT2YBe9JUq/hwXU4tpMPbfo3hl
PTJ+gdtutckyOVx3n7ArLMJ2MMn93e20XIGrV5Ybo7AJ5Hb0Cn0gxqI0b0vx
oiRd5pTmWSn2dZ80hs0YxZzk6hm8u/facjcIXfZGDr/1Caf8L5McGUB4Wgm6
Fr08PztG8E2aa21irPbLaY+sHxxOST57BvTVgKwKfWWzivaIudA+0M5rybg0
9uV7LZMP8uCUnUTm6a7y7XqE3rRIetPeNbCm1ifbcpJ9Z7dK87Vr9FpbXzfG
xlR8o7Koqm8iy3s2b233I0fVLnSZTe7PQZ50iXFrFm20O69cZ5XsIJfMY6fo
a5voa4m30hxhlfMD8RBFGavMj0F7qYvGyhIqyqowCdkYxOGQcEg21RV7Jfqc
HVQUVVFZ1SGfE5Pkw27RUxDqzlcbl3E8s/nadErzjOhPyV5xdHXf1BrdmG83
BrcCruvbdbVTpemUdVCR50uM26qQ78W26dXUd7ooPDyZx7/yJjs3Cf+L4agM
UpzZbtrqqinOzSQx9pKYZ1tG+EAutMVpREbkoOtopSYvipiIPJqE3dxRk0tU
ThVtHfUkhIcQEhnKhYAk6hqriA6Kpl7MHVXJx3n4L2uIz6vGIsZZ6xX12EwN
JIZfHnq31dk9fHdqtxV1Vi5Z2TnEHpvNjx7ZjU6vpyzhMqE5DfI84DI2oczJ
JkeZydEP/4XndqdgcQ6s2Ej3g6tSCQ+LpbCskPjLF4ivbJPX7VxGnfCpssnO
SCM5Ng2t3oa9MZfV437HB0diqDeNuJO310pFTi55eXkkhSbRZmkkbNsD/Pey
E+SqWkQdWaSmZZGhSCCpuJUua7vwbaOISC/DLPSXvbWKyDAlTeYR3wOdBgqD
V/Hj/2chsVk1NDdpKElVkpMncCVFka1ul21BqX35+Uoy05IJTypAb2qjODWS
uIoOMXe1UyTyyepOursto2l09OAwNFFWXEBGciLRSYV0imc35Bf9MbjUWfnk
5mUP0eES82JtsmhPjIKS/FRCL0ZQq7ePmsOdTXkjeNfGsYd+yrKj0WSL9y5F
FfbHpXCZUFeUkJuZSkxoPOo26wg/oRuDpkDuq4rKYlIiQolKy6FKlE+JDSBK
qZPvXjeos0fx2iXmt9bKJIIuFmC1mahNujGddxvcad+uS1+PrtNKd4+J00/f
y44oSS7stKh0wrbuxOe5e1mxP0j0fTSXo/LRS3d9d1nQVpWRJ/otNjyB2ibj
cGwOh57i+Fhismsx6BvIi4snNbcKs5g765TxlGhaaKlVEhUZQ6wimIuKUjQl
SYQEK4Wt1ET0nqf48/IjJJXrhDybRtVT09hBq2rkuxUC74CsijFZrcxHKeQ9
OUxBs5iTq1N9eOaxdYSJOtra6khNzSI9TUFYnBg3Niv1ZZnExyZQ0SDFdbBQ
Eh9NuVaPpaOJitJCIVNJxCTl025xyTFdCpW58jg5vvA/eHFHhKhjOJqQy1BP
8NpJfHEshIK6Ftpam6jNKiAvN4fUZCH3Qi/Yu6X9RBVyrIbUuBBSCnW01teS
Gp1Oq7BFO7QVxCXEoxN+jsOkI1+0RZmbRlJ+g2ynOjubvzFd0vityy0SdGQP
02E3o06LIyomWdAi9GFwBNWt5uE+FHpSleY7xDuDXX9NOXBcg55hFNahOsry
M4kJDCM9q4hSZQYxAaGU6DqFvrZRm51BVkYGiuhoatvNwqa0UKWIIDxbI2w8
k4wjITYRZVYKMWFRlNa1yms8g+AQejstNomqpg7h2/ViaqmlSPA8JzOCFa9+
yMXkYkzC/2xUV5GfnU5CZALl6lYsnU3k5uSRlqogMkEp5jLrXbN38+7x7bpo
UtXL667m6ks88cBkjkTm0SlsXp3oP6shn2Xv7uTCpUQxf18mXro3wS58M1M7
NcL+zhK8jU3OHcVbR4eWtOQE8qs0NAl5VyTHUlDThMXShjKlgKqaatKSYgkV
NkBgkNAtuiaqssR8lVEp+rCQg2+8yMfux8jWGrAaR9fT0NKGJjdDyIvQP0HB
ZJTWD61Tdlla5LkvLyedZKWaVs1IXHo6GoqFPGQJ2hJRFNQJXdlOpdAVMYp8
Go3CFtDXkZZQSG2jgdZGDeX5OSgSw0ktqaXT7ry23A05UT1iTorlpQdeZqPn
RaFvmlCLOa0gV9SXkkxSRgVNBuGPddvQlZdTkCnkNCqRMnUj2uoikpLKaNMb
aaopFPwqo1VvpbOugHylqC9VjA11CxbRJ1fKuMNpRVdcQp6wmeJ9P+dPL28k
6grfrsvSSkFxPpnC7klJSKe6oV3YYG3kJMcTI/7PTI4jIlbwtt0ywg4zkHry
LZ5esZXzWbUUnl3AW6t2EBgTQ5zQ/Sn5FRiFf2ftbKW2tIBMRQyKXCV10r6m
ARTS2m91UQ4x0cmCB+myHlZkKSkSfI0VeWW5WshjJzXlJShSUolPzqa4pkXo
BGHviX7KK6oWduwgjkRSFQri49Moqm4ZijUv+b+Wtmphc2RQVNoifEgxn9SW
kyPszZDDH/Ppis84mam7ms4Oo7B/a8hPSxWymEhBaSWdN3FeYMy3G4NbAdc/
b9fD4FJG0ZHJPLIzfUDf9cnzcKn3G/zn+Fc47H2QqS88xuroWmwWNXu/WEdA
TDw+G57g/k98aLIO7tN2URrmztPjPiFb6N3MY6/w1z9vobTTjuryNt46mYa6
KJxpj/+ZZ1+fwYw3twq77DivjZ9JalMrpSknefj+pYRnivFvUbHninoqC0KZ
+tjwu8UG55C9YNdE88nrm0nMLSZi56P86ME9NOhK2DP9KV47kC58EicVvu4s
3nuZwpJU1o7/V57ekSLHxZKh10iq3xzG/3ki64+f5eT6Fxn3cTBtYk4r9tnM
zAOh5OUr2Pfmy6z2zpfjiy/9+T/y2o4Q4fMO04Eln49mu5EsbLRDs5eSV6/C
/4t/458WHCGjWkfitplsuiR8RN9FPDj/Ah2d9Vx4Zxp/mXcMnbCJzCXneH3m
eVR657Bv5+og88xn/PifZnNR+F3a8mC+mLKLJGUB0V5vMeGLQ9SJObbIdzdu
vmJuzLrAm28upaC5kYi1T/PYoRxh57YTJvJPHBN5fd4oGnNbTOQcc2fd6Qii
z3vw1wdeJU5loMTnBvySmqq6fBUdqoYyjgueS3fmHj/vy8qXHmdFRK0cJ2wQ
HI15w7wT/vfpiT9l/CurOXV8My88ughluw1jpWjjymPExYawYvz9bAguk9fq
B2om58JGJjz6AvtOnOXs7s944v6X2e7pz9lDUxn/rg/NVgvJO2aN4nW7pR3F
kemM+5Mn9RKd025M590Gd/y8XW/PgD9t49QL9+IRUyTm5V7xXKQ+K+en3stz
k5fg5bWZV59aTJpaT2dNOKvWe4u5K5i1E5/AzT9b2DcD9LqaCf7gTR755Jyw
y8o5PP1J3tkdTotJT6jbOwRlFZLgv55JD05i+ooZzNx4jqA9b/LoA/uoUtcS
tOo+frlgDzHFOgyVoaPqWX8mnmiftSPeDaGhs/8uZ6xFfPnhFmLS0vB6bzVZ
tQ2Upp/hmfHLCYwvRJ11nHlu54U9do7Hx39GkqqJ4uhdTHv0ZS5k12N31bH3
zblEK/9/9s47Psrryvv5833fTbzZ3WySjRPvZpON403inthgMAYbm2abYppo
pjpgOpjeO0iiI5CQhEA0oYIQSEK99zqqMyqjrpmRNNL0GdXve2fUacZejMlm
fh/uh6tnnufec8s595znufecMtI8D7HnQiDB14/xzjuTuCWpQXLlMF8J2yYt
O549H/4n7+8NHrSnytxUyrUNY1h5+jqpJQ3dfeQg2pEodA/3z/lw3THyqqW4
b95JQHQykR6fM2d9AGWydLaOX0R8uYqWimQcxo0lXNBWGXeMtcdvkZzgx37v
LJr1gvcvHv7GdBkqQu6no1SC15wxDBs9kTMXPdg6cRQbAyRCL++Vk0ZKkvv7
rrm1hWuTXhg0D5KEPpl5Hz319KpAnVo53qKON0Udrpcu4SjqePujZZzxvMiR
T0ey5mIKam0JRxZu4o6wDd3nD2PfrSzUymJc5o5hinME9bVSWxljP5zAwVMn
2T13EhsvhAtZ3N+++pwQvpy6GN/EArGuNXHzxD7crt8hOeYyM4bN5FKEBJU8
hiOO7tzw8+PAtPFsd7lNbvwV1h++QuCd60ycuJ4bidJnZu/ms2PbddFh/U5q
/QYu1oFhb07FLTQXvfU7qFgMuyzFbJngwIbtjhzf6cAHq86SJHTropuuOHn6
4Hf1NB+Pn4lHWK6QKd0LnUUhYcOij9l7LQypJIxFkz/iWEASKmUW+9d5ERzg
y7IZY3h/7AQmT90u5m0C51fPxmGfD+m56Rwd8TqfrRbrkdDzJX7nBtXj7n+b
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
dBGTZ35FuKyp31eUsUSsBTu5E3kb56XbSRb2VW3iWUZPdhAyLQav1e/gMG8T
p53X8fa7H+OVVGnzI9plKGLBbydzt7SZtnv9ShpqCXNdw9D3thKcWo5OlcnR
FdPY4nadGx6OnLycjEbo6NXxHoyeNB2HuXPZdj6EGq3QjbMv8OEkBzY6n+bI
wiGM+MKF3IpcDn8+kEYd1cnefD5pGg6z5+JwKoDSZj3Fj+wvYRc05dxHh9bq
N2L7/fNGprYM+JbS2td3QVHBrPzgHbZeCiMzNYwtH43laHCesNeyObpwEg6z
ZjFn9mEiCpsH+ROsSPFk3IfLCUorojjpEuPeX45/ciGFSd6MfX8i/hkFXFo7
bHBfJxaSem2/GFcxZtkF+PbQdi+dz4IO9yB8P7ZdJ/WF0Wz+eBTrTvoL/u+O
QWCoSmfLJx+w5fwtkpPD2CX0ESf/VBrrsnFZPpPZDg5i3A4QnKXo2/vUC6M8
iOWbPZE3amnKcGG5Uzh1LVbbQdg98d5MGT8d73AJxlYNkptOjB6zkaDMGqqS
3JnoMJcDfik01A6uJyS7kvzoiwOeHbDYmso4+eV+bgXf5NiqXcQJfrVYKjkz
eQ7zhWyI9dvJxJlzOXT2FFtHjGfGLl/KNGbrbini98xm8+U0W/xNa18oM3z4
68xZzJol+OTYdfJUGqRBbkyfNY/1h48we8po3p2wn4SSpr6YanpBq9OsCSw7
eoXUsib0jXm4bJjLlrOXuObhzCnveBqaldx22yb4T8z3ebO5eCfL5rcmzW0l
s4T8O+x2nq3Tx7HdVeh5V3fwhaM3t33PsWrfVSqs+9Dvo6vla+myqPPvo6Ox
oZLb+6cw9it3odcWELhnsi2fXavr54v2qr6+y86KZdOn986DZEoSLg+iR6LS
9z3faaol2FbHWVFHEbePiDqW9+QdrfmTxKeFsuzDmczbeYLdS0fwwSfbiJXk
cmXzZD5a505mSQm39k1h+oZjBKVmE3x8kS0fVqDC0iOgjHVZbFjyOfu9Q6ht
rOKO+x6+WDiP3Ue2MWvSRL7Y50l6USoXti9l4azpzJ69G5+oEqRiHVjyxQK2
Ozmy82NxXbTf6p/jMaIufOd45my71hbywlyZ9ukn7HMNoNzqG0XwSXW6L1/M
2oZ3UCrZ4R44zNjChTt5lGXcZutfF4u/Z+NwyIPY8gZbHNp+tCPzOcSJi7GU
q3Qkn9uFZ1gGtbo2TMo8nBZNY83+C0jqrbpFHSFOS/hs7TFC82tI8drF0oVr
uByTT1lm0OB6CguFfr+E6TP2EpRcg3GATKqMcmHTMXeuXjvPliOXySqvJcN7
d3dZUcn4HJrDXxcs4+C+9Yz/dCpHrseh0rfRZZKz++PlXLHyqvVcRruB+BvO
LFk0R/DxbI5eDKFSUUnQA+Zdbp2YTzYSWqnMDmbRtGnscRVyR6kgNuAES5c6
4+bmzrGTHqRIa9A2FXJxw1IWzJzJnFmHCEiQozFU4bFwJYumbmbX+umMGT+e
UzejuXlsExcue3HD/QAnb6dQXpmP947Bc1wpT+XUX5cxf/ps5jpMYvgw8axv
Ek2G3lneSUN6MLuXf8lJN1fOO53CJ7KQytJcTi+azrYTV0jKimP/ws85KGzG
muZ+/VIt8WPx0sVsdb2G9/55fTwa7+fIuq/Wc0z0V1r8TbavWcA0h1nsdDxH
RkkDvUNiaanmztHtbF67i8DEdPydrPkd3ExMI1DktyzfjrePJ4d2LWXpxq3s
WypsrHnb8bgdyTlho63dfYxEiaS7jPU78E9IxPvITrZvcya1vDeuQSt1krvs
WL2FrUeDyEyM4ui2dXy+5iuWrVjM2PGLOeQeTXyU3yA6U7NTueq4jzlz17Nu
4xI+nz6Hgx5xNJi/mdJgt+3seBL42u92Zj0KeR4SSRlq674224t5CypxLa9M
gd5kQFnenbfKRKO6huyMVNKzsoVOZnxAfLd2FLIqcW+nLSZVdXFdn/y2vsMu
zZNQVtdkW4PbjWryxd81amEzdFpQ5As6ZArbnst762kzDn52IGzxeQtySU3J
JDc3m8xsCQp1M3Ulojwr3W1dttihBTmZSKQlSHJyyZZUobX0++S11pdn6wMj
moZqkZeh1ltot2gpzc1CWlaOvKwGvdWfhDWWuLKi+x7jgLjbnWaqJIVUVMqp
KK+z1duqb7C1saJBg7o6l6ysIiory8jNyqGuWU251YdfrC+bNvnSYLg/fmhX
hxFVVamoqxSl1SdVZysN8nxyi0spl1egFHqotf52c4utfSlpGZQqtN0xFUxq
8qzxkssrqJLlkiOrRWc2UJk7mEbrHvcyiXg2OYOcGrXND3nrI/sLWxyb++ho
f/i86W9Xf9+pGpTIxJiX1qpQN6oEDRLkSq1t3jRWSMhITSEzt0L0+eDnjS11
tucbNHr0zfW2vLKlNy9BKcawuUYyuK/F7y3WmLpijJt0+j7aHk7ns4Xv67ud
RddEWYHQl2pUGHp8crcb1JQWFlBaoxD2gBJ5QQHyeqtPSQtNVflkp6WSmSO3
+d29Vz50tTVTVt1Cm+hrayz5CqXelu9+h62goCCPuia9zSevTvBhQX4ZDVqz
jX8LBR1yYU+1t99Tj6kV/aBnBzpXN1NTIKWiQi74txa9LY6JBWVRIfnSOjRN
deRLcoQOVElFbo6QF/UoKgSvZCfguesgCfLGPnnTadGJtmaTJuRMdlW3XmqN
310kyRJ8IkOSa+WTCtsZwz6f7yYNFaKvSqoVaGzX22iqLCRPWkpZudwW08HK
q0a1mNPZ6aRl5/TEAhfXGivIycigrKoGeaGE8ppGNKoy8ksqkMvLqahrsb0b
+jZ08SA62s00iGsFZaJfjHpUFQW2vK3P+gawv+/0LU2UPGAetIo230tP3+Md
g+toqBJ1lIi8QW+LdVxQUoNGL/osX0J2aQVlsjwh08tp1utQlBWQb6VH2BpW
2orLqmnS6sRzMlveGreyd+ytMq1UVkyFQo2lvU3Mj1qKsjMpLC0Sa10eRfI6
dCYhJ+pKhIxMJSO7lEax/pn1jcgKhUySy200FJTWojV/O1/nTxrPnG1n5VHB
P8VFBVTWNdjOJ9i+22mUlBSXo2jUCP6qR2bNC760CF2jWpYv5LqYF+X1Qq7f
368WTS0qncE2Z4wNVWIN7o4J0i7meHVJMaWViu7nhKxpqJJRVFqN2mBB31iL
rKhErPsPqMdsRF1bQnFBBU2awe/vLC3iuVI5peWCn2qbMLa22XjRVlazFrVC
RoGkgLKyUiEn8qhS1At+LiQ3PojDB26QV9rQ7+tTtLs4T9guVp+KymbaOtof
PO8svXxo7asG0T9iPbb1XzsmbQPSvBJkYt2V14prtjW3nWYxx63+NrOy5Ta9
xCof1SVW37rFyGQScoUMq1Kpha4gE2teiU3eKdQ6WttbaamTDZrjHda+K5WS
lZZl862dJdaVaiFXWwfYvJ2t1j4sRCqTUV5eLfjTYosVUSPqrKhVotGoqbDy
V11j/9lmgXahp5XIisR6oaCuQtrHo2pVtejDMurUBowGDVWlBaSnpyOtqLXF
luqrt81EY42Qb2VVNLRoUFVb85Ui3yL4vILy0kqhNzRQLRdjL5XaaCguEuU2
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
ZdTZ5EO3jOj+v7+cB8kPq55iu6+n7AfR01ve9z2+9vT3kXx9fZ+IbRcQEEBq
aupDfjUTsPhFnv/X53hxqQcSSTJH573MD/7Pc/zi1y8SUGY1vNqRhzvx3//1
7/zzD/+DPdfjxH2ZeK4cynP/+jwv/mEFCcqB3/g6qQrbyD/94Bd4FWhsV9qN
amQSCUUyGVEhV9k58z+6bbKfLKDQapS1qQi5epWrD0lhxU10v6utEHVLKC/N
4ra3E588/5ytnF+sCLR/t3sIdu/eTWBgILdv37Yne7Knv9F06NAhPD09be/S
n1SZVrmwefNm2/u/77t99mRP9vTotGPHDi5duvTU6jt69Chubm7cvHnz6bY1
yB/PY47s3LOHfYcOCzqO4eJxCf+bT0722ZM9fV/J+v397t27/2Pd3s/P7xHf
7fRcmfo7/uM/fsvbh+Nseynv7hjZbXeJ5JqnFdeUnJnwfPe1Hy+lQG/dE9RF
Q4ITP7bd98/M8ynu/57d2cLFBT/jx/+xBbll8FduY/E1/vD73/Czn/2YX/76
97y2NgCD9ZOcWcb6qVOZ+pD0VVDJoHKKr37Bi//5PD//55/z2/9+hb1h1fbv
6Q/Bzp07yc3NpaioyJ7syZ7+RpOLiwvBwcHk5+c/sTKt78ms736s3wK+7/bZ
kz3Z06PT4cOHiYqKemr1Xbhwwfb+x7oX/Om3t5C8PAm5Obnk5uVRWPj99789
2dOTSNbzFU/CtvPx8XnEebsO5LHXOXPmIndySilMCmT5kH/jX372K17802uE
VpqFQZaHww+7bb0fvHeSlp4nO1VRvN9jA/54U2jf+fFWZQwf/vMP+Ox4Jvee
DDHkufAvv3qJNz5dyCHXANJqtN02WYeG1MhIIqOjib4nRYrrmdXaQeXkuczk
Vy+9hsPyHVwMTkSpt59efxg2bdqEVqultbXVnuzJnv5Gk7e3NxkZGbazL0+q
TJ1OZztvZ90n8n23z57syZ4enU6cOEFxcfFTq8/6vS4xMRGNRvO9t92e7Ol/
S7pz585T8aXSbmggPzyKwItOLBj3Ee+89iGL1x7gcmgcKl2bzbab8X97bLt3
T6Dpea6zJZmPem27tXfo9i7dicxnGT/80Qv4yg331NRJQ4ozY5eeIT6vDFWz
sd8vUVsdfqdPc/rsWc7ek06L64G5DX2ldHUYSXKcx4qzoRRXKdCY7Hbdo/Bw
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
gbWrB2FuFnimFFA/vh/gwGO/5ZEVY/eEDGLi0vE88iEL3zdg/7nT7Ni+hnUn
3YgI9WPfphUs//QQRmc+ZtOytzHxixf4MBbTfVb4BSYS7X6YTSeuEpOdiY++
jGXsXrsR47uOfPX6n1l/yIyEilb6xjrnvuYSbsx7ffx+ie8x3lthgOG1K3y8
dQWHnaMokUY+YUtV42uhu6kpCOf8Fx+x54sTONmasH/7JnbuOc1dO0P2nziJ
tX8eZQluONqZ4+Jtp/827JZfLhXp9hzZdgTTWymU57pwapcB2/acwPLmcfYc
PoNFkGx8reaIiLmS7l1h76GLuGUITBjihq21HRFxQVz4/ACGF12orC3C182Z
23bu3D11gFNfXSEsPgJ7R2duOHlheOoKZ28G0vw9buPxg2C7v5qETevmcEV8
8fi30z3lPvzs//knjoVVPX0sfmSYwcHv7ihHhgafnPOdpq+lp2K7SZQ/BduN
ktR2Ba8ecaSsUon/2Xn83jyFpmIPfvf7/bj6BuFi8jEzPrKmqK4So9d+xBHn
aLJy5eQ4r+e1nRb4PfTH7OOZnPfKnfLtsLrkIdfuBCIRfehvfrKGuHo1zcoQ
lv1sH2H5WeRXFHD2D39m6y0PHnpYMnPGfHyKWhmY1N7j/Orm7ZIv8eN/uEFt
azspF+fzz4ccKK+pJ+nCPP55nxtlqjoSRXqueRKaLjUJl+bz9vUkkbeHrBvz
eeVqDPUdVVz80ytT3ulbWMLVP/0aywSFPl/suXnM0M0VTl6T2ZbNB3Pmc9bW
DftrzpS2d5NpuoBXrqXo5yOzzERa5GloqODS/HewjpMir8jBatNPWWqXhiL+
Oj/+lwOEFVRQIfFhwT/8Ow8ibPjtz41ETNuGtqMGq/f/wGbnbGrkQeMyypM3
omlJYd37ZlQ0dNDZJufcvDXEi3RTpScLf3aItDIVNXEX+fHPrajR9FPivI7f
HQ2hprEO49//iFMeRWgmrVkbqAvhT/99Eol4b5e6jONvrdevySxy28DrU9oz
W8TWSaxfZK5/d2txwJT21OXRtCpG+WnUrdnsmMB2rVPlVdbRP43tviX90Nhu
grpxnITtHt1zXfYSx+2iKasqwWjBh0TLmij0/pjZe0xxF/37jT0LMXJNpuPR
93TDzVjOfhXLsHyaNWoSrxqw4HoUinwv3nrzMHdd/HA1/5T5u24iqVJhM+8l
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
gbz+x3e4EypwZq0Kj8MzOBVeQnN1FEvfHJORro16cvnoVdHvpJbR0qHkzLwl
PJQ10qEKZsEblyivb6c545aQzQXKGrqoj7nIm6tOcNPaEqsbdsSUNOix+CPq
r37Iy39ail1QCmVyCUfemIdDuoJi/0NPtqcme/zdGY6LRHtaTmrPfJrax/ip
aKJHq8LwzSUElAmMrCl7Ql4tMvG/6Jf7nsF8/v9mej7YboReTS035/yc817p
NHaP9vdD3Y3i3i+46JdJTVM1N5atwzdXQXnoGRbNO4qDXyyJUSHc98uns3us
5x1u5Pb8t/n0mhvphaX4GM7hzQMuFBdGMG/+AoxsvEhJjcfHzhNZWzP31/+e
r6x9yE13ZsGfD+AUmIrX8V/x5hd3kNYJW79pwDtGD6lo6aJZN5f12hVhx1VE
ubqTHBPOgyubWWSZMLZXy1httPnsetsAw6tm3LplhneYhCZNC+6fLmLDSUuC
ElMJ9XcmrEBFssUy3hXllze0kWVloE+XlUQx/zFeS2rkmM/9hZBPBi0C65R7
rWXlQXMiRex68reruOmdRm2Lksvz1+IjqaSzs5orC0bTPboxr5Fu4m99zuyZ
c3HLUDy272gnse4PptSnqtCLN39+DJ9giYjLDvLTPx0mQdhWnsMWZpx4gFRR
Q1mYKbM+8kTR0oLTpuXYJeSjqq/B/9x7HA8QcZfXfuZuOU+kiL9q5NFsm/Ux
8cUqUm+JOh/zobxJt79KN+5jbVBcp540ttYzcb+6iUzLJ+UU/+AY7899ih4I
nepujmfDB1fIKatD05TAhnlXyCqto6MxgfWzT5JelI3hsle5aO9Hsq8hP3vr
AOEFNdSnWY21cwuamgj2bBByTiijKd+NmYsv4RunGF9HpturPd9pNwZGjkSn
BrBh1Q4u3vYmp0TCtQ3bsPKIJjvMmC2rjnDjXjBx0eG4C9mk3d/JzuNGeEZH
c2nux5haB1NRryQ5JZuaFvVz3ev3hcN2wwO0Sd2Y8eoSLHyT9Pqv2/WmpymV
L9eZE51QTrPUlVmLr+AbI8XvzA4+OnoZ1/B4IoIeEJanoK3n0bxdDBsWf8xl
Sy8ypMmcnbMbvygprdXRrH7nLHfuxpHqc47X5hzAPSIOk11LMTK3JdL3Cq8v
Poh9pJQayX2hB1eFHlTQmOsymo6vpK+7hPObr3L/QTI1ml76uhTYbF/PopXn
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
6OfHR0YGaFUWUyB8jlxRSYPw40PCrzaLe0UFKj0fOj803gadk/3EpPtqNY1V
xV8jpz5anqoHwubVDRQVyWhs70TbPppuaOukU58uoEGtpa22kPy8Eqqq5OJv
PrWtGjoax9pZ8KPzO7JSBQ0tahG31lNeKvxna+eEHxHYtFlVTklFNW1dvWha
aynJlVBcUSL6ugL9PoedPd2018mEv84gO7dCv5dhr7aF8uICKiqFjyqUUlRR
i7qzjdKSClo13c/1/MQXDtuNDNLZWidkU4SyTvj9gbF5O3XjY20j0q3CVkSs
UV1eKPoSYWcK0Tf3Tz4XbojO5gphWxKKivOxXLcbX6G37QP9tMlKkUpKKS+X
ki/No7q5jbb6coqkwu7kFfp1daqGVtqa6ygrkYt3qel4lBY2qvNLLUL/S0p1
62MKxfMpuJneJDZPjuaJDRGF72n7drqis8XRcnV7hqqpKS8hv1yOTCZ8k+iD
m9o6aFSO6aAuPlFO6GNrjQylUib0u1Kv+xP7+Y7QUfv4b18jg6ZW8l328MFh
Ex6mF1BeoaJV28dAfxvOn3yCpUeYiD1kwnc0jZ19MkiH4L9E+N5yeSX1ur65
v0/YmYzSoipa1X16X9kt6l5eIhuV2/AET+P3W9poqhZ55NXCHjppri7Xp9uF
jrTVlT8mn3FFYaBHTbWoT2V1Ax3qNpGuQqFqoL1Dl9b5pjpam2uQlxRQWlou
2q4EWaWKltZmlHIFVbWtqHX5Kquoqm6io70FlULc1/ndR99UC7+m6wsqZHLh
L4Rv0bRSWSpivyJhx6K8wjKF8FlaOnW+oyCLrOwioTdqero7qa0sE7Ipo6q8
VOiznHpRz2qVClVdC896y8Znhe28vb1JS0t7BhxN098inT59Wt8fVIvY+1ld
KmUVSqH3T39GJWIRgW2elv9R3m8qQyVio6pvesf3cH3dO8U9fV11dv61eVRU
iThg8m8qEdepxuSg+1uRH8XHf34V6+A0ZMKvPnouy/sE//Hfe4nILkfx2Ht1
Mq6sUj6belVmcOKV15i97xy2Ts7cuXIMQ1Nn0Q9VPlEn1Vi7qaa0zTNoz6fJ
SydX1Q/Yxn+jl52dHTExMVRWVj6zMhWib7xw4YKIp4v+urxjtqDSt51qqg7o
dF6pfLp/eIo9qXS2p3xanoln/5KujPIk/JNS9ZgOVxNydSMzZu/kovk97O3M
OXrsPL4ZArcqx/j6mjxf/45v4LX629uDPMODTetXMXerIYEiPqv8mrp9bX3E
31H5PrKdUrxPvcvL+61IKigT5Yw+Jy+I4fN3ZmDhFU1pReUTddPZdNX3Zn9/
QQ++Tf4ndOu7XXq/PFbfx/VVNVkfx/VaNd6GU/M8n8vY2Fg/Tv9Dvc/V1VUf
h8pksmdXrk53v8HOVOI3RVka11Yuw8TandyyyrE20rXPI7/zSD/G2uRbt00V
ETZf8OHahew8bUWcpFjo53fUla/R2Qkev0EXv8FPff1vj8ugjKBrK5m//zLe
yfl6m9fdlxclcnK5AdfvPCBHYJTnYfNPl89fvsb7lGdkb4/Ke9x+VWP90POw
eQ8Pj2eC7fz9/fVjL9P090nnz5/HxcUFd3f36es5XW7373H51Cks7zri6jZx
39nGjFOnrmHv7Ibb98mDmxNmp09x8rIxNy0tsTC5hpn1XVxc3Z67bKavb3dd
vHiR27dv6+fvnlWZurKOHj2Ko6Pjc6/fD3HdtbjMmVMXMTG/heUtM64Z38TB
xfX7tb1vkr+jNYZnTnHiggUO97+Lj3bBxsyQM8aWOLpM6Iebiz3XDM9wy+Ye
Lm7Phufp6/ldJ0+exMbG5gd739WrV/VzhT94/ODqqF+/Z2F5B2dhn8+y7Ls3
L3LuzAku37AWNvdsy/5hL5fRuhhbYOt4f/y+m4sDpuOym+7fX8RLN0ajGzP5
ruTl5TU9b/d3TKcEptCNz9fW1k5f09f09Td63b17l7i4OJRK5TMrs6qqSj9v
V1JS8tzrN31NX9PXN18mJib6cfof6n26sR/d/IJcLn/udZ++pq//LZfuO7ln
ge2mv7f7+6ZvcwbCNE3TNL3Y9PzOQJimaZqmF4FeuO/tpmmapumvpum9VKbp
WdBTsd1IP211ddTW11Pf0EBDg/gr0rW1jXTp9lepklLZpB0/v/J7oZE+qguk
tPUMPHGGSE+zjPJm7ZS9EP6n1KtpplyqolN3Vvd3Lu1Fp0HUTVVI5S1T9nZ+
Go0MdtOg/AHaepq+Ez0vbDfcp6a+WUO3uoW6+jrq6kZ9RW2t7qqhSd1JR6OS
QoXum/apZwEN9+r2DWmmt/8FOfx5jHT+oKiwanSPj6c9JHxTS10NCqmUMlXr
pP3Ax37W2Y28UNiNeso+QLozWnT7vKiEzP6a/YEGezqoKiqkUdPzVJ/3Q8mz
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
AXEo6hqoyEogKr2M+qp8rDYs4bMLd8lUNtMs+g5d7FFX30J1TirxsYnkZiUT
FRol9LCZXh0ubCymIEfoaloayekZ5Alb65y0Vniwq5VSEQ9k52Tgdvod1l62
J7dGjaZRQXGeTscTScwso0H0lUMD3YKHcnIzU4mLiKdM8KBVj8YTkizR7+VW
0aGd0OXBnlYkoq4xCcIfJicQGplIXlEpeRlJhIh0VVOHwHFNwh/m6H1dRHye
kJWw+Wx/Ni2/gLOPbpypndpSkSc9TbwzgZKqZno0+V8r94kXt5MsfNaCk9fw
zJST7/4Fm0+b4BsVTWBoJEXVOtkM0tGooiQ3m6S4MFKLK/Wx0CO59GoayEpJ
ICFTxAWRAQRHJVBZ30CVJF3IOZaYgIekFwsf3taIVNQ/PT2V5Ph0CkuUqDs7
qCiUEBOdRFqKyB8TR3JWHoXCv8SIdG6ZgvaWaqQZwheLOCwyMoKIiCzk1Q0U
xV5nz+lPOeWXRYvmec+ffjeaxnbT9Czo6d/bDfFoCklqY8A7Jql09ulm8odF
HwxF99bzH7OWYXXXklWLZ2AYKadbW8WtI+fwjorlvtEs3tjrQn3Xo3V//RQG
GTH/1b1k1YoYzM6A11++SlFHD4qga2xwSEaRH8yama+wYMU61q2/TGTwPVbM
3kxyfRNFiY689fpRQtJK6WgtwXztXFZaplIrjRR5XuW91YZ43Ddh0bsHyBFx
y0BLKjvnnyaloIgwEwPenruceEXHeF8xMtCEw4kvuBumG1u05d2fLyWhtgu1
IpjDq02Jk+QSbrOReUfuoOzsIsfhIuecQ4n0NOX1N1cRo2gh4LN3uRGWToKD
IU45TRPx6JCaJJdtzH75fc7edcPh7Ae8ttefZtEHFrpeYdOtQNEnJGCxYSln
HPJoq8zgyP/3f1lxPQB5W9/4eKW6LGasblfwcLdjyTuvs//Cbdzd7PhApB+W
t9KYacf6U15kpnjw2hufkdXUMkVWTbIQDI/Yk56bjtn69dyIqRT9goQt/zmH
c7edsDy+mFcP+Olx4jj11uN1+Gf80947pJY3IbVb91e2NSjSPFkz512WHzqH
yZkNLJ3zCvfiU7izai4vL1zJwXXruRVbSo7T5SfkUV8Q+c31Lq0k9t4+Xvvz
IjZcMePkhhUCy56lsE6BxyS+h/6OxvV/aGw3rM5h3R+W419Qr4+FhnTjt7p1
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
cSmt+1Zw+vTpX5ynwTgYB+MPizt37sTIyIgTJ05I/2+HHp88eZLPP/9c2qNB
9//ixYtYW1v/4mUdjINxMA6MK1euxMTEREo7Ojpy9uzZn5Xenj172Ldvn7Q+
SPd/0HcYjIPxp8fdu3dLa9xvx7idbi1sY2PjYPwXjLp9Mqurq6V0U1PTL87P
YByMg/GHR1tbW2mfk7q6utuWZ01NDfv376e4uFj6r9sP75cu52AcjIPx1vHI
kSPSOSi6tK4v/7n78ytXrhAUFERVVdUvXvbBOBj/r0Td/rN3/Hy77k5aNEoU
DQ0odHvPtvc/E7i7q0M6E6mtrU36bWlpoVWkO7q+/RSazrZmlI0KGhoUNKk1
tOvOsG7vuPW5Nd3taDQtN93rpqOtVdDT0+zsw5LET0urxEObjh9pr9Y28St4
bO25Ju7r2NPn0drLt+769XK0tQ88JaOrTTug/HR19slDz1PbdTn0XNftASyl
23T5i19x7+azldtbb8hEpW3td6Z0l3i/l69+73XTfv16T77t3+Ng12893667
jYaKCsorK6kUtruqSvyKdHm5bt9tNVVFaRTWqHvP2b5tobuV0vQ0Gprbf5az
i7o7tFTK0yip1/wo3luUteSmlaBq7+rlT1tbhVr819bKya1V03m7ZfItdH9w
+JllOxh+uXCnz7frbldTU1FJhbAROt+uWmcnysspr2miWdVAfkYGtaoW/oHp
/1GhpS6fPN15Fz/l0OruDppqSsjIrxU2vPMH60J3R7Owf5mU1Cl7+7bu1kaq
G5tp19aTlVlLS9vPcbJSB8pawXfBj+P7ergtMhwMd124m86369AKfajW2Qe9
71BRofMdyqhRNKGoLSOnsJqmH9APdXe2UFcso6Sqnpab/a7vEdp05wrozkxS
tvSed9+iqJfOENE2lFBUq0D7I/L9riDxXSb4rv5xfOszaaM6L5dahYqO28/i
z0/7J+ch7HVlGVXllbT8C9isO312eZu6lpTESLx9ffD29OSa62U8gmMobbih
160NxcSG+0l76vv5xZKcnECUbn/9mERK6zT99FjysfNSiAz0wE+UxdPTC49r
zoRExhAekor6Fm1AUxmDs3MqbX0vCn+1MCVc0NPR9CO1XNN7q0NVTnywH36C
h0BxLya1QPgjMoJFOtBPfy0qIRtlq5r4QD/p/aj4RJKSk0kVvOvLIa7l1tws
DfIDXfGQ9fd52utzped1ZU9KSpR4CvQLJ0HkFx+uzz8pv4DEKB1POjmJ3/A4
ZJUquoSPoJNJVUEaob7+Ut16XrvKBdcA4vOqRZvWC0RVmUtQD18BYQU09x7G
3UJhahwB/v76fMPiKWz8bt/qW7FdazEXLU7iINqHnbUZe0/acMHpEmcsTxAp
S8dh10SW2yXS3HabjU1nFdZLlxBW3Nh7ludtzV5VgN03k1h/KeVH8V6e7snX
E7cTV9Pccy5mO7G2NmQq2ijw3MEOH9mNOhkQutEohD/4I7DfQLrfMwj9aBA+
Z7eO5s8s28Hwy4U7je1ay6OFXXDgwoXznDHaz0lrey6dt8XyrD95aUGsnzyR
81H5wl+6vQ2t1N+IvT7pNGh/wnn0nUrirhxg0pfnkYt+6YdagS61sI27Z7DR
MUrwoZe3MtuDixGFNBQGsuJrH8pqtd/qt3Y1N6IQfu0P/wakJtn9IJO++qF8
d6Nt1PlV+u9Ct0WGg+GuC3cPtuukJNILxwvncLCzwfTgHixOnsXe9jhnPcMI
umrF4nW2hOfUfO++rFNbjofxEraddiO/9hb+yneE2rxI9nxohGd0ARpJcTrI
uOZGWkEFeeEnMPeOpKCh5Vve7qZZqZHOwPyhGtul49tiCdvP/kC+BR5qUunO
vBPMdtXjunsbvlFpKG+zPf3O8H1o9+X1x+bxj0K3ivjLtlyxd6JU820tpgNt
c4uIt9emtYk8W5tbf3Af8VPCncR2rY2VBF4wYeL0uRjsOIm3wBZOViuZ+fY4
Vh11pa7nXHuFPASjLyfy7LPPMmmWEU5OZzE0mM3Yv/2dVYd9UV2HIe0qZOGu
bFs6lQWLFmJz2UvgkWsc3zqHKaP+xnOvbSH/JhdF913Ued9bPPWUGbV9Bd2p
wP/0Bt6d/Jq0rnfe3oAe3RX1UpuM5dqZDBs+nKnvGWB5Phx5qidrZk5i+LDh
UnkOnvWhpDiYd4a/wrT3FmBoeZJzTk6cO75RKseI8dNY75bdjxdtbQLrhj/N
C1bJfeq8mxKvdQwbOYV5Bgc5d86ckYLG8LFfcFbkZ7l+tvg/jM1O/pw0nM0b
w4cxfPTbGBgKeaZW096qIi/Kjd1fvctCg9XYuHjh426Nwfx3efGTAwTk19Mp
gFp9miefGMzgueeGM+y59cQJXCj5CJ31BNkas+Cd13hl8kwWbD9FVJm63zjm
rcK3Yjt1OkeOXCWzsAB/0+kM3+lMVlEBEeeMuZhciLfhK4w3DUOhUqPWtvQZ
A+uiWaVEqdL2+C5dtLc009zagkbbIl3r7mxFpVSibm7TY45+Fa0h2VvUibpV
yrNVq0KlVov3b7arXbRJY54dtGh67vc80NmqFfmr0LZ1MiD7DjX+O19lnGkE
qtbOW/Cr+9bWhlrwpx8zvVGuFrWKuooEVo9YREilRsJHXS15HDU8R5mmDYUs
mBBZA+1dnbfgrZuWpgqunvKhokm829khje3qxmi1Le16Prva0QgaKs230w0W
9d0sjUXr5NEjg7YbZe8QZVcq1dI3wu7udhSl/hxzTZHO9+zuJ9tb0+tq1+et
y6d/vQ6GuzncaWynyfbE3iua3IJ0jo96gV0O/shyE3A4epXi8gz2PfUIZp7p
1DXdaP+6oNN9tUqv+1Lb6tLpgW5+g9CD1nbpuRtteKD+KvMjiJDV6OdMdIv+
XNgGtUZLa0fXTc92SbqnVGmk8al+t4ReFIea8sgbh8mqUEk2fCDNW7+vm2ei
bqrFZ/9rvG3qQ6VS96WxjVhbc3yzq9EohL30kwnb0S6Kptel9h5d0tmXrnYN
eV62XIovpFHofZuwjS3CNmp77uv6kVatjq6ats4+Y/SSrjYi99vPwxMOkV5c
J+yGTobCvrbq58f0YkVhvzS9MhblUFZyzdaf0tomYZu6acrrI8Nb0eupk07B
v0at6c/HYLhrw92D7ZqJtD2HX2gsqSF2vDNhDMbnrpGc4IeNcwSp0Vd4/wMr
ghJKhJ5oRT95Q887dPql0tuMvt+luzu1xJ74gAVG50kUfo1OP3XtVqXSz/WS
NKezXdgDXX/W3PsdQ9e+25o1NFSnc3DeKlxCM2nq1PmTpVw6eZW0vCoaihOI
k5WhEDrbIc3TaqdFqxH9bLvwnwQddS2Bl0PJLawSdqa9Zz6W8Gl0OtKlt2HN
4nmJbh+Hq7Nd+DyqekKOzWKhsT3xhQ16vRJ5Xp9rdp3PzraWG+UW+SmrYrjg
F09+ZZP434wsMlyka2nVZX8Lel0dbZIfoPMndH5WxwCd7e4tW6uQubZZz0dr
8/V0dx/5qySfpEu61nKDdqduXpqQkfARtDqbK9nKm3nt/hF56NjrkmSqlny9
9l5+9KGdipx0sjNlKEVb6RBl0M1Ra2nW10FXdyfNjTKCoiMIT6+Uyt4p5KHr
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
y9nlsuo6TL0DD8k70NuBUpZHTnUN8goZBflKi3/QtnoFeRnpVNRUkZ+TT7lK
I+QSXGdgYDjfzuF8dRgMrUK2wodkGxgQZReJNBU69I1qCmUydK2mYR/A4nkr
iigoq0KuUNLQbrb49m1vUD5QrhjvBoQNLMsnO6cSeZWQNV9GfXsXvV2tQsdl
k56RTZXOYLGze41NlvZUivJ7TC0jbTsw0P1weX2f/1xNvWZU+fnUdfRY5+2e
UHxn83aGZuTFRcgF1zINr9frM+qpKimmSl1Pc2M9iuJilLpW+vq7aa4tIi8z
g+x8BW1dPRj1OoqLC6lrHjrjc6DbINLnkZGeQ15t08i5nhb0d1EvL6ZI9N2O
7l7L+6uolVMjbJv6tq4x34gGaKsT73Z+KUpltfhbgKbFOOb3fgyi/xUXVdMk
3vte84Nliv5eV/zQ/WbRl0tlucjKK5CJts6T1aAVfccw4q99TL5tBhqUxRTL
62g3GUfiktwdjbUiTQX1zQ1UibaRq5ss3NAyp9Em2iOvgqqqKpRaveVsB6ne
daVFZGXkkp+fS06ezOJ/rqNRSX52NtUqNcoSoWPVQscK3dwkLyI3M4vcfBUG
aa5ksJuG0hKKyoXOM5tG2tBg7qPzofL6hU7UUlIsF3XooL1JI55PpWinLjob
Jf3W9M3PYLbiW8UTx+0GejEIm62stJgabSOdvcPzdm0NVJbJ0TW3095cR4Ul
bqRb2BrqiiKyM3LIlfpKz+i5R9K8XbOq0jJvojd1YxJ5lBXmkpmdYxlnJR/P
2spSCiqqqawU77ewVxrE2NrerKE0L4eSqlJhwxRSKhfjurJB2DzDa3nEmNxU
WyHyVdOk16OqKEOpaaCtXU+NFJfsFjH+NVeLssvU1NdpKC8rQd2gHzrPTTpn
SCt+q6igolqBTi/GWXG9t7NN6EDRX0rLkBUWkV8gp1H0IWOL0A95uVQIvaEs
F32/VtgLHcJGKi0kIyuH0hohm2inPmE3VVaUUl3XjEn6XchSo2uxyPJQeT1m
9JpKyiw+1yU/FxWWeKupd8RHuGTHqStFfYQN2y7sE7VUN6Gz20RcK+Lymnra
9KJNhcxVCgXKIhnFVRpa24T9Mlx2q3hWQ8+tjTbLc6sScQNm46ishtYGKh7M
Q7TlF+bRYqC5XoNGUSZ4qgJtfdO4tbgDwu6tUyuorBH1a25CLdquRsje2tpM
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
MsGVbYf3cCJWjiLhvCV+MkFJSaArRzcsZ/fJC1z2uk1sbvXoPEW/nogLu9mz
cQO3g6/wsSjjk2N3yIs6+1BezsHhHN27lY82OJNSVCjGnUMc338a2Ri7dCJg
5XZWTAS+jNuZtCV473iTP7+7lRhZ/dAcm0lL4K63eGWjJwWKMvy3v2mJlze3
EHx+I7Pm2bBw0QIuBeeirU5i3evPs8E1inpzP+aWfJw+mIGNnR0L7I8Km0s/
Tg92KBOY++abnIouQuazjSWOPkQGnGfl3hvoOkfn34zqLHa+9hy7fBIoK4nj
szfexCUkl+rwa6ycv4ir/je5eOA4tzJ14777j9znmYK8MoMdlngCVSJ+QMQ3
ut5DXhbL3Lfesshg7lTh4bCK+XYLOX7uANNefoU154NJvO7C1Dn2bDnuhO20
SbwgxoXsqjI8177F5A3ulAp9qUnzZNHMudjZL8T29G0qWyf+vC8rrJDw3XC7
fnQlsWx77xXWn7pNuRjjpL5sqs1k+9RX2SbsqrTUSPZOn8Hx2xk0afM4u3o+
9na2ou8fIiy3hqLYa8x6Zy6eUdK+2B7qs2+yYr4tdqK/2br4UNDQwf1pfen8
gVvbZ/HG+svkqOu567ACN/8Abrvu5Hhkyei83YAe/11vsmjxBk4cXc+Lr03n
QkwJxuHxvL9LQ6jDLN7c6EpaaSl3HGfy1moRLxPxY1L8FCnFRdzYer+sVsqC
LzLPbhEbjzoK2+g1XnrXgcTSYrwc17Fg4UKOntrLrNffYPVJH8K9DvHqG5sI
yVTT3lAwrs6hOTqhPpNZvWoveXV6vv2THKz4oeCJ43Y9rRRGXmDutKkcvBCA
otkkNMYAqqxbLLfdgWeIsPmj3LCZt40rd2VUZ4WwfcWH2NjYY3vYjQR5I93D
Y3dnfTFnP5zLDmktYkEGJz+Q4t6ki/h5Ed/s4EF6Tjzrly3ioGcYmqZa7l7e
x/Kli9jnuAO7mdNZflCaK4zGaflKlsy1Y6HtDF54/l1O34ohJeg88+Zs+VI5
BnsNJAWcYuUqZy5dcsPllBtp5WpaNEVc+nQhnxw4R1Sh1uJ/6T5aZLdYtmIZ
2y/44HVwIXM3uRCSnkfYiQ8t8YgiJdG+x/lo6QJs7e1wvhZGbUvnGFuhi+D1
c1i4zxmv2zc4LjhKYmktzbXZbBqub01NAZ67VvKB7Tzs7fcJblZJo66Ia5tW
8IGNDQtsjxCQpKC5seyhdO1dY/bEaHNH8ky97cQWFzdu+Fxmu7QWVt4wMm83
0Kkl7Pgy3l/nQmBsLE5LxPM46U1qbgIOos0PXbojnkE1Xqs+Y7nQrYk5Kbjv
HC335r1iCpL8+ch2MWd97lGuNdDXWUechyNr7GZha7cJF7d4shPv4OrqgpPb
NU6dd+dmbAFlCb44rFnJofPXCbx6hE/WbMApMJWUQBfWC47m6J9Iov8xS9zl
Thb3nJ1ZI+y2qbPmiGc6l02HXUmvbBmyJQc7yb/rwo5l89i0eTPLlolnuNcF
X/fDD+XlHJJKfJgHW1cvZv32daxeuYSFH+8mKEeBeQLtOiu3s2Ii8OXzdh3o
FDJksipaDEPnEkjzdg3StWodHV0m6uVD8U7R8U16NblZaWRmC17X2klvZyuV
MqEvNc2YLc5le2hSFJAl3rnsfKXF/8HYbtHXqadQpFe3GDE1VFNQrkApl6Oo
axvnX66vqw25SKds0GM0tFjKqJXWMZjbqSzIobxa3FOtxvhg/vfv07VhMrUO
x/WWuFLE5Rop3jwiw8BAH+31CnLT0yivqSQvO4+y2kZRZhNFedlCvgpkefnk
FtTSZjJSVynaoqoOU+8A/d3tVEn+tFKzyFPr6bUSOyu+JXxX83ZmQzPVxYVU
qxvEOz/kD7zPKPpjcTGVap2wJepRFBWJ/ivNWXcLe6SI3Ix0svLktHX1YNTr
KC6SoW3usPhZGOg2iPS5pKdlk1vTiHnseu3+LnTVxRRWaS0+aRvlIt9aOTVK
OfVtY7+VS75ti8jPK0GhqKJA9E+N6MsjPsCF/mqqKaaoWkO76LNNtSJeMTau
ps0o9F7VUFkGwRl7THpKhF4pKBP9Pb9A9HclepNZcLcaCrIyKJOXi/IKKFXW
0VgnOGthFU3tZlGn3vF1NveJOrYiKygf5wvPCiv+Wjxx3E68+4ZmDWUlRdRo
GumU9IPkl7CtnooyObqmdtqb6ygvFfFmI93C1lBVFJKVni14RJ2wDfrGrLfp
QF1RhkLdSLuhFVW5FK+nTcQ1Il5doxPX9VSUl4rxXDobvBdji4YSMUaXVJYK
3SijVK4VfbyDhsoyctJzyM3NISc3D1WjHn2DJGf1l8oxpPOaKCusFGVVIhfy
SH5T+oblq1RqaOkwj/te3SfZQOUlVAl9qFWWUVqtorndQJOq3BKXzsk0iTYp
LcwhIyubmnq95RyEkWbsa8N75SrO3owgv0KUWSudi94ryhS2zkh9zbRqhW7K
Enomp5Imyzntvehry4V+yhT1VAi5ui366OF0o4+sf0ye7Y01lFcpqBL2l1LT
QtfYdhgQOlTkXVKpokmvp1Z6HhrxPNr1KMX9Ck2TRaamqkpKylTCNupErxlb
bhfGtkbx7ItRST45zdJXrn5MLZLPykwys8Q7o2uns6MFlbKaMiGHsrYOvdGM
WVyrFfkq1XU01NVSWVkteGQbrU1qy/uvbmoVz7PWElepivA5ew6H3ecIj4kh
MtibM+e8CU9VDPtSGaCrXUt1qXg/SisoKy2hQl6DTlPzUF6alg462ptQiLSF
RQUUibRF4j1ubO9kIpdjWbmdFROBr7Lf7utiQPKh94U8Rthw/f1fPo8tnYU3
MEDf13UuOSjdM7HnDdyXd3BsvSSfgBa++vD5WWNl6e+3Ose04tvFd7ff7nMw
3B8kP3n39cDoeULStYEv3ms2ONSvHjr78qFiBkd0zcNpx5Q9Ud9UHtHfB4fr
8+hyHq7zF+tHK6z4+njiuN03gaXvD3xp3//q2Q33zcEHddCg5VzbIT31DeSQ
7JL+iZNzRNaBh8/B7Wopx2nxIi7ejKZO8t3/yDJH9czg51z74nSfl92Q/dU/
YfX8auU+1A7D/w8MfH07qr+9EreTe1m5dgcet/zxuXYFb79oSrTG8Tp8cHgM
GfeefIl8XyHtN4GV21kxEfg2uJ0VVljxePFEcTsrrLDiseNvgttZ8RAMDUrS
7kWSlF5Ag6FrQueI/tYx2NeFVlFKSmIc8Ukp5OSXoGpoxdz35DaildtZMRGw
cjsrrPj+w8rtrLDihw0rt/vbRF9PN2ZzFyZTl2WtptW97teDdBZrj6X9TJgt
/om/a4m+GFZuZ8VEwMrtrLDi+w8rt7PCih82nhxu14+ptZ7K2iYMX2FPqbT/
tUVdjaaxle4x+y96OttRVWlplfaJfUWZLPvyqitpbO3g627l+GtgqUOdtO9r
fB0ejT7aGtQ0tBjoeZyCPhK9NCqqaWkz8gRPaf0gYOV2VkwErNzOCiu+/7By
Oyus+GHjyeF2nZQlXGHxZk9Syhvp/9y7R9HfqSH02DL2uN1B3jxqizRVp+Cw
5Chh6QpMX0J/Bro7MHT10FqTh+PCebiHpNLc9fg4k+Q3MvTMMvZeG1+HR6OV
+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
Pn4a35hiGho0hB7/iPfXHSMsV4b/hf0sX7qIfY47sJs5neUHr3DH+xAbXdy4
4XOZ7Y5e5MgbxpzD1kOe115WLF2L+01fdgr+uNnpCjGJ0RxbvIij7qEolAV4
7lrJB7bzsLffJzhMJe1dwzN/5kbizy5n7rwDhKRp6OwboKkwlO0rPhQ8yR7b
w24kVFcR7LSIlUtWcfjARt6ZNgfHm3FkBnmw6qOP+GTvAZbYz+CVd7cRkFRC
+PVjfLR0Abb2djhfC6O8JB3HpXNY53AFWV37A2fImUm8sJMr3h7ccnPg1J00
VG2j1q8u7SLLPvqAXcePsfu9ufz/7J13eFzFuf/z532em5vk5ndz0yC5yU1y
A4QACQmhhQAmFGPAFGODwWCKe+8V917kJssqliVZsqolWb333tuu2mrVy0or
abUrbdfnN2clW3IjEBRbhvP18z46Pntm5p05533n/c6cMzNzxRlyVRV4fLqY
j+afIktZgvvocaZCTYL//qvKVlTmcXTO66w/4k1mYQo7RNvudAmnRVOH12i6
xLQYlnw4m+3nIlGrRVvtXMCGwyc563aUk+diqG+oJ+GYaKOVhwjLLiLy8AeO
45iKGoK3bBBcsQjNkPyW3ETg1nC7YXqr4nBaN5fHxTP17rszeenpR3hw2lwO
n4+j1zRC3Ib1Fayb9iDTZs1i1hWZJq7bTNV4sx82ELT4p/z7T1ZQbZTSmkk9
NIf777+ffXFqTAYtsZv/5uB633rNHWlUxWYe2U/+xjLk+DbPPqBk21v3i3zm
kdJhQqdRsv6RbznymeFR8ZXb6OsMidtJbemYk5VFFlnuSPHx8aG4uNjBxyYq
T2nMR+J2PT09t71+ssgiy+eLxO1qampuWXlhYWFkZ2ej1+uv+c2GQdsmOEUt
rZ29jnUbqyrEcZeOIUM/6qoyKqsU1Nao0eoGMZuG6GxQUK5soFsnrfPYRHl+
rvh/BUVFxVTUNtPZUktldR3VNbXUN2kwGM3YxpU3oGmiqlxJU0sz1ZUVKOob
aW9vp76igrrGDnH9ID3NCopzMsnJU9LZN7I/gCO91Uh3k4KK0jq6ekfOW406
1IoScjJzyatpod9opLddQWmR4Kc1Sse6laq2bgb6ulGWF1NULnQtLqGgsIaO
XgO6nlYqivPIysmlXlxnGOilQVGJUtWKzmhyvMM41l5WehoV1NdLItpJ04/R
Yr3yu0nXSVVZMcraWupKiihVNtJr0NNRLdqsUk3vwAAdypFj7YAJfW/bdWU3
irLrmtrQ9nZTXyXapKmTQZOBzmqlI113dyeKqkrqWzXivGirJnFe3CNFda3g
gEIf0X6ONhL3rKu3jw51leO4W5TdItq7uVPLkMV2223g6yBRUVETwu2CgoIc
9nljGAmddw93/eC7/HaBByUlmRx8736+9W/f5ae/vIdQ1cictqkuiLt//FN+
9+CDPPDAAyPy+/v45e/mUjaO21l7c3njB9/i+Z2ZjLxNPIy+S+UYb1apyojz
d+K1u77r4GQ/XHjRMW/XXRnv0PHGEk+XNExtN9FRVyLyaUBVksK5vUu569sj
83hbklq/cht9nbFx40ZHf9DY2CiLLLLcoXLmzBkSEhJEbFA/YXlKcwDbt2+n
vLz8ttdPFllk+Xw5ePAgGRkZt6w8aTxJikOrq6u/ZFo1qnoVDWr1Ta9RNzQ4
flerxbF0nXQszqlUDSP/v1ne0nWNI2kupx27Xk3D5Xy/iJ7qBsf149OP6dM4
dr5h7Dr1tXWQzn+BsqS0DQ2iTRrUN67flXqMtMU/zO9LlH0zaZDev2sYqfPn
t5P6c++lLF9OpPm2ieB2ISEh5Obm3uRXPT7Tf8Fdd/2cP+5JERzKQPy2Z0fm
1YScKe93XNWbvYdfv76TgJBAx7tBfn7+BAr9/IPS6bvyTuYwzTEb+e6//Qjv
St11JSkvzOee/72LH37vB/z81/ewLaYJKWl9yHKmT59+E1lBlXF8LoP4zbyX
X/7kp3z/B3fxm3vnkd0tr5f5edi2bRu+vr6O50kWWWS5M2Xnzp2cPn1a+F6/
CcvzwoULrFmzBi8vr9teP1lkkeXzRRqnlcZ4blV5+/bt48SJE46Y73bXXRZZ
vi4ijdFI72V+VQQGBn7OvJ0NVbIvx4+fJaJERW1+FMse+zHf+6+f8Mvf3kek
eoRYVZ+byq/nu5GaFsfFixeJioonPScHdecAV6idrY9z7/2I7z26hSbT9fvZ
lzvP4ie/uo+35m3kbEQ6HaNrCekac0lKSrqJFNB31Su+Blxe+j6/+t1LLN14
nKjMhmu+95NxLTZs2OAYD5LeX5BFFlnuTHF1dSU5OZnm5uYJy1PyCzt27HCM
y9/u+skiiyyfLwcOHHCM09+q8qQx4djYWMf80O2uuyyyfF1E4mQTwe0knvh5
a6lYDd1UpWYQ5efE3Bef4y/3P8PcZTvxjkqlSy/NiQ1T5PQkv3zsZcf3eDPe
fJWn//Q7HnjwQfadT6F/dC8DS1syL3z/33j3dAnXrlw5bBsi59AclrjEoGxs
p39obK6trTDUMRbl7u5+jZwR58NoGzctZzF0cPytV3FNKKG5XYtRXrfnH+Km
a6kMm+nt6KBdSEdXF11d4q/0/3YNg0YDnU2VNHYbsE90Ew+baK2qpHfIeues
qTtspb+ricqGHsxfokHsRi1VlT1Y5OdUxlfErV5LZdhiQNPR6fAJXZJ/6Oyk
U+qbunUY9X00KBT06I0T7h+MWjWqHv2ktBnTQA9KRRM645fxXWbalUq0BtPE
+1IZ3yhMnrVURNw42O/Ym7td+Igu6W+7FDu0oenT0dfdRk2jRtiJ5Tb38Tb0
2vYvrYvd3I+qrocBwy1+J8xmEjFZnePbNqNlYiYthm1GtCLPpgnM88aw0KWq
o6dPf806MtI+aC10dnfSM/jV1rSX9insE/nU1tSgamnHYP4Ha7vYLQx0t9La
2ubw2ZMFt2QtFSnOzolii+Bp0vuSb32wgE07juDhE0hYTDSJOU3COizkeW5h
v1ecI7YoyY9i/XPfc7yz+eNf3ktMqzS3Z6PGdzHf/vdHCFMbryvG0JTEpref
Y8YqZ2r1V9+P2rD1vPzyy0ybNu0aeVmcX4/iSnaijMiTzHz0Oba6ZcjzdV8Q
N+V2pib8j7ng5X+Bc26H2e3igZ94VtyOu5BVU473Z8+w2KuQIfMEN7StA9e5
H5Cm7rvOB0xa2PrJ8t3Go59coH3wi/cRppZ4Pvwgml7D7e7jZNzpuNXcztSW
I/yCN36+PniIa864eXHBx5PjngnUlyWx+rlnOJ+lYnCCjbg5fjc7osvQfsU4
4F+B9pJIZj67nlSVli+8Pau9C69FC0hStmGSl5mT8RUwebidneasaHz9vPHy
PMuhA7s47nKWc56n8IxMI+niKWavOkeGsuv27j9s11MW7cybK86S9iV0MXfm
8tnGaEqqeriVYaZ9sIMElw9ZL+3R3nmDPQW/FCzo9EZMuiZiRZ5rJyTPz4G9
h4vbNhKTWYZOOEe7aQDdkBmLfZj2TGcCIgKIr+37KgXQW11MtNcZVi9fypaj
rpS0fv6+6naTloKg/ezZt584Rc9XKHticUu4nVXNzvt/yw9Hv6/74V0/59f/
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
hDnHQkjLSebE7NfZeiYbdUk87055lGenrcHTbZ+oy3IyRV30TYnsWe9BanY6
R2e/y6GICnSmXs6+PZckEa8oEg7z18ddULXpqE04xFNPuKBs6yF29fNX6VyR
6svbU2aTqNJgNHbivXkN5yKTyYz15u3nV3CxsEbU4SOm/OlZ1h13x/WzaTy2
6AINPUPyHL6MqzB5uN0wNpvdMbcypArniYffwjWmFOlzG7t9mGGTko0vz2LV
pv0c2TyTKStOk13XRfUld46eCyTkwilenTYbz/hS+kfd2bC5m9Ajhwm8FEes
1xIWrPOkuLKWkCO78QgIJyXen/kz1+EZnUti8BpmPPd3luw8ivOud3hh6Rmy
arqoiz3PUa9LJKYEsXjhZiIFF9TWhQj9BLdLrCL91Ee8fiSYgpZ20p3F8YkQ
ilTF7N18jItRCXgs20VyThFpfiuY9swekvPa0bdlcHjxCYLDUojzWcrbG/aT
VJhHwPL3eGnKS+w+5sTW2dPZ4JlAQ+/leYtBKuNO886019i8xwmvo2t5bcor
rN1+nLMnPmD6Qicyla3kn1vHYd9gIv228/oyD7KV3VSHrODVfV5EJEexeuUB
vC/l0KlV43fkOL6BofgceoupSw+TVprB7k3j9M6r5crnTiYNcQef5vcLNnI2
o5Yy/1U8+/ILbNi9g/dmTmOVVzwNmmb8r8kzvUZzJa42tZew6uNX2OUfT3Vp
LB+/8QJOoVl0dRaze6UnkSEB4n68yNPPv8gr0zfg4+nMR29+QlBWJd0dVRz+
60O8vvQgSSVFuC9+hwXLdnA+o4I81z189Nwz4v5u4sC6xazbdoSkyiqCnNw5
tt+flLDDrJjzdzYd86HVcFkbM5qGHJbP+Zg3Zm8muayCqMBAPJzPcsFjA/NW
L+Wo0C05LPiqc04RVTTmeLL18N5vHrf7ArD3F7Pyybv5yY/+m5WuQTgv+xsP
/O+P+OnPXmKvbwlDlnaOPvmffG/G2WvWtLwmH5v1mnnjfwbCp1itcuz7JXBT
bjcOpVdxuxGUuUzjgRXuKOrVBG/+K785nEmXIoB7fj0ft/OBnNn6Gr965QBl
LSq2PfQfrPAUcVRhHYVeb3DPzL34+vuy7bXfsNIrz7Hn5WUMalVseWo6yR16
aoI/5aHpOwiKjiAwoc7xXsJlWPStbHfkm0tzSwWr/jiD1LY6djzwFMez1fTp
+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
1jWTF321zu3aNo6+NsvRPjp1JH+87zV8kpVoRP3id0zhg/M5tDYn8tbzR6hU
C99Q6s7d9++jRNVDa1U5bf1Gmd/JcGDScbthG7rqAB5/aBqnLuXSaxlZm8TS
V8iKmSdIy2ygv+oCj085IPhZMW7z32HFHlcSS5SU5iaSVd2Kzjg2b/fqa7PZ
73mJytpK0mPShd2FMvW593DyS6e5S0v68dks9gijtDaNxe+fICVbRV+VKH/K
fsIT8zjxwevM232GlLJqyrISyK9vo71clP+sKD+1CUXIcl7/zIWYknoSDkzl
xQ3OZCqUZCen4XrmOB88LuoRnIOq0HckTVoTlRdFmkW7iRRcrKeriFUvzXa8
J5ntNY/X9pwnU9VNpd/IcbZadyUOsQyUsHKO0DFLxEX9xayYc5LkzHr00vHM
wySm5eGxYY7gHe7EBO7hDy9uwDdFSbHfIl77eAGL5i3mw/ePEZFVh6YxkWkz
PmSvexiVNQqyYpKoa1CSnjRe7zw0Q2PxQl3IMlHXU0SXqCnx+uQ6XdNyL/HK
jLlX5VnfrmX81tTWAQU73prDrJf34uN9liVvvcWry0+Q2dCN2dKP7+zH2CPu
R0O/BZuI1zznLyE4pVA8B4OEzn+G7Se8KG3uptT7U9bv3cax1EYa013YsG8b
TilqGtNOO46PxeXgvXMTyz5cymm3o5zz86OoXsvYa1zDWIeaOb12K1vWulDb
VsqeXRuZu/YI2WWVlGRlU5wezqbtV58rE8+BIsVFlP0ZTmnNk8aPTi5uJ+NO
xT/idkNdKkK2Ps1vXt1BllIzsvalUUPUZ8/wyBp/FM0NRGx52nFc39nAvpUz
eHfecjZtWofz2VjU6gLWPPpb1nim022yiZjnEov+Pp2FK9exYbUTAcI/jp+3
M7TmM+eZ5ziTUS3ip82s9YwmJ9aNVz7cT12/8Qq3G+osZ6vId3NwLqq6XFY9
/RzOiaXkHt7E3I9WEpoYT6DTXnYHVmIYN9hkH1Cxd9lbvLdoJZs2r8bdNx1t
n5r9a9/hkzW+JCSEc2jrepLru1Fne/D0I+vIUDSiiDnEbx9ZSnp1B0Uea/nL
W5+wdvMm9jmfp1LTS2X4Hn7753Xidy3NCTt49O3FHPW+wIHZv+bh+a4oGoo4
svoU6XnJ7H97NhGKNsovp6nT0lsbzsL3ZnM4KJaEMGfWb/FFpSq8QR0VDHbk
sn7dUVT/gv3DZNyZuD3czk63Ko8tUx5izekI6qWxF/E8DrWXsfXvf2SjZwzF
gvdsf0nEFtHFtCkjWP3a2yxcupr1q4/iJ57l6hx/Xn36fUJSqzBazChDdvH2
O5+wYu1GVhzzIEPde2WNFPtQB5e2TuWva7woaeskfP96QuISiXJdxRL/Inou
7zdla+fU3D+zeM1evE6u5oEnZuCZWuNYs2gEFip8P+OZdz5lxYaN7D0lYoz2
HsEbd7Lw01UEREURdOIg+/xLaGkQcYKoy2afRJQ1eWycOo0TkYW0KsJZ8eLb
LFm+ng0rjhOU1UR3Yz4LnpvGyahi+jWFLHvkA1avOoXztjf43aNvEJRXTvCe
dVfp3Czser7I81R8Mbq+Ro5v/ZhP13iK/j0cpx2biFe00JDrw8tPbyAuv5qq
hOM8/NRyYoqrhV/eSnR5O0PyS9oymITczjpATYorLz79Ars9ImjqG1k7u6si
nE/e3IK/sCNFqgcvv7YRr+hySiOOM/+jeSxasY6VRwTHqmpBP2qzdkMrnvuX
89HCRazZsBpnj0uoGms567SGRaJfDQgO5fTBnUTkVVBbGMoHb2zhQmQ+Faln
Rf6rRf4lFAUdYcbcT5m/eh17jrmTVaemKsmNqa9sEL9Xoco4w+yFy9h83I1D
i/7G3z/ZTlROJmcPeBEdE8mpZcsJFByxMM51JE1sFR31Kexeu5jdbr5cCj3L
nr3elFRVk+L8Ea+tOU5UURWJJz5wHCcoNaP73w6jqY3hk3fX4x2RRV1ZJJ/M
2IjnxSyU4vjjGZ/iERbNyeUvs3zZes44beBvL8zi0IVogg+/z6yNx7kYdZ6l
L3zAwm1eZFcrOXNgOR/OW8Dq9Ws5fjqIGlUxXofG9A5IKKN3HDFrzzzNuwuE
3ucjCN7/7nW6xgv+43Zo5VV5Vrf1XbO3i/TNyXJWrg+koqGLyK0L2HAugVqt
CWNPDU7vvcjqfV5UdA6g76pky4dzRB3i6BgYINNpEQsXrhdcL4ew/e+zaOUq
Dl4qpCD8CMvXrmJfWB65oQccx/v9wzm4fT0vTJku9FnE8uU7OR+aTfuVRfKl
tfBK2b9qKYtX7SOvXnDz0NMsnj9HxJmrOXTUVcRdJcRcdL76XG4ZeWGHRdkr
OBBVJZ61yeFHZW4nYyLwj7idua9N+DJvznlGoWzpd3wLjamX8nhv4Q9FjNPT
QWncyHGX0Y6mJpNzHi6cPuNGoYjLDN31RHgLH5OtRCeN29kNIj7xwt3FmTMe
ybQZrFfxE1N3Ld7e0t437aIPiMErKpPCvAySC9QYx3FAaQ/jOJFvYmk97a3V
XBJpUspbMPY2Eul1lsTMDFJis+i4Jn8pHu1Ujuro5kFl2wA2uxSj5uLlEUdm
RjKJufUiXrI6rvP2ihb17qKxIkMch6IU1w9pVZz3dMdZ1DGyoFHEnkM0laTg
dU60UZte6FaLl7sbgfEppAh/f1b4oRZtOykifUFxPmmxuXQNGmi8nKZDL9rV
QKVo08CEDDJTEylr6hdt13DDOpr7avA8G0r7kLwvnowR3C5u199WTbSvD1EZ
pXTpzQ5bM3WriLrgS2xOGXU1lST4nie5RNivaQBlih/nzgjbd0+gUaunvaYA
v/Pe5ClbHWuOW3QtxPl54eLsint6Ff3j9v0YNmspjvHDJyrPsUZnddIFUvJy
yM9MpLxJ4oBj3E2ddwFvzyASEyPx8jxHVnX7Vd/rmvvVBJw/J2zYlXBh74MW
20jZF7xJSE9z+A5pTmxQ20SSqEtioZLWlhqi/ERdihsED9WhiPXD0+UMbh7p
tPSbGOpR4S9+Ty1rEr8PUO7vi6drODERnpz19KCgvo2qeL+rdB7Q1I2kqZDS
WNCqC/E7F0+atHZebi0DJovwqblc8I2hQt1OY2W2aK9wKppayfI5T5E0jz9Z
Bpxl3FZMOm5nG6RFkUdwgC/JORX0GEb2NdKqSwgLjqNQ0UiTooDQIHGs7GCg
t5X08EDcT7villBE64Bx3DelI+ku+p/DxdWNHEWTY6ymr6WcsIBEEuOTRBkK
NAND9KhLR/NXo3bkHyHyb6Nf2HLkRX+R3pWQtHK0BuF/qvO5GBDjKF/XrSYi
xJ8LETEkXPLFNzSJqsZmcsLjyc3MJFPwuqauHpoVo2lqpPVqDahyLnEpPpHk
lCRK6tox6Puoyw4nMDoDRVMLVRmhjuPaTv3ouwPDI3oHR5JbUUezStI3iuyy
OhrrSwkNFjF5ZR01+eEE+PgTGxuJr48PKYWlFKRcJEDkVdPcSOGlUPzCUlEK
7qS53DYurqSVN2AY1FIYkTCmt7hm/NK6RuGrIkIDicoqJD8x5HpdNQY0jaVX
53mDDTgH1AVUNHc41rHSVAme2qZxjDWZ+1tIDQ8mMrmQdt0QQ72i7cOCSRB+
tH/IiKY6h9CAcAoU1RQmhhJxKUbUuYGGiizBbWLIqKinvjzDcRx1yYftO9fy
wcqdHHU6yo7VK9nr7EtR1+W1aewMdDeRHn+J8LgUGjT99GsaSY8NErq7EJmS
61hzwdB99bl2bR8toryIS1FkKdomzRiZzO1kTAS+yPd2XxbS3icW6+d96W/H
KuIY6/Ub2FxzmR27zSJiTOvIXlhfWIGR/aDsn5PGoeM1k17SnjRGs+WLlWUb
qePNrrWL+o14QvtY/yTt/SLi5c+rt2MvLBGr/SMVbDZ5JQUZY7h939vdAPaR
Z94u/ZXWxRMPs33cnkmS7duu2Z/o6vRWx3va/8gOpTxtVpO49kZ2OFb28Ojf
62CzOvZhuuq3YTsmo/lzfcf4MqzSnk43u1bkZbWO7D0luRrpss/XeTTZF/RD
I2uSTo54RMbtx6Tjdv8MhkUf6dgn7Sb9quh3rXb7VeO1wzaLY684+7V7yN04
A8delTfLf9hmc4z1Dl/5h8OOpT3bRvaRuzEkv2u22Cf4PZoRv/m5PmwcHG1j
HecTvoDe/wjX5XkDHce307X7zk0EWvMC2b1uJZsO+pOQlECQrzv+scnU6T6/
r5P22rNec69vdG6yQeZ2MiYC/wpuJ0OGjFuLScXtZMiQccvxteB2MmRcA11L
FfFBF/D0DCQiOpb41ByUTRrMk5eefSXI3E7GREDmdjJk3PmQuZ0MGd9syNxO
xtcTw1hMg/R1a+jSaDEYv97fosjcTsZEQOZ2MmTc+ZC5nQwZ32xMOm43bMWg
66e7tZWOLg3NrTqMxpuv7TxsHaSzY+AG19gxGfpo1/QzZP4Sa0PbLQxoO+jR
GbDI36TKuEMgczsZEwGZ28mQcedD5nYyZHyzMdm4nXVATVZiNL4H9nLExYOt
u5OpbdBxs6/iLNoK3E7niGv6r7nGiLoogu0noyht6rtp+mthN2rIDNyDe1QG
bf2mL14xGTJuI2RuJ2MiIHM7GTLufMjcToaMbzYmE7cbtttoy3LhlNd5fF2P
s+/wSbbvjUfVJLidY40hG3abFbPJjNU2staHtbeK8+dyaZCuEf+kdcUkH2Sx
mWgu9uOVmceIL2xh0DyWRoK0LprRaBxdF2n0nE2c03cQdfAlZu3zorRNf8va
RYaMrwKZ28mYCMjcToaMOx8yt5Mh45uNycTtrINaMk7OZatHAHkqNWV5maQm
l9PTq2ewvxllZRUNjfVUlhRS2dSFwWxhsLuOgtxqevoGGeptRlVbTXVVOaou
HQZtIUvnHCMyoZDyUpGmucuxB4LVZKCztRFlRTnlSjV9epPjXHtzAzW1Ci7t
e4Y39pyluEXmdjLuDMjcTsZEQOZ2MmTc+ZC5nQwZ32xMJm5n0qoJ2z2LlYdP
EVdcS1HEAZZ96k5BeSOKjOOsmT+f/S6eeDqtZPHhi5Q1dVCVcGTkmsp2Snx3
4hcaSlzAGcLyq+nqrWTjmwvYdcCFM4dWsPBoCBUtfbTkRuMfHkPERS+WLfuM
qPw6GsS5s75hJKQn4vTBw0zb5E5Jq8ztZNwZkLmdjImAzO1kyLjzIXM7GTK+
2ZhM3M421EeW80L2+IRR2NhBdcw2Hr5nO1HJdahKzvDGw+9wwCWM9MD1PPTs
QWJy1dQm7Bi5JrWeqLXTWL1jP76exwmV9iTvqWDj68s44RpCkt8aHpyyj5g8
JUHLPmLetuOc8z7OM09O4fDFeHwWzWbnqWBKVSrCt7zJa5+dp0iet5Nxh0Dm
djImAjK3kyHjzofM7WTI+GZjMnE7CTXn1+ESl0vjgBWzKpQn/3KMmLRWbOZK
1sxyJSuvGZM4/9fR84Oj10SnqSm96MKOFZ+wfOGHnIjIoaOzlI3vu5JTIKUJ
EWmOCJ6Yy/ZnX2HtYW+S83Px83IjoSCNVY/8kdMBSXQZ7aiCljLjYAAFzXrs
Nptjz2p5xUwZkxkyt5MxEZC5nQwZdz5kbidDxjcbk4nb2a0mcpw+4WBQAjU9
Q+iq/Hn82YNcSmtiUJvHkvdPkpLdQL8igMenHOBSqpre0WvC06opSUsh7vxp
Di5/hRlHL1KkTGflzJOkZTWgU/g70oQnF+M6bxYr9rqRXFZDeV4SOYpCtj/3
NzYc9KZI1Uamy/u8vMmVzPoeuuprae/R8WW2UZAh41ZD5nYyJgIyt5Mh486H
zO1kyPhmYzJxO2OPCq9lM1i+353U6mYUiWd4cdp6vOIqqS8MYc7rm7kQmU9F
qgcvvboKr+hCyuJHr4kt4NKpPYSEhRHpuZW15xNJTw7g4zc24x9ZiMKRZqNI
U07ppWN8OvdTFq1Yx4rDp4murCfDeS9zP17C9lNnWPPJSzw5fTOX8quJOXaE
yMxKtMYvuouCDBm3HjK3kzERkLmdDBl3PmRuJ0PGNxuTiduZ+1vJDA0iND4T
ZWsXjRW5BF+IpqC6nZaaQkIDYyioaqBBkU9IwCUKFA2oyi9f00pVWhjp2ank
ZCZRUtdKU/XlNI00OdKIY0UHA72tpIb643rKhTPxhbQOGBnsVhMe5Mv50FDO
ennj5hZNubqV/NAQ8quaGLDI3E7G5MVEcbuAgACZ232DsX79ejo7O+nv75dF
FlnuUDl79qzDj3d3d09YnhqNhl27dtHY2Hjb6yeLLLJ8vhw5csQxvnOrygsM
DCQ5OZmOjo4Jz7uvrw9tjwZNt5be3r7Pv75PS7em5+rrerVotb2OcSkprz4p
T3HcO3p8u++VLLLcTC5evDgh3C44OJjs7OwJYAky7kRs2bKFqKgo4uLiZJFF
ljtU9u/fj7e3t2PMb6LylPKSxn5CpbXIJ0EdZZFFlpvL1q1b8fX1vWXlOTk5
4eHhQWRk5G2vuyyyfF3kxIkTjr73q0LidtK8uoxvJiRul5qa6hjzl0UWWe5M
kcbspXH0jIyMCcszLS2NTZs2kZCQcNvrJ4sssny+7NixwzEOc6vKc3Z2drwL
LscPssgyceLq6joh3E5+J/ObDWlc3mAwYLfbZZFFljtUpBirqKjI8Y3cROUp
fYcrfW/X09Nz2+sniyyyfL5I39vV1NTcsvKk7+2k2FGv19/2ussiy9dFpPfo
5LVUZHxV3HQtlWErhsvvAOt06HQjx319A5gtJnTaNnr0JoYnfLMYK71tbRgs
tn/NPjR2M/1drWgN5i+t+7DFQFubHpv9iya0MaTT0qrRY/2KDWUx6ulq7cVk
k3fnkXE9bvVaKsM2EwP9OodP0An/MCCkX/qWRT+ExTRId3sbeqNlwm3YYuhG
ozd+CRv8F8NuQdfdjlbo9OVVstLX3o7BZP3C7ST5gfY2LUNf0T9aTQY0bb0Y
LXZ5v6+vCSbTWio285DwCVLMoHP4h5HYoY+BQSOD+j46e3SOZ3gywzrYK2Kc
Qcy2ybH2ylfRxyp8srazD4PwyVdSC9+l13ai1RmwfKk87ZgM/XRodcJ//LP3
0MaApgv94Jf3m8M2EcP16UVcav5a+i55nUwZE4GbcjtLJ8nB4UTHxxMVGYTf
pUjiEuK5FBJBZUsdcWeXcyyuBtNErzll7yFs106KOwSH+hcYrn2wjeijy3FJ
rsNs/XIFmDvz2LUzB53R+gUL01Mef5aFB5Po+RLx243QVZvJkeUeKPtM/0QM
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
LLzDMT96kRsG7pRKYzi/eRu7dpgTH2nFls2nOXUzD0W5Lzs/OcqJ0/EU+V7n
23WrOXjLkzDrU+w4fQ77PBmRFqe5dOE8qZXZXN67i/XbjchRDOi5nR4/GzwI
tyuz/YBnDTIXcDvttReNM3TXykX+3w0zaCu24fE/nCAhq5iSzCgsXWJoVA1g
9/Lj3MhoRj05RZnVu7x10p+c4jJyImwISa+9Y48mFTYfrCOtc4jWAk+OHT3K
zn27OXwrjr4Fe5iMYP/yY6LcdlHuIBbvrCOluZj1jz2BR/n03gQD+UY89j9v
0ty/cD3ktO5ZdBZZ8dgvLiLvHdV+6Ubyvj+xxDybXmkQL/7qA5LLpWTbr+GT
a2m6fRLUVQ48/g83ae2q4Mt/epnQum4hZ4wmSY2I6wbJ8jDD0CuBWMeN/Pfn
bui+eVZV2fH4P95cyO3Gavjy8bv1VPT3iTrN2WpU5sRjv7pIfa/2mXk/t97+
nCRFOZv/+Q+cDk6npDQXByszMhr6KbObboOBmTbSfh8wod9T82eDn5LbuQhu
dyOufAG3c9NdqxbXhnBcLbiIvJNCh0/44LQ7ybml5EQ7EJ4mYWigkC2vm1PT
0s/kRAMHfvsCpzxjyS3KwcXOgjRZ14K9YavdPuctY+07MhWFbtc5IWKJA7u/
wS6lBtWsfxq762/KUkee+NdLlNQLOWKGTz/+Mq+aJIixnM+W9y2pbRXz/kgx
G1+3ELrM5N+1RNpUxr7fvvidOlW6CG6n1UlZyfZ/+wPOmXW6/QEGi27xxJPm
VMhrMfr0Oc76J1NdGcH7716msLmPiamhWZ6WbvIqexzTaR8YR9VWh7Sxl25J
KKbXHUhKi2TD8xuI0a6NnBTc7rO7uV2u0Qu8fTmClv5R0XASNjz5bzhl1FHo
uJbnDBOEDxxltM6TJ5+6TEmD1gbCL3/8DfG1HRTaf0+7MPcNkB4PLx5Gbqeu
n+Z2DrHzuN1IFae+tienQMGoPIjXXjIlKjmXi29/xDET0Q/zc/F2cyChRM7A
PJ8SvH8Pkekl9I5rKLZdywoDD5Iyw3G85URUbBi7VuzAN6mMTmkwS98xISpL
wcSEgquvvYKZqyt7//zBXeWX+O5lubEf2U2Dd+kuD97PWhN/CqQy3CwusWnH
bjZ/eYXYgqa5/T/GGzn72lvc8k2mSwzIoSp3XnlB1Ce9joBvXsXUO4qmwQkm
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
6ZM+PaJJy+2Ki4t1e28vVplqtVrH7Xp6en7y+umTPunTdyctt5PJZD+aPC23
y87OZmho6I6/aehVlBLsH052mZTG2mJdPrNESoOsmCB/LzIrpEhLsgnwiSK/
uk2UoaQsLAhnK1tsbUWytyejVE5XSy2h/p54BIfg7OqGvX0UZdJ6ihKD8Q5P
prptgE55EQHeTlhZ2ZBSWsegqoNw6wvsNI+kqlU1q5eqtZIQX3fCYmOJ83DD
PSyb0qJMAnyjya+UI6/KI9A3jPyqFrpb6+6WW9/NqO4sB1GeZoTarBC8HCyx
so2gsqmXttoigv0etKwW8oMDyatsZGBM85P3HX16eNJicTt/f389t/sZ49Sp
U7S2ttLd3a1P+qRPj2hycnIiPT2djo6ORSuzra2NK1euIJfLf/L66ZM+6dN3
J1NTU4qKin40edr3AgkJCbS0tCxSmUra2ztRKpV0iaRUzlzv6qSzs0t3XZfu
cW9XZ7vwfdO/6e5sJDPSH9/YPKRN7Qt+p+ya+Y2ySyTld+vzvXKVdLYLuffR
6fvKuq3L996rTz+rFBQUtCjcTluO9tmLHj9PnD9/nsjISGJjY/VJn/TpEU0G
Bga4urrqnvktVplav3DixAlCQkJ+8vrpkz7p03enc+fO4eXl9aPJMzMzw9HR
kYiIiJ+87gtSdDBOtk74BoYQHfMQ6KNP+vRfSNr374vB7QICAnRrpvX4eeLM
mTO697b5+fn6pE/69Igmc3Pz2ed0i1WmtqzTp0+TnJz8k9dPn/RJn747Xbp0
ifDw8B9NnnbtpI+PD5mZmT953fVJn/5WkoODg+4Z7V8L/fd2P2/cdy+VqQmG
+vvp16aBAQYGpvN9fYOMjY8y0NNKt2qUqR90A98JeltbGRqfXKR9gjWMDPbQ
0qViQig+ruqk8846aMboV7bQMzT2HXWbRNXTycDw+A9c/x8W96y/wNT4EK2t
KiY1j3Dlfmb4sfdSmZocZbB/QOcTBoR/GBSpv6+PPtUImkUdFBP0tbUxNDpx
lw8YH1LSpVIvaj8dV6toa+1hROtzpu4vWwfNOKreNroH1bq9zH9UCNmDiyL7
3nWcGB2iq7UX9bjmr/a9UxMjDI6ML3K/0ONOPDx7qYgZcky0uS5mGND5h+nY
oY/B4dFFHa/avtXVqUI9eudmk5MMdnWiGlbzU09jmnE1fR3tDAyNMPmIDoH7
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
A+I5bRrpIj0skPikRJLjs4XtqxlRdV533yaJ+7axOp/QwDiKBHdrlhUSHBBB
kbwTjapD1BEgnq1XbcRwA1k6ZeNEf+ZVUFOcNd3PWuPonPSn1Tf2yXMJjksk
JFb4xNwSGrs14h4x0lOXS7TfReHDAsgoamHUrKe9OIcIvxjyZd0YpXeIDSga
5cLHmMUzppYmhRzlJG8c7W8mIzZA2LYDkSl5dGuM1x1r7+mhJiuJuNgUKhsU
FKXFExuXQXPfyDdmM18GNm5nw1zgy8y3+6qw7h9mvDZWn/m75epvlluIm79I
zjVnYzRO7nd0syJjpok43rpPytfW6hqp1n2ZJuVfdWkTe1mZZ471s5gm9fuK
kYJ1f5ap7OcpLe39Yt3Txvy1ZFj3HvrCNUW+ooxx6z5zRtPnnGuR1qy5Vq60
t8/Y+NffW+pGfS30tt5LfwnjL2+EOzff7sth3DLZt8L+Pu/CWX2DdX8Oo+mr
X4svvp9uXcZc4Fo9y71WMf+jo/hHCs6QHofrueNE1/aiG5M2lhP36thX1tPq
G01my9fiHda1TqV9R6W9OafWhrpWD8v07+OT/1/br9PXfLrhFmm/yrEZ+/dd
i8+zbWNvCXbHjrDxUztSFf2T+9HcsPGSrte+V7xOHyb2+TJb5wN82f616j69
n9nd9c7nruN2XxoT987Me+nmp07sYzpzr7YvC5O0x5qFL1z2+BZkTJW3TN7j
ksv73Eom9va7qSzr3nTma/Zds9qR1Ua/rn5SHdY9766p90ayPgdz1Z/W/X7N
1n3sZgVmk/seW/etu3nFk/8mZFhju5n1W/euM1/Tnhsdu9tg43Y2zAW+CW5n
gw023F7c7dzOhpujqzQGZ3sv/K9EEpcYT1xGubRX5d3FHO48TP2l2J86xdng
QgZGr/9m923HXy63s8EGG6Zg43Y2zAVs3M4GG/7yYeN2f8mwoBsZoq+riz6V
RtoH3IYbwKJDpRyU1t36C/28/o3Cxu1ssOEvHzZuZ8Nc4PO43bhZS0/36MT6
KdOwoB8ZpHvg2uNfD6bRYWl9fRtssOHr43ZzO7N+lN6eoYk4e84kfhsg/Ofo
ED0DI9fN27XBhlvB3cXtxhhR9jOqM8wYszeOQauhTzWC3nTr61ONjxkY1Ztm
zG39FmHczOhgP0PDWpsf+W8GG7ezYS7wedzO2FfE4UO5aK7Zp0ye7s3a06kM
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
9iarXcXExNwyt7O+e3nppZf49a9/bUvfwvTiiy/y4IMPSvnXXnuN3/zmN3dc
J1uyJVv6aunVV1+d9fdc2PHDDz/Mf/7nf/KrX/1K+vudd97ht7/97R1vqy3Z
ki1dn6ae49b0xhtv8Nhjj32j8qxxo9UfPPDAA9LfttjBlmzp1tNzzz0n8bJb
hXW+ndU2/+qv/sqWvoXpkUce4W/+5m+kvDWG+x//43/ccZ1syZZs6aul3//+
9/z93//99N9zYcfW+v76r/96+m+rr5gpw5ZsyZbunvSP//iP/O3f/q2Ut/Is
69/fpDxrHDpThi12sCVbuvVkfZ9qHR8zF9zuj3/8Iz/72c9s6VuYnn/+eX7x
i19Ieet7uF/+8pd3XCdbsiVb+mpp3rx5/PznP+enP/2p9Lc1b023Uuf999/P
vffeKz1rrH9bvwVY3//c6bbaki3Z0vVppr1bv+Nbv7t/k/KssYP1u8Bc+hxb
sqVve7J+b7fyslvFlStXpDHaVp5oS9++ZJ1v5+PjI+WjoqKkMfp3WidbsiVb
+mpp//790nw763h969+XL1++5Tqtc28/+ugj3NzcpL9jY2MJCAi44221JVuy
pevT2rVrsbe3l/LR0dHSOnnfpLyjR49K8+2s8/Wtf8+Fz7ElW/q2p7mab2fl
dnl5eTf9fXxsDLPZzNjU/1NLpY5bZh03j11dsXXMbEKv06HV6jCYxq6r0zJm
niwzWfaavVrHzEapvHVtfmt56x6LFmm96nHx28xys9PY2NyuHG0cGaCrS4P5
Or30GM3Xt+vLYq7qmQvs2bMHvV5/R3WwwQYbbg3WdzLWNfLmeg+EkydPMjQ0
NGd12mCDDd8MLl68SFNT022TZ+WPBQUFN9wDwQYbbPh6SEhIIDEx8Zbr+aL9
7UZ6WqmurkYul1Nd10iveiJ2GNMN0lg3eVz83qbUCdJmRDPQRV1lJcXFheTl
5pBTIqdDNcpVBjOGqrNJKlMtlVXQ1KGa+H1MlO/vEOXLpPKFBSKV1NDU0kRD
v/AflhHaFVPl6mhpbqZZpJamugkdOzS33B9XYabyylFWb4lEZbGgHbLqZW1T
Pvk5uRRW1tGvntrj5MvixvX0WPtn/M7saHTT/e3EtRzRWPdE0DCqMzGh3jhG
3SjDGo20//DNNB43a+np/vptMo0qUY4a+fziFnTDg3QPfBU5FvQjQzcsc6s6
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
FM2Z5cvxSqllZOp9lr6b2L1b+Ph4Iu1dtcIHrGS/T4bgWmqynHcSXyanIOYi
q5esZMPJNaw5F0mS73Y+WXRZ2HIjV3b8iB+ssiOuQsQlXcWz5HgmlZIf7XC1
rH0CPYJXTgy37ObSwbPEpSVzee8y/HIVKFsL2PLDHzB/vx/V7Q0Ebpuqu43G
tGC8IpJICHVn2cpPyRWxS/iutSxZtYng0CAcVi5jxYYT+F8J4MKKpZxPrEGt
aiZ87wY+WbWZ0w52rFoj2na5iO7G3Gk5Va3VOBz3JDUnB6/tp6jsHMI05eoM
3YRMt6+Vlqxg9vtFkZ6ZhMfOHfjEyxmZHktupjnbi+XLQ+kUfLgxy5OVIt8q
8kXOG8W5aaT62xNa2SXi1H4SvP2ITUoi0GEZq+1j6JzqF+H7m/ND2LJsESHF
7egM7bju2Em6iDGbs0Oukz8seGPQnrVs8RExvIhj03zciE3LIsFnC7vOpdE3
0EX8TWXZMBe4e7idRfp+bbFY0DVF8vjDb+MaX8HImHXslPARejm731rFYTtn
XE5tFvYYRk3XEJ1FCQRFxRMd5sOmzQeIL2lkdJLq6LurObV/M27xuTTUpHNw
5zr8UspRDdThdjKE1KR4DotjS1euZMUaOzJKSgiz28sulwSqq/M59tiveXPD
KdIVfbTkx8+SE5edR+yJfaxZuZbdq9bgEl1Ez/DEHCJ1fSJewXGkpEbiFlFK
W/8AMaseZ+F7G3C4eJYtG86QVS18zqCc4NOBxMSkEx9wkL2uAVQ01ZN6+jDr
DodSJjhJxJFdHHKOlL4JFQWcJC6nnOaKuGvqv9qXo80ZnHELIyomhM1b7Umt
qKUy8zw71q7mpKs3XvabWXc2jKoOzdXvWCY1Rf772XYpDXlPD/kivyMondLq
Yk7t2cTKtUfxcjvP1g1nJb1HhxT/P3vvHV/Vceb/80d+2Wxixym7ie1vnGQ3
m82uHfdug+MSd2PjiinGdJBoooki0ySqBJKQEEISqKHee6+o93qlq97rVddV
19X7N/eoC3DsAAav74fXvJh7dM7zTH3m+ZyZM4PbmcsEBMYQeH4pD72pR0ia
jBhvb4KDQ/Cw2s6Os66kpsdjqDejfHNSsbvgRnB4NM4GFqRmZeBzYgEPbdzL
xfgisnxNsfP2J9jTHF3TQHIFp4s5c4CtWluxcrjImV06WAaliXIWdinAHh83
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
JbObSENZHgcf+1/220ZRqxCyUsx55C21LOXUGDZY7s7/3H+EuLRKSsOO8P8e
PEx6eR3p4cJncDTjyLqX+dDyCrVFPjz2kijrwCSqqktJDIikuqufGWrpqw7h
8zcW8fFOczLVZ70ON3Dk8Qev0i9v6CTrgiiH46GUZrnxyHMfYifGvarqYmL9
46iWe/HIXF2dvdTLi2juHrzh/Qs1uAO53dgoPXIPXnzifSwC0+gcHt/3Y7gr
ix1LLIhPqqK7yI35rxkREJON1brP2X7qIvGFZRRmxJBS0kDXjO9sRroLOfTJ
Spa8exwHwck2ffIZH2w7J/wHBUPD3bh88QIn7fyo6h6WviMrctHiwxPOJFe3
4LP+FfQtLpNfW4HV2sWz9chrBY/YwIcGjiQJX2Tmu4bG7DiiIj2xNNZl/gfb
8E3Jxm7Zi5xyEH1ZocBp4za8Y7NIEbxm0ebjhGRW0qnIZcdbS3EITKdjsJeY
U+tZtfQjztpfwlT7Yxa/r8XluGLJf5wrPyCzgsksN1zRR2ePAZ5RMZx6ewO2
LrFU1SexeYUFsSmVdBWJsn3NkID4GoZnOJDlgjd9fERw1rxKYs4s5B09S2Gn
anFZ/oJIdyDlbW1cltKdSbLjOl5Yfwz3hEIqkm145pFDuDhc5I1PVnPKPgh5
RSmpYTGU1VWLfM8o34Fm0uKvcOGCGSueX4iFVxrJTpv46IglYTl52O39koMm
toR5neDJd77CLa6EbOcNUn0kVbZT5LpRiscluvPWe1ps1LMVvLaWIBMTzp+0
QtbeRoyVpeC29pQqSrh4xoFzFvF01CSyd/tp9pxMpKU0GoNDh9jwlQW2ou17
eAmfrHt4igeMdhRyXFeXjbpWFDWKMSLwDPrGBrjmt1AaZIG1pTERlb0z9vUc
It36K07u3kpwYSPlsZbsP3WEs3E11CRYSXFj/3CO6u9n9d6zpMvk5KekkldQ
Rs/3ldsJPhuw41Hm/foJ3v/oVXRd5QzP+NuVI8/zo3l/xrmwe/r7b9GvlYoC
TN56il/82ztczm2WLo92ZfD5r+fxh3cvT3zjNkz84efE8/dzwE/OwOTLSjF2
Dyo7yPA6hWlyC2pfviZMT1q7uS+ifvweVTsJ0bmiTTqxYVMkVzPDGRiqQv/1
T9hnaI6lpSXGh7X4r3+ZJ/L0MB8cCqdnfHM1GqOOc/+P/4sL2XP3ZRF/ywxi
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
YfZuXcGD9z7C+YxrpGsKY9QlWLNx40Y2OmaOr00ebePMmxPc7qcryFGKJLYk
8tL9P+adk8nX4IlKPFc/wm9+8xt++zcDav9pF+pqObdzNd835XbqM6Cul87B
gQFpbL7uulL1WUgjqtnn7qrU5yOp/uFZvCrp3Br12VPf4N7R0am0zrgq7PzI
DZ9VMFwXzFtvf4mtbxgJiaLP21pg4ZUrzWOOatZjanCbcfu+t7sGRJ+V7Lr6
f9X42Wjq+MQfRX8clN7fX7tHqiROMzaxjkL1T3etf6RnBtTnTU3c9430qdRn
G41+43PEx1Q9XDn9Os8fcKG4pVNaP3XNJ9VrVfr7v3GaB/oHr2/XpLOt1Gvg
psvzerZUvZf41efk3aD+Sblzzpyaq2tMpdKcI3OTcMdxu38G6vNyB0dmvMO9
6oaJf0htcOyb9JV/Ss/kfWMT504Oj9uwsQl7Jp1dN6F/IqihPkdN3b9mix2b
cR7u5P3XkT9XvWqir46p+DYf7oyNjk6cfTejvK5/N0NDo+P2ekba1OeaqG3I
19kYdX5H5p6xN5nnibSPqcb+se8mnck3Oj5efJMFUKpurliZsltrD+Z+EcRG
BODm4EBUUj49czatlM7hGxyacT7djUOlGj/r7x+2n38C3zW3G2zMwNwijat3
SxnHcGcVUZYWnDG0ETKdMDG3wCMun/bJlyCjnSR6zJ7P8s+sn+ILA4pSab7F
5MwZzohw1lz8PVEu7T8z2lmKx5y5MA8PjxnXPKj62o1qRkg49vw4j1tkQ2ef
khZZGJ/8Ub1/58/49dsWtIj+WO2/l3n/+hjuxb3XkDFKVaKblD7zUBmD17jj
m+FqOd+HebsfOka7SrEyO4ODuxeBIcEEB0ZRNnceUwMNbhPuKG6nwSwM9daR
6GnIcadwytr6NN+WaXBL8H+C22mgwTeBaoDq1FgcrKywdvchKDCQ2OQs6hTX
YyjfH3zX3E49F/KPaa+KfmUvvb1Kae3dt8f4e0s117i5x4aNUnh5A/f+9t/5
9ePbiY6PwEj7M/78b//Ob5/7hINhVYJ/t+G4+L+5++Vj1F+XuE28V73h9Nws
OTcODbf75hjtV9La1EB9Yyt9w//k+0INNLgF0HC7Oxcj/V00tyhobWmhq//G
1xBooMG1oOF2GvygMDbCgLJL+GRNtCi6Zn1H/X3Gd87tvucYVMixPGuI3s4T
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
N0iGiyPuvgGEeJ5n8UfvYmDpSJC/PWauMVwJusB7i02JyKwTnGdYqveptqTu
K+oxb856rLGJtqG2D1NryEbH+4b0e7LtiHY0WY+KfF88kvIFZ1LSUZxKqryW
9v5xuz5Xz+T6tBF1ekZnv+dUt+/xvjgq9d9ZslSjc54bk/qH2kZIbVg1fJXu
sdEJm6HOy2AbUSYf8Nkxe7JqOqfSPp7p0avbrdr3GO5FHnmGJxedIjirYRaf
UY10EXLgCNZWlzA98RVW/knUtfWM53WynMcm1qhN9ZtZhlhK/5BIv/r+kcEZ
bX5yDd/M58bG7cF0GifttUoqE8nXmTJ1qun8qOaOhZP9bmR83drYuN2UxoMJ
26wus9njsLqu+6jP8WP9usPCTxRtUeic8qkmfJBJOzrbLE7LnPRZx3XOrs+p
chX3drWUYL//OCYn3Km9/iujG8Z3xe166/Mx3fMZ8+bNY4mJP5nyZkTuaUpz
5qVfz+Ols1kTY2kvhXE2PPIv97Bc7wz+yUXkRzux/JN3+Puag1j6J1JaVUV+
ogcHvnyRB1/5hPCyHkmHslmO24HXhY4f89k+H7KykvA338+zQueDL+2nYuJ1
xmhvLW5b1Pf9SLovLSuNKH9Lju/8nMdefJ3lZ0LpvGriREVvdQLHv1jMK4tW
YmjpIfJQQYU8B7djm7hL6HjPWS6lP9tvF38Rv//1tS14hKZRr1TXrchXjA3P
ies//tMyTDziqO0dFjKTOf7lYl5btJyTFpMy0zA/ps1d//UiO1wLpDkOlbKe
WE9dHhHP/2TBeiz845DXd1AQbceST97lnQ0HMfOKp7C0AnlWHPrrX+Nf/r+/
4lqsoLNehuuOhfz0xz/ho53uJCSnk5mcRMi5Azxw373YF7beOm4nVUwmT/78
USLqeuhvL8V66TvouqfQ2ifafX89rge0sU9vFP624AHV5ZSUlCLLL6VnzhzQ
6GAvDdVlFJcW46n7e14+fYUeobNJlkqKXCH+3kN55FHu/tle0mUNlKbFcXnv
Ara5JlOtaCQvK5/MhAxa1PNvgnN01tdSKisgP69E+I59tNVVUljSIvr0AK01
Qo+ID4p+2ZFtxs9/b0J9ewtpbqt487g3xQ0d07ZstGvWddXoIJ21tZSJdMpk
RWJMmL2ec3igQ+iVUdFQR2FWKtnyKvqGhL3qbyMvKZMWtR95VfqELeuYLrvq
+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
hTth65dARWM9edEi7TGRjpHSMaq4qs3laThYBRMdFU5YUqkq1kBbURgOM+ru
lRWOt+9OESVpkePtrmyhrVlOc1Uypz8yEH5Y1xxnwEZprdSso2ugb4YsR1HK
inG2tcLJxxcLCwthQ0MoraslLcARW58kyqpKCHGcreOtFaIckc8/IoIQMR6t
/NMozIzHwc52vGwxb3S1fB6P49RZEk16XYdqH35TeijF8u6JdYV/rg1mZkJG
ZZUkeIWQGBtLXFiymHc09832inHsc9uPgJBgQsNTqFT9LuorFf6j8Au9QkR9
3k4ERKbRqJCT6+uFk2sMFc1f3bmIr4q+c9huREldYTJuznaEJWTTqhxQnXVv
q8zEwzWQ1LwqqgvTcJfSBY10tdcT4+mCqYERpiHp1Clm3xXXVZVKjpjbu4RN
kOfFUVrfrPqeMqCoI9rTDZ+wVOoVvQwPSHeRewhdiKGosUPMF4m4O3uSWtxA
V+eMelrlFCd4ctM2hLzKdtSuU0RRmYB7UDQxcTFEpZXQ0iWd/58oK7+Y7BgP
jXwd1ZnccrIWfWFCZFYZPQNDyIum61a01+Dj7ixsiBG3onJobW+hJF7U7RdD
XlU1ebHuqnSxmHOKErxwNBdznqkf+dViXPR3kOvjjrWhMaampsK/MCMmS7IP
02fcW6tzhTydCUnIpEUp3TGcI+oOFbgsjIikQpoV3bRUimeuTkSnS3tQ1L+t
jVCV4E1MfCTJ8RFkljWIshXkq3Q+SsyTCdxydZzON9ZHeaI3XkGhRESEkV4i
3UlaS4LnLYLjMiivKiLc3VXwkkdxtCmb9h7lyPmrqrnw+NaP0Q9Mp0k5c2Pf
ANVCzkViPu6fGF/KlirhV7qq9Ns7PIE6WRO5sSF4eQu517YyONhNZVIUIe4e
BIdFkJxRgLynH3lxKsmRvsQnxpKRWyDmp8m5cZjWqhSCbtkL/OPJ7VvO+IRE
cCcpUui0PzHZpZRmRavS8YW1NNYWEOrhgLOr+BPvOrgHkVXVwtD3AttlsFbg
mwde2kJsw/TexuaoS6o7Qt7aYUareheNdhGwdxk/f2A+xuE5wqfsoKNdRlV+
FBc3v8evXt2MbVqdKsabTOD5TY8K3PjLQ2R3SHvCRqmLvMiffvJjnl9mTX6t
DKVSei9x/L1Hj5HZ1Eprayv1FXn43TjIiude5cAlR+qUs2eNllRj/vbzB5j3
+gHCxViTyWTI6itJC7Hjk2WfYpPdQLusGs8jj6twqo3Ak6o+GxumW9ZIpN56
1f7RU96l9E8AzbZ0M/7+i3/jnbO+Yi5oFb5PuyizEF+D7cz/5XMcuBJJx5AY
V7JavE/PU5VrnFBFnyooQhe+uxfzH/f/nve0PMmvaqSpSUZtmfDNjY+ya+sp
MmuaaKpK4pO//pT/70/7SBBjTC7a29zcQIbw2Zc+/Uv04mpU9/z/b+me5+2+
DI2OCNvTf/e4P1IcMonf0dE5/Y/x0JhSfJEv0ibpXlrNWEVS/eOYbfQLx1K/
G0ntUN3xP6MpA+0lHHthIbfShX8u7Obd4yTPwd8cv4/Hu7oHs6PS+vHM+DOa
5Uxnn5Th55AUj2cy+UXlNNFnqjh1ExWOTmWW2jJwz3hPo2oVfbH+nbOUz63n
bnWPDPer8O8sOUrtkuJh9avFvJ4hn0HZHS5dOM+hczeIE1h/4Es4dDn2u1jx
8VXc/KKJiw3GykCLgOLm6fPjXyF9e+ft5iA1fVHFMVLFDNPUl5G7xvobj0M0
NrGX758Pmft59cx8d1wHxib4HdeNYaEbQxp6Mzo8I16f9J2wr+8L1jM3SbGN
+wbU6rlL3bNouBkfnat8dvwMZj45KO4RKH5WHXPRZBzHOW30PfgfnY51Ncto
fgkeVf09Xegs+/ll2zAVT1KUJcU6HL7b3WMTv49q/D7GyOBErK1JnfiO03cO
2/0zNCbFpRye8b1O44WJf6j67Z+OGfq59Uy+N6aKRyft4Rr9gsZodGSQ4eHZ
+qv2giqm7+fWrdLBmXo7JrDMeMxYqfwvopZS7Jkvyr8kzxExzgakWOtfcGOY
NHak+fVerxd5nWPrzgtY3AwhNiYUe3M9vNNLaR+YzZNq7M7gdXR0eCL23T38
DFXcvenvy+P+1eBdYtuOTc9PE3/3IlVsz5GRqfe/TvpGsV1fFit/9St2OOdq
rIsp82351a/exKuoc1aWrsoEzu1exVsf7uGs8U1u2p7j5IFN7NhxAsOQ8VgE
rXkhXDi+nXkPPsiDf1nOCe88VEcUleVcWv44Dz64mAOnLwj+gsV7O8bfm/c+
xy+YYWZmhr62ATfOnkTPNITqu9xRMKqsw/7cbl598C98uPsw586d4/yZ41y6
dpVrphko2gtxuHCC9fNF2Q/OY8dxb5qk6UfMSaEXhD4unieeP8j7nxqS1zpx
gLKvgZuXDvDWc6s5etZY+FW2nDtziE+2b+bCDR+qu0YYbs3D7MJp1i8YL3fr
0XNkT8Rn6CyL4sTWZTz43DL2iTnvzJmznD62l+vnz+KVWUdDTjBXz+7m2Ycf
4tfPruTIGWOMTUy5ePE8n657i4de2ETGZBzv/yV9Zdju/wHqqM3G+solApMK
6Rka/UJ29Qf6v5uGZGloXdLihmcmXYNzxbO/OzVlBGB6wwbXW34EhQUTFJNN
qxSz6Wvg8zuF7X6gb4ZG5PjduI6Wtj1Fsp7v3DqSiv5v4PF7Qt8LbPcDfS9J
nh+Ng6kdzs7eqjXyoOh06ju+Gh/2+0bfKLYbauKmoTElnZrrp0PyLAyNw+mc
01kZpbUsDXNjfbStb+F+Uw9jc3PSSmRTd/N0liVhLp5N/UWWTfw2QnWi+9Tz
nNxEzffM3XF3l/5CyC5r0ohXMxdJ+6dCzE3R19NDT/wZGpvjl1iiiks30lWJ
n0bZkeNrkCPtJM6os6xz2m8a6qwmUpSpp20tZHgTfWNT3GPzpr5DjHSW4a6R
35yS9sn8I8gKRduNDVX86Onpq9bXU0saVfd2dAi52FpbquW9Leq4jaXlxDOf
bBRDX87PvBv9gO2+OCkVrbS0ttLU1Doef+IHu/T9p5Fe2lra/8n+HqWvR4Gs
qZFmKdb1P78I9bn0A7b7f5FG6W5vVcUA/q7F0Z6m/xt4/H7QD9juB/ru0hj9
yi5aZE3IWhWqdcEfzMHc9I1iO+kk+9Ac9/VP7YO7B40MoOzpQansY44SvkEa
3zsj4Zi5mvLPltmn7KGnR/nP7Y8cGVLx09c3cI/9e18v3f283RDdbc1iTh78
/mMYqa0dzSikM2HfibYO09XcrIoV98XY+bLvf59IOjvbSXN7r2pfnDoNKdto
+67qr3S+tl2O4ivyeb9NbDc82Eu7XKE6//vViXqE7pYW+r7UWqmkCwrkHUq1
u23vTl8139J+zS6F0EUxFrv7vyu25BsiSZ875HQqv/657OvRt9k0NtJPe5uY
2yfPx46NCP+0m065nDYxJprlar99B+j7je1GULa30ds/OGUvhwZ6xXhrRy7v
oE0mR6n22w/0zdDIYB9tAqtJsWy+TtGPijHfI3zt3qHvznj7uuibxXY/0PeV
7obtRrtrCNA9gHl0+VdyZ8t3mcZ66/A3O4htQqVG/LNvjUZb8Dh1kvTGL7iH
6cu+/72iXvKj7NmrH03HoOb80hBniEF81Zc6I/d1k3Q3typ2ZW8DIcYnsI8q
pGfgf/+x6dvEdi1lyRgdcyRf1vPVnS8fbcX30mekVbYy8EUdtrEe8iOcOWwY
SWP3wOf6Gl8t32N0VWbg5erMyWNH8U6vUn1r+epoVHWG57uKF0e76wgxOY5l
eL7Atfc6U/e/p69F3+agobZcjPXjKKlQjJ8fHWgmLSIQ+wvn0Daz4vjZiKnf
vgv0vcZ2Yx1EmOiTkFlKj9Tpo0NUpMfh6WLG6VOW3Dh4htjJ376TNDp+DvRb
GMCjIyNfW71tFXfQuWhPfGEj/V/jQOiqSiQkNoSk2pk370/Q2Oj4ebjvavd/
CfoB2/1AXwXdFdspyjFd9whv34gTc/UgIxr7ycZU9mJ4ZETjjK/0TLprQ/2e
gRHVGdTxZ2OTZ1dnpFX1qfKqn9+dq47pcqfPwY5OnStm4s6GqbvqJsucZmji
bPzoVD1SelC01WzbQyw3TUQ5INnBcTsxMufZ+7GpcqfM5cS5/9Gpuu7B+2Tb
J9+f4EM9zWgTlps3EVujGMcBc8hmZELWqkcj6u9P3l8x29aNjU7K4y53A0y2
W30NelbbZryv1r9TbZu4c2VM/Z059iNOymHqXPPYXdp3t3JU/CpIdvyUn75i
SF2PZsyZ6sCTnAwoHo/JPtGOcRmM3ltvmUN3JuUwOnnXh+b/v8iYGJPu0q0v
plTeTZ+iCrstf+X9G2E0dw1M6POkzCb09EvMU98WtpPa15AfyMY/f0xwccv4
vdBjc8t0THWvzYhGP4/O7Oepgpux372DqCLhM4zcS6fVyhzpItn5CL9aqE9+
U9f4WFCzC5pXL83F9/S4n4um6prDgRgb7SVBTwsdPT22rFuKrn+Wah/ilD6M
Teu4us0au0tfa9gg8eNwfzOFAuf2DQ5Pt0fdjk29r6Z9k3ZmdAbP0n0JI8NT
Zc+oeMq2TpY7lXeWfKb5GOqswGbLX3hXO4gmRZ+G7fxn7emYuh25V7/NKmty
jE7ejTM68UxTNlN3I8zgc7K9Q80pnD0RQFZBmypvZ2kgtlbmaH26le0HT7Jq
oxvZhW0qbDcz77dB3zVsNzXfjI7f+TF5v83U3D394ni/qY+DSRsy+Wy0Da/z
JwlJzEUxOKo6S2Nx0ZTrl8+z8f0j7F6yAd+J32bl1eRqypaMjoxo6oTaGBpj
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
oLmdvDEbq13bMPGJpiA/FoMdW7HyS0Pe206M9S6OWrvgZm9BSGY9/aph+htT
2LV1E/sMzbA6voH1RxyIT43l0vatU9IoDjdlh9EV/K9fwco3la4+CV67dnA9
q54+3TtnHXSYFg8Tt+trLeLKiUMcFxwkLjuPCIfjfPH5JSIzmugbHKYpP4xj
+6y5bH0ZG89YaiQyGsSz4wfPcjUkgbzUYOE/j0twIlnJQRw7uBuX8Ew6e8e5
UU9dKqePGmBqbY2FjRcZFaP31DVmi/B7t7B8+QrsQtJo66jFftFqVr+/gKXL
lrF0wTw+P+dFbkY8p4/v55LQP1VlmRp5Lzr7k54Tj8XR/Zg5+eBrfpAvzjsQ
mZlDpOMxjT8uN5dg6+PsOuNAbG4RUc4npoSJzRP6ccHUPMuaem7zKrmQ/8zR
fZy5GkFjeyup7mfQt7TB0d6a4ORiOuXaunxyueqr8qbKfEWk1VjBjTPH2Lp8
JatWrWSlnh5OIekU3zzJMTNfCmq7desfHmI8KG432NNCXlI4rq6uGufoaI/T
9XByKls0Z8uqoeZ1nQ2lxAVfF2FcRsO6uBCelEeLVDmlH40MtGL67mM8+YIZ
EvFn2dWN/OyJJ/jZHw5TNzLEQJ0/vxUc7bHHPiBDozZG9+IN3cGN3h0i5+rC
Z3hCpLPOrUSEHyTT9F0N13vsQ2d07GV6HDhwgJ6eHo1NqHM6p3OPplPr3MzM
TM17mvuVZm9vL/r6+rS1tf3NcWVSKbI+FaoJz9T7q/s0fiXKu8UXnFLV3ys4
pRyVavSZUpTrrnF0Tue+5c7U1JSSkpIHlp+fnx+JiYl0d3d/pfiqvh5ksh4U
StVXl0OloEcmo1+h1HquEGnL+/o1+kfRFM22Lcdx8AknrzCftBueGFmFUFzT
rqWf7qf7qnmqyyLrVaBU3SHdCeW6uwwqYdcJnalUaO5yUI3Vlbqu/1Fl1rn7
44KDg+8Lt/Px8SE5OfkO/w5R7q/Pyrdn8KNn56Ont5TXfvfvPPbkDJbt1qdc
s9ZxhL7mPMxPbOH13/6KF+YtFuFW8PYff8SMt1eibxGHRKXN7nprrvPSY99j
k1e55ndfbQJH9PQ44hhPs6SWdK8do5zsu5+Q2SsCDCtorq2l9g6uRXOO2jDF
IaYibz280mpoqc7DZuUMTTrfW+LM9Lt9dThy5AgFBQWUlZXpnM7p3CPqrKys
uHHjBsXFxfctzaKiIk6cOEFWVtbXXj6d0zmdu7szMDAgOjr6geXn7Oys+XaX
n5//tZf9bq4k9RqrlnzAis07OX1enyO7D2DrE0FGfsk3Kk+d+2Y49Rqc+8Ht
rl+/rvmuPj16cZz3z/zTP/0TM07FChrXg//+WaO8Szjbgh7NvRupVitHn33n
T/gUS0W8AdItFvMdTbjXcSmesKZnZIAsu4/5zj/NJFqi/c15oKMIM4ODfPzc
d/j+P/0zj/9hP9VK8YeyjstnznDmDs4hpUkrnc7iIPT3reT33/0e//S/H+cv
p2PR7bibHqdOncLX1xd/f3+d0zmde0Sdeu2knZ2dRp/frzSvXbum+a6vXtvx
dZdP53RO5+7ujh07hpOT0wPLz9jYGBsbm0fCfrjm7YGLoz02tvZc9fLl2nW/
b2SeOvfoOxMTE8172r8X3t7ed+V2QTvm8/rrb7HgcjL9siZ8d7/Cd7/3ff75
8cdxKhTcbqCG/b8d5XqPPXWG1rGYynJPfjHGAWeZpt1elzkieNqJ1x/jV7Nd
kU7KTZ5rwXe//7954mfP8OIb77PcOXs0nqKCA8uWsewO7mBwpVY6Oebz+b7g
dL/8/XO89dESAop7/u56+qZC/d1O/e2ztbVV53RO5x5R5+DgQFxcHI2Njfct
zfr6es6ePat5l/h1l0/ndE7n7u7UXCs9Pf2B5efh4UFERITOftA5nbuPTv2u
JDw8/O+27b9sv11PUyHR4YkUFOcR5GjIB8/8lN/+aRbzFy4lrVUl6F82H/2v
MW73rhW3WZQsmY/GuN13tvuPfTcbobvYhd9+5/vsi6iblNMIPbmW/HrmfFYc
vkRoaiXKW38N91JZUEBBUZFmndBEp15PWNepmJDMMLmWq5g5bwnnLvuQ0yj/
u+vom4w7n6UywqBKhUp1a332mF81MLa/8duIEYYGlPQpBh7MOVOiLw8o+1AO
6O5p/PvxgNvuAePB3283EcMMDn75/XPDgwMizX76+pQMfeULTP8BEONMpR5n
g0MP5A499f50RV+f5jyyh6gWHkmo99UrHrb+9DXhYTpLRd3Hb9kM47aD8Isx
Nih+9ws9/I9us+FB9b7ewftkr4j5Y3Bcbs0Y7hd+rQu2tMPoMD1GxJhV9isZ
fED6T60jlErR/wYfjRNkHsxZKsMopU2kODlhsG8lbz37Am+8tYbTZu7EF9XQ
2tHHiLKYDT/53ii3m3EOyVifHmi5yUsabvcdfn3k5ii3G1GScP5tvvvUK6RJ
J9XzsIKS4BN8+oUb1VKV9n/KGsx372b3vn3sm+R2i+dW8Y23gw71NRNwdCkH
vXLoHtSNry/DHbndUA9lmdnk5OWRk5tFhrAb8/Lzyc7Io0U+8C09Z0lJY3EC
V8KK6H0AemJE2UlBvBs3iyRCD+r68vQY5RVfjgfbdg8aXye3GxnooKioEYVy
8M6BhgdoLCkgJTESb68k6qUPz72jIyop+XFexJU0oXgA53D2d9Zz08OdokYZ
umM/p4fadlaf1fZlXaSnpYJIr0QaZIqHpj99XXh4uN0IvS3VFBTkCp2US1Zm
GhlZOWRlZVBQWU91aQYBUXk0dPb/Q+2Inro0ksrr6Owb1Ny3NzT85e+f7owB
JNVZ+I3JPSCvJyqijJa2/gl9VDvMVy+b4Ihq3vM1vENXn1n4j863t72W+IBk
KpukqP7hRRxCJqkkPimTrIr2R+K8/AfC7YZlJFmc5t2x72/vrtzIwROnMTAy
wsBAHwOnDFRI8dzwF/73P3+f7zz2LjENMsEVeikLOMr/+s73+OfHn+ZYeMNo
cr0V7J7xHX6/JZDeSVkNdRexf+HrzJjxNvrRDdp/Kms5r6enOSdlOnc+ovZ2
0PYsOz5+aQaz3t1MomQSR9RhCu7I7XpLMDt2ESdhg1id3cji46Zc8VT7TxJU
JhU2ifoew+EJ55SOY3j41vml02Qo4qjDjwwPj+ovzaNx/2iYkdEzUIfHn6nD
qOOp0x6+fT6reDb2XHOv4m3/eDq3/lfLqo43rElz7PdY2OnKcTvtWzJoZBLj
wflznnjNlHq5SpPO8Jic05d1/H+tZ7flmlw1o/p8eEyWoZ4q7Lf8B3ON4pBr
3gVOqo8p8k2qs1vlmhRPu23uVoZb59NOmBOnkX9qmtpl0pJzYpp3KPfEuNPK
elueEQaVEgor28fvZBkrs9Z702nb7puFr4/bCTuuOohtW6woFlxlevta1L+s
FINdF7hgcIQF7xwlvLid/oFb7TRyu5+M3OpbY/7Rcav9fvdew07VQ2Pjf3h4
XIeov413V2O/7bd8eimc1h7VtONmIu4l3XFhR+971fTlsfR6qhJY/eSPuRhW
hEwxOCHO5HRGxvKaaJNOM16n6fMjt2ScdlDeQb9q6ZNpxtGE9pxSj8OTdOg0
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
I2tMLpEmxs6oZpjgda9y4Vqk4E/jeptTG2zMkguB5Lb0ELZJcBOvUGq767Fc
Mquc9j6K/XayxDJA3Ds0wx8vFs+URSYXiRZ9ra/Mnz89d57I5BZkNaG89qY1
0Wlt5LstnfeesbvPwRFCRN2srkXTIhsi0Hg/UZklpLqv5IsDNqRXC3s5XMvh
xR/gEJRO9lVRl3PepNf13duHTfCE2hDju3VUtd7kneUH8YzKp29ASnNFJV0D
Xfjv2ktEWiF9wp8p913PErtgAh13scvMk+SSdvqlHZRXtNKU6cTxfeYExCRw
cclOgqNz6Rko4+gaZxLT6/Tr0aaPopbYPawVvPHoeWsuH/qMVZtWcMgugqZu
OcXe88gRmEqW7z2djjaHs/iTg1yNK0c2IsVX2O6w5AIaaktJi3bF4vgW3lmy
FaugbIanCh7vLcRs93F2mYbQNayiMUHwqouncMwq4Kp9IG4ugqvNen535Xhx
7OIZrqQKe9CazrH9dqLO1/G4HIi7fRbyzmyOmghudy6bpix3jgkeaJ/eKdpo
lLI4H86fPYezlwObjU9wwC6Z5uZqEjwucHDlGyzfb4abjz3WFqdxjqqkV9pD
Q30L9aXlFKcE3pMhOIt++RBDct1eUN98XD1t3M6AJxMP43ZqmYQEizf43nI7
yltl+vcRum9Mt9Z+yrqDttwuLSHz2mm+PJ2CtKuQ5R++jKljEmWlBTju+Qjf
gs67z9qJMRlpIq8/HL1OU08P6RfE+X5x3ivOrXTnIVQJfvi772/DKzoDzx3f
47/X2FHSVMXZ53+IeVQpnV01HHvjPXzzm6fmD/bj/c7veHF9EH2z95WaQmvc
UX773Hvk9g1S5vUuv3vtPI1DujdB88sh6a7BfNEPORpSxIDgpe2xJ3j5nd04
X/XHz3oH//K/1pNS10DwhQtkl1WR5raVt+xz9HvB3IEk6zLvfLqDoIxCynMD
WfWZGfW9vaScE3JuDRD8Yva3jWFcP3oZs+g8amuKcfr6r7hklJNw5nWhL2FD
eySTaXXnHTWYLfrB3fqN1nnxXz+YqbPK5jxc7KKoqM3H4i+v4pXXRqy58F/X
HsbZ1w87F1uiapsJsryPDGMN7P3jDzjleYNUvwN87/friS5tIFFXn7v1V5Fy
emaeN2sG9HuX66AabBB6vFdPjayM5e+/gJGZNX5+7jhe8KFZMSA47Uy5XXPq
iTP/ZGa+FYUYv/D9mfWp7Kbq2jqe33SayIJGOjIu8c5vxHPbwRtvJ3ccQspo
iDo6T9v1ISlwwyWicobv8DTj2+Z2yv5mHHYtwyWt7u67m+G6SF74+TPsdY7R
x7HR3NlDbGyIurgz/PzlUyQXt9F+256PX1jNyUtueDl5CH+mSL8n3Hh/Dp8s
eg2zqAp6mqJ57/l38Mlr1r8XmI0H3asdLGfz0sUcsr1JfmE+7oeW4p1ZSWvN
Tb54fTdJ+U2oxweJXP8FX+2xJDguCdtdr7JovSMl1bdFnaIprczj4ufv4p7a
gGLqfcej5TuzP1V6r+IFIwfSi8pJ87Vgxek4GoU9O//WLzALSKO2sZLz73+K
d3r5zHyUjZi++yzmDtdI9DflP17cSHBeKSHW1mQWlJLutZv3HdIoSbThkxdW
zdBllrsFzvG3qbx9jdfe20F6s/Tet8cGf159didOwYl47flPXlpjSWZlCWff
/AVHfdPoFu0gyXWck6eufaY0j7QxZpq8SjKsVvGX9Qew9fTVj9XIConwd1fO
kbutrYiNX7yO0dEL+Pi64XTRm7I8V/7485n1yW2TELL5T2wzd+R2cRprPntt
RprK2niWvf8xhy+6kZARxfZX38EyNIvu7ko83ENoHRx+KvY6X2g8cdxOo6Qz
z4s3XnqPC/4Jwj/XrZmdQNaciNGSc0TGlem/nbz9seAYiRWkO+5m+ebdnHEQ
fc7NgbD8eqSj01tSQZywOZ++d4XbJQ14bfqCz04FUdw9ol9X7bziDY7a6Oao
jKBRy8lxWs+HRwVXqe4k2nQpe4/o5n7Wzy0nu5gEh3V8ZGxLfGnvjLgkPdnO
rFhpwqnL7oJPHOS5327ENTyf+ixP3vrQTL+etSXdcc49bhElk3N2BMaGOnBf
8SZmjkGUNdViu17kEZZCVY43m7fs4UpwHAV5EezfbkFKYRN1t8xYsscUp1sF
DA5PvdcaH6bQY8PdOirldRzZsYSNXx/D1dMNVxtvihubBLdbw2mvEPFML8Hv
/CbBqdMoz/Jm0183cvC4De4uXjj5Z5PmupKVB0zxjork5KurOXImUPh3hZxb
eYyLtpHU9ChmzJXQDJZg9PGnHHBPpKEhiXUffo5N+G2kKi39ZX5z5cgpJ9v9
Xn1HB4rYu34Ne80vE5UUwcFPl3DaJZwYH1s8ohOJzYzl5HFzzBwikE41uW5O
pp/jcbbuPkpQTB7RXha4eTqTXZmPnZkl584GI5HPfO/XlePLQdOvOeaVREFi
MGcueeIcHIXtCRusLKMFB47j8L6T7LOIJj/qsj6G2oXr1Qyr+oiy+5qDRhu5
6ueA0dbtbDntTbTQT0xoOFmxHhxzcMI6NBTrPbvZsPY4jq4+uPrEEe4byPVQ
/3syOIZSkJVOZnI27YpvbokM3M6AhcDDuN1wRyUhl43YvPEsyWXdwm+f2tFA
UsQZo814BAfgLHz06j61fs+z5hx/tm60JzjADTv/HIbG7u11pZvDdUvkteV8
AKXCxsU6ivPj4rxFnDvpzn0oqSviksh3/VlHLh/fxIb1l7ldmMFFo63Y3Mik
ujKF0+Lc+WYpI8ND4rkySKrVNlzyBIe8zzcY7YDw0zzy9HPXVU1xXI6qn9rX
c345hlpzOLNtKxY+yfQox9EohM3cbsTaVWtYv34da9atJ1z4NUlWRrjeiCLK
15bo8p67nGaqUOKtt2Pq7Eegux3RxUJ3wsbfst7Glo3ulHYpZ3wzmpgYwvn9
3/HRRT9iIn2w8k5nYLB18v7zunfoVdy8ZDR5XpHOqW1G9+o3WIn1ti0zdFYs
dOq4zZzI+Jt4XQygYUDNSLdO1k2sXink8MkUfGuE1Mvb7iPDCDne29i04QiO
jhZs3LCBwPQCwoXM0+s/qb/ped5rb0XbTD3qrjdn+Ij0a1m9Zh0h+e2Mjcvn
yq0eRzkn36E59fHPaaWvKo7toj9cFv1BpZIKnW9jw5pVrBF+ekWfSuh8vrbr
oOnWVrZYps4zN/bpxLfN7YaaMthrYoxPXIl+7zIdeqpSsNy1k01HPChol99d
d6l7RidetWSn0SUi0msYUfaS7LiHbRtWs3qdLQVtiql7FcRbXdXvfT+u7SHY
MmJy/9N5a/ege7W05odist2Baz5u2Ptn0StsRX1GCLt3GuGfXMaoaPfBeiGD
8TYOnr/Axs2bWbf+CjnV5bjuOUdE9A28rYOo7lZwj67NzbdvWD4n33uYoMp7
Lb98Ywe+N8KwOyP00jLIQGMuVnuM9fPHbmfFC15pjGNkNsUJAdPyUZDvv5cd
mw8Jn/0cW7dsxjetnATr3biHhhFx9Qq3SjoYVfaT7DRTl82pDphcvEr49as4
huYwMHLvPZJWVoPTXmM2nrbD6oTOrluRnJmAhWjLc+4xtOneeWkH5+R5Tweq
OfKqekqxMtnO+lVrWeeepF8bWTmP3DqT25Ltz+7tm1i1ei3+GXUo+qrm1Cen
sZfym47ivhPElHdSmzEzzejYMKW3HDDesoHztqfYLNruiHMUDfXJmOw+TUn3
AN/F0LZPHLdTD1CWHMCRfcbYX42mRarj3Fra8iMxO3SJkIQCipJDOX5QnCfX
0Ct8DTfzw2xavYZ1V25Q2jM0Z+z3FoQSU1RL74iGpsRrws9v0M8jHpWU4Wp+
hDP2IVR1y1ANd5DoasZe0fdSBberSr7Gsa/NCMmooreramY5LQ1kXD3J/h02
JOR3MjKt82hHOog9cwJj0ffWrVvL2vXr8YpOJfumH6b7LhCSWiPsY+s89+TR
P7VGdURSyVVzUy57h5NXnI79cTGmr+rmckvI8T/DOQdnPN2duJldpU+j0Pkf
xw9y5lo8HQNTvpmyh6xZdewoiuLEgZ2sFnK4ReciVcgI27WElccv4B1yDQe/
BGqFLrRawXP9T7Fv62rx/LtAYnEnXZWJnDLdy2lra+xMdmN8xp/C1nriLE6x
96AHufV9M+dlCn8g0/06FXWdKDX9xLjGUt/UO3mPPv9ZcvR1zKrvKDVpVzmy
eyunLhxj564d7Lf2IznSgaO2Xlxy9yMgPI6syq5pbT7BgOCbnjaunDvthHfQ
TTLKWuhuyMftsjmWjj7UdMycQ9stuN2eTavYZHoFH49AYcdzqa7Iw/2yLXbu
gs/lpOBiJc5dbxB/wx3L/ea4BxQiVapoLQjG5ugujh07ybGj+wX3F9wuxIdg
twv4B18jOjFVv3dWvbBHlnuFbVxjKvzGApqqM/D2cpwmQyMF14Xf5yGeHwPf
PA6bgdsZsBB4lPV294VW2CHF8Jx5SFrVCIph5d++X4XI946Hqr3vZxWNeEaE
ERLsjaWZC41D6gfECtVOexennZvnfeSYnceIPtbCvbx0sUzGhA+m44z3Szqs
EL+rHz7vemy4FfPXP+ZGRQeDMgXfWHnz6Uxc05U/Nn1dmVYlOLH6bgyWB8sg
frvzzeJBQZZn5fkw6PanV41PxoZ5oNxz8n2U+mhRCV9jhszztJ1eX/8cn+z0
eJyxyx+OO2NOt6e0dqqNRTuNTsYQmBmz7F6j3Lv3Prk+5F6talRvhx64rnJc
pX/PM6GZNgdJO86IbtzcL77do+QL+thKebbv84q5eMZLpCjvrL/QxVOaqv/4
+GRsB+28hm7a71Py3RmvOk51r/xZutTlL+RSKFTzzznWxQVnKqbVfcfA/O1z
X4ixOirG2GS8qfvIPYVxoT/V2LQYyY9QnzlpdNem6qeZ1vZ39PVdxBPH7f4W
aNUoR8fuMx70N6DlzjjS6N8n/03N/dByZpap1MehnIz3OP8r5Ee5Z34ohf6G
deP5b3geadRK/XxprT4+SjfO67fjdzOT9n6Ffp/S6fVTKyfHy91HoC4unq5Q
rT7I3EPLuhPXbjKtLr7lTCEfRQ6NUjk5Zu+k19VnTCXaQshxn/es2nG13hbp
xv8DMTFOa8oV9p08wMWEasEnx/hm0Qimxe/T3ounOC50rFQpp+1FoLumQi2e
tXpRdfZNlDVdhrvxQr9R+ZMwcDsDFgJ/F7d7rBjjtuNqvly6DIeUe/tNPq2Q
teZyfMUyAtKq7sZX/S7guyr3QuPJ5nbfTYyruki038TqSyFUS0e+kb/3NOO7
Kvfjxj8FtzPgb4aiuwL7fca4Byfo43R+195xaMdlVKe4cvLCGTwz6hl58Mv6
JxYGbmfAQuDp5XbC9+zvoKlj4J9iP4xBSRuNLc3U1bXo1/c8/RI9Gr6rci80
DNzuyYNK1iX6dgvN9Q1IdPMK/gns1KPguyr344aB2323oeiX0CKepfX1LfQr
lN+5dyoapRxJZysNDU109PQz/JSupTdwOwMWAk8ztzPAAAMm8e3vk6nRl6VW
q/VzU/R/xaH5lhwK3T6dunm2jyWOxYRuftPI1BzBb7/4+TGBZkzFiPIx6eRR
8Y/UnW7O9TfIW9eHdPPyNLr9dzTj4jmoYlwz/f2S0Om4mlGh02+rX/89eJK4
nU6fd+yD7u/YmM4+TOrx29CkVj/XevyxjIX5+9Jjhm5s6Oc1jz/BnG9yHKpU
6jl7Uj2OvCfE/WrRb3XtqLOturQz7cCkzVUt8HPPwO0MWAgYuJ0BBjz9+La5
3Ziil7rKUvLziymtrKKyspKSwlJa+0fniUOyUJiYXKchzsaHmrkZVYd85Jut
qFgQqAcpTwolo7oL5RMzj1hNd91tghIqkSnn3y/4icDfoDv9uqBHuG9CNUCF
yDu1spPRh63NEdAo2klJrEPSO8pQbzNxkZnUdw5Oi4E+Rm9zEZEpZfo9LZ5Y
nU7hyeF2E8glbVSXlVBSWkZlVRXV1RUUF1UikY38w/a50a8Bm+JyitZ8bte1
0j/67dsHxbx96TFjfIjavGiyKhqQPQadPBrGkXXXk5ZVQFGD9NH2up2YWtf2
UD1P5X27gOLGR8tb2ddARW0FDb39dFblkJOTK55vyns3aEbprBXXC2Zd/zth
4HYGLAQM3M4AA55+fNvcbqSnmutXDrFsqSlOV4MJvX4dj0sXCSnomlpPr52K
3TqhX1d+7/X5hN5X1856/6m7du/d54R+LfvE1HN7Mq3gdepeapv7Uao1qNoT
2bIpgjbJyKTPPaFbn6+Z8Z5+YqoOk+vjZ12fJc+9WPYTd9NN/aC/frcuoN83
133Db/jSOk4/51AH/R4K09/TT0zuF6C9+53ijtxz9/q4b9nzppmtqzvX5OT6
7+OH71pT3j1rf8E7cXSn6WFSL3fOtZMy3snrju7vpJuV9p6IGr3Op8ujvzbr
3um6maE7uUq/F4Z2uq5nlaHVqOmob2dENbVvgb5+s+WfhEbegNv6X/PRhWi6
Zcq7ur8rwzS5dedj3dmY7o+goLyP7soEli/ahHdsOXLNnXKGKIk8wx8+t9TH
iX9SPeI7eHK4nYaOyiz9/qcnz9viFxzG9RsBOIjztKpWhjXT+tXU+Jw5bmaN
49nXZvTJybRazRiS5i6GFKP6ftKZZsuFiDTq+kansp2d76zyZ1+fIc+9e2ee
MyOPO323Z76+pJkcF3dL0dVn+jjR5aHRztTFQ8qeL80cXU3pdEzRSrDZYlZb
elPWqZgnf+00PTxIXu3kmL1j3+ekvVfmHDv/oPrqxqR2lMbcINZuPcpht7zJ
PZgmtEwfuzPbZgK1rIeuri767rzjm5i0D3PsrFZJk8h73eajmLqIvLX37M4d
+zu9T+rQX3ULvxt+RJfWk+V1kF379uKXL7lbjma0j8xr+9l1ZA/+d64vAAzc
zoCFgIHbGWDA04/Hsd6uwnsZ//ZTM4qaBvRx57uK40mo7GFoaIj+Hgl9g8Oo
lAp6e6UM6WJj6ObjKWT0dHbQ2SVlVDUurgmeNjIornVOXRtjXDlEr0TKwGAv
7W0d9Ak/fVwzSku+A3ucY2mQyFDJOqisaJ+cfyf8uiGZ8M9FHt29g/p9L7Ua
FQM9PaIOg/RJOunqkYk89B49UkkPIzPm7WkYkfXTI1UIf2sMxaCUPnE+phlH
KerQIx1kaKCHjo5uhvUxPjQUOX7MW+fj6RT8ZFw9Sr+ki/b2DgZHdXxFl58U
SXcP3d19KMc1QiY5vd3d4pqEAd08wLuF369srX79yIw02vFZuhqf1OmQ0Gl3
F7Vxp/nRm5eo6pzG7cTvysF+pP2DDPR20drZI2QQ+ShE3j0DqHQyDok8RRsp
NRq97nskvUilooy+IRTSvjlpdb6PZmxEXOums1P4VbJRfeyUCcHDZL0SuiXd
9PSP6P21+XRzR3dtoo17+3roFf1El16tGEA6oJjmD2qRdZRx8ZAPZY3djI6P
62Xt7emiq7uXIaV61vt6DflOH/Pu2RtUNbUIHfUiH1GhGhb9sW+AUfUYymE5
fX1SRnRziBUS6mvaGdLFENNIcf90H1FJwh8fF77wiLhPyFGfaseLn14gJr/j
iY+Z9+RwOx0UBH38Kmedw2kaUAq7JKc0PoqSlm765bo26KN/aJhhuWjz/gEx
Hsf1c+ZGxP+7RP/u6pPp91LWXRuW99Pd0YlEKhd2ZkzfX/v1fVJCe5dE38aD
3TW4ngsgK78ehbhnqLuR+rY+/XsmzZgSmVQi8u3S9zVdvuOqIaR9/chEeRJh
j/qGRvT7IGrHFPRLh0Q505i8sCXyATEuZeIetchLnA8IDjk2rkYuxkefqL+0
p5suySBK3ffi8Zl9ST0q5BXjU9cfh3V7c4pxMtTfi0Q/ThSox6bGoGTSXtx7
j3H/snXzBGen0czWlc7G6eaui2sSUb90p0/58rwvhW1DU5mLcawS8go99A/0
0dneSe/AMGrVZDnzySuT9oi8JMIW9uh1J52ddnxCX6ZCV2aXzh4P3LVTD6pv
d08/CqGb4bYMDnx9EdPLt8X/FQxIe+kfVAhZRLuLZ8fg4KRcOujaqi4uAA93
H5IaBibttX7cdgkb1IdcoZyx9/loewYHjS3Za5ZAm2iPHmETRsQzbmRoQDwn
5IwoJ8/7ZUP67/7KwW5aW9rpFTa+PcOJo5Yncczs0r+/UunK6ZNQGHmS/WcO
4JrVtWDjysDtDFgIGLidAQY8/Xgc3K762mp+9NvjZJY109PVSEJkHj1D4vko
aSDB3Rn7sCyqi5NwC06itk/4BsOd3I5OJj0pAX97D9KrugWvaSUzOY2UhGh8
rR1JK2uiLi+CK5edcL8RjJOFFfaumXRJWwk69BO+t+MC0SV11GRdw+ZSAj2C
98lbigmKSyAxMYZQN1+yKruRCV/P54o1Du7XiQn14bJdBK0Do4I39BHm4kpx
+8C02LxqmvOjueKQycCQgsbcCBzEuURwl1xfJ+zs3UmMj8Dtog0ptT2CD01Q
5bmMxRcS6ZTJqL6dQVpSPDf8LuERX8ygvIvE67dIzcggxN6fBqmMhmRfohJT
SAm/RmJdr+B7Ew8su1c+SnOKz4w0w4NtM3SVXt7J6FAXmcExxCemcsPmc773
2nmquu5xuwmVlNyrrjg6exEc6MW5i7bcyG2iq6mcYAc/GvoFx6vPx8XZiRrh
pzYW3hS6t8fZ/xJW/onEudjjMCvtsHKY+pwEkkQ7xkeH4+6bTINo36GOQiJv
JZGeGo1/Uh2KkaG5uhH+W+WU7uoq8/Fwc8QjsVw/j7Q1O5iwDF0c4Tvv4FVU
xV/h18+aEHCrgF5pCxnBotzUFG6FunAttYQB5cyvadXeq3hr02E8/b2wtncm
OLWCtqZqorxDqWgWPm9zGf4+nhQ2N9JQHImrfQz1rYO6KCmEmhzi1u1yBof7
KIhOIj4umQinDfzmLyeIKTBwu9l4MLcb5brRa5i5BlLcIrhAYxEFdR36+YB9
jSX4X/XAPzmH7Dh/bqVk0iI4vayjhrT0DDHWonDzjaCyQ4q0tZrMzAziIsNw
cg+hpKaOvDA/3F08CPD3xsrGjsCUInJi3Xn75X3YeSXT0dNJ7nVfPKJyae+X
0VIs+mByPAm3IvH2S6CsWUJTWSQeDo6E3YomzNcO58jbevswIikk0C+L5g75
3TGkUQ0IXirySyyltbeHYnHuk15OY1sd171dsHcJJDLkKvaO16lslQq7cq8v
9Q91U5iVTXLCLQIc3EjMrUXSWkpCUgrJSdEEJ1cIO9Ml9JBIcnIq14WMlaJ+
qokHl9052DMrTTe9rVUzdFXa1MNAexVJiUkkpsbjuOMPfGbuRknHne92arrK
E4UeXHAJCsD5srCXTglUN7VQGDe3zKa2GkJ1cdxsL2Np5UN8TCAu9jPT1nXK
RTtWEpWcRGxCLNe9rpFe2MiQoo/s2PvX19c3iPjblfS353Bkuy2m5pl0NBcT
JcZxeNxtuuUyarMSSI1NpUs2OVdibLCZgL3rWP7RWjwy6wSna+V2ThrhsbHc
DAohLj6Hzmnx5dSSXI4cMuVDI0ucXN1xcgoio7SO2sI4gm/Gk90o+kVRHCGi
nnltvTRkxxMYFE1uo+D/OV6YXbLQcztlfzvFOenEJMRzzXItG0224Z1j4HYG
PFkwcDsDDHj68Xi43WZ+9K8buRqVRm5aIOuWXqFeIkctbyFo+0r++z0jTHd+
zapTEdRKR5EWuGFs7EpuWSlOq77iTHgJTem2LN1ykYibYex7/hm2OUQRYbeR
H/yvF/joxEXM1n/Bf/5fnxNTUkWE2XM8a+JISkUDqfYf84P/z5yyFsGjTu3g
80vhFFQV4LzsTZaahFOTG8fHv/4+z7+zj6tXbXj7F8uIqxO8TN2OlckuEqu7
uBdOSUNL4kl+/D3Bi1rkNE2dl5QW4/bJf/PT59/B7tpVjr33G5a4ZNEzPE65
4CdvC37S1l6AyRJj3K9H43l0Ef/+qQWlNQl8/pcdBCckY7NsLxkNHVz96hcc
9Ykk1u0oHrebUNzdw23+sstbeghcNjNNa5bdDF1td06lIdOF9xefICG/ijSX
D/nBC+dnfLfTyOpwEjL8z9+/zcELFqz65CV+v8KXuoZC9iz6kDihB3lnHh8/
9xyRVRUkBxzmD997gY8PLmP1aTdOvvnrOWkbGvI59PkGPGNyKMsO49PffMDF
uFoqbhxi6dFrpCQGcMwzj96OeXQjeGfplO6aam+z6ZPn+f2xG7T2D5FgsQ6z
qALB16YaRjtKa1kEH/35GDczK2nKtWPZn8+RlF9J5rXV/O+PjMhq7p+xfqvK
dz3/+40PMBP+55bV7/PqSnsy8/M4Jfy/0KQi+rrL2PLBn/EWflmS7xZ+/58H
uZnaxjhDwh8/qPfH2ytCWb/0JAE3c8m4up7/fvs4MXmdBm43Cw/jdhEmr2F8
WvTX1NskBFjjnlBCh3wMeUs+h7d+wdsbd3FkzwocrsfSNjhAtr0Fp1zCycqP
YbfRQSJySom/eISvrdwFF7zES394HSvfAOzWvMvP//AaW46fYP3yxby41IqQ
8CDWrziFT/htenrrcN/8Hov3e5BbVYiV0V4c/WMoyI5i49tfYe4VQ3SgCW/9
6kW2HrPFy3Ipv/nwHLFFEgYbEjA/EkFJlXTat7MRMi99zCvHfcgQPDVNnL98
0ofY9EQ2L/4vXnhtE1ccL/H5K+vwSypnSHOvL7UWX2XHPiu8/QM48ZdFbD/n
T0rQKbafdCMsMoDz17JoqM1k57oDuAWE47hNjOXsWpHHg8vOqMyYmeZ2KTEX
Ds/UVVgK8ZcOsveMF2lFeTiv/zMfHPahqH3qu51WQUGwKf/9i5d52/gEpkar
xdj/DO9bucRafjRX3ow4Nr/9WyHvO3yx/Dj25hv49bOz0sbmkWB7nHWWV4kT
4+7qjiWs2e5BcUk6Ox5Q380rlrD+kB0VtdlT3C6LjrpETq35hJ0mFynpbCPK
zgpnKy/ap5QzrpAQc3wbW5ZuFPaxjuIIYaNPWmITk0WM3TF2rz7ItbjWu+NW
LckTeW/iv/66HZP9+/ns1U84aOlDaugZNhzYx/n0ZiqjzrDu8D7OCV6bbHeQ
ZetF38nsoEtwu+N6btdGY4wPlifO4BmbRcTFr1m9cR/utw3czoAnCwZuZ4AB
Tz8eB7erubaBf/vlTuHDVNJYlc1Fi1CaJIP6eTBaWQXH/vRT/uX/2CO4zaT/
XWj3HgeCCugV3GigsZSKpgGKXD/iTzttCYy8RYDVVq5cz6Wv2IOf/sqSklYZ
WlUlG5/5d1zTa8l3+YrF1sl0ytWoa3356Y9tqWwoZfdPX8A/r1Ufz6g/5yI/
+bfLVLb04v2XZ7CKq0GmluP48UYSGnpQ6sJcj8/dq09Z5cUz/2Yj+NUQI1We
PPPjyfNqX903pjh9mbXi/NcW8bTJVHe5XX2OGz/57X48AwQn9bFis6knJbV5
bFj+IZuPnuPyBX/Ku6XEnljDxp37sL5yiejiTkan7c89f9m9xJutnpEm3+nD
ObpKu/Q2PzS/SYtMjbJG5POjyXymr7fT1/vULeE/q+7qR8eJ3ZatI6lRInQy
jLvwjxIbhX5UpWxeZEVV26DeJ5ovbV6cLf/+b1ZUNMt1UXyJ3/I8f74cT/7N
syxd+zVmVra4hRfQWeg+VzcSBcUek7rT6bQt+TR/WHmWlNxMrI+4UCcdmsmh
1KI+n7vQ2CUn9/JrvGtxS58OVRlfPvNjfLIbGZlG7u60i+4eRbkvrwquezOt
lgCT/dzKLkM2PkLwroNEZ5fTW3eDN16yIyZV903unj+e7buO5076kir0qGoK
4/UXbKbuebLxpHG78B2vceiyG1kVdZRlhBNXWIdkUKmf09tXHMqbL/2at3c7
UdomY0LTwZk3NxB4K59BjYomkaazp47Tb/yZTUet8bsRyP49O/FKLKIgwJjF
Z/3JaJYhK3HnT89ZEZWYxMFt3uQUtuvXRTaFm7DsYjCZyV6i/S5yK0V3XUPm
0Y9ZevYahc157PvEiczsVtHGN0Rd7IgWbTyum6eoX286U5qGUBO+sgomv01B
Q/AucR4kzqWEb3idS/5xtA4N4Sf46M3McmTTuF1+oBGf7DmNg38UwVe+xjEw
joIYO7bt2MdBwXudQwSHaS7hyK61bNh3lPPnr5Kv+66vfUjZlSWY7lpzL01N
GeavvzdTV/ExmL74Aq7BSfSpoHFaPnegFrK/8ZbQX0YrY+p6Dr/+Etb+CWRd
NX6AvLeEvJp509pc82bXi+/jFpYpypy42z63bqZyaLqMs+p70eIElu4BVFZn
cGSH4HYncxAWjRLfy5jtPob7jVsERsSSWNgzrVXGyXM0xe6EKdmd3YQeN+Xc
vktUD2kZaUnmwIZz+nxUd2SV6L4JXtbzRvV4L2GnjTl1+ASJsW53v8l13/bE
7OI5/XlvnhcnbSav3+V26VVEnTDh/N4TVMm1+u955pcm718oGLidAQsBA7cz
wICnH996DIQJDZVXV/CjxReoaOvXx0GQdjZSWlSLYlRJT2MhV8+s4sMXPuPc
rQL6RtTkX3mdr/Zfpby1H5mkmdIqCaUea1lz/LrgGlJk/e2UlLYxUOzOM89b
UdrcL+rQzKlnX8QzuZY8ly9582wE9T1y4bcLDvRLa8prC9n6i59x/kY+/cMq
hkpceHaRk6hTN25//ongdhUMjMpxXbqe+PoulJoxBvqkjI7P3HtxtOYa//lv
Fyis7qUnx4af/MJSlD8o6reUNy/E0y580vJp52Xuk+cNhT48u3gvsfn1yIcG
aCgpRTIgoTD5Flu3rOXFH31OcH4TFblp+JltYenbv2KTV9a9tf/3LbuHuoKZ
aTKdV8/RVeqZl/jRLi8qOvrpK3ThJz8UnLhxcAYP0fGdt84L/7N/5K5+Kjs6
8Fr6ESGi3oPDnVi+s5Ko8g6G5YVs+OQKte2Den44X9rCFFd+/lMj4sq6BEdV
k3f5r7zlkEJ5cQ7x123ZvPIvPLfsNHkZzvzn4q9n6KZHoaTYbUqPgiOjauTo
Jx9hbLyWU8EFyGbvezpSxJZ3bSmul5B66XXe3H+NOtH+Y8MVbHp2Ed4ZM7ld
hafI+2w0LVIFA2U+vPWpA3G5tYLPbSQoNosuWTfOq3cRKjhCR0UIr71pw600
4fdrZQRt30dkRinJTl/yvIng0+WdSMv9hW9qSWRyy7Q5vE8mniRuN6EZJnjd
q1j63KShX7feTkGfGPNVDRKGhgZpyk/AePt6Ply1h/D0SuTyBk588hnm7hHU
9gwiaa6ivq0Cs0+XY+ERRU3vIL1tNdSKfl7sv5svLwRwu2kARZU/b//VgdiU
JA6tcSYpo57hsXGqBR9ZYhVIRnoAi1/ZjXd0OXKlmhKPDSyxCyG3Ppv9W93I
zG9FURvK629ai37QxvjYCIOyYWHPZjL5+lCRn8VVMuv7KHRdxWenBY9s7tbL
aOUn+ptsiEDj/URllTCgvteXCkMOsfukFymlnQz0d1FZ2UZbRSHpN10w2fIZ
Ly09QkJRJcXZSRzYu50//fwLXMJ1eUw8sOzchnYqb09LExbN4Y+XzdBVXVMR
ewTfsnCPpFk6TIWfEV+cvUpui/yu7RutD+O19y8KftYsxnI7VxZ/jPO1FDJ9
d95f3muRgtuNz5vWydsXoz+9zEmnGzQLm6GoDphsn/Qayh5QX6mklaa2djoa
MjliYsORc7f181KVkgIumx3n809McApKonloeruoyXUyxerIfpLrG7h2zJiv
tx0is0XGSFs6x/bbcdy6kDuzMtXdORzdJrjd8QwUKikxF82xOXOJpFhXjl84
iW1yE/Vx1hw4eRh70Rc6st05dvEM9hmd4txj8jylGH8zYw7sPExOm4yWVGdM
z5np718o82DgdgYsBAzczgADnn48jhgIqXaf89PnDxKVnE9lVQW3I65ic+kG
DU3leJw8gvftMpJs3+A/1gg/J7+RtiwbPviv1Vhc8cHX3g2nyCoaU235aNEq
Tll74O3igX1gIRLd954fGxGcmEfR7WB2fGFGSesA1UHbeH3bKUKyymlItubZ
l81Iq2ometMyNh+4RFpBEdmBlqw8HUdjcw2X3noW8+BMmttrOf3+Z3inVYpn
uoRrXt6USGTCV7/3NB7vSeKDZ3dwxTmacLt1/GTRJqILa0i9+D6vHAukrK2T
jEuT51XtEpLPf8ArRwMor8tj7WevYnTMiqvXPHCy8qamKRdP5xjBXfO4+Nk7
eKQV4X/JlqzCMjK8dvMX+zS65OoHl11aQajtzDQlCdZzdFUdYc7iD0y44umH
v50J//6jjUQVtOnXBN5BpfcqXtzuSEZxOenXzrHsZKzgp1JuGP2Jry84EZcW
idHvF2N9PY+6ypt8/roJyQVN+n0R5kvb2pzPhiVvcdgumoKiAtwPLsErs5Zs
b0tcEnKoyvHj1Xe3k1aayqrPX5uhm+rODpKmdFfZPaznj81RR1j0/J+Jre5m
TrhhZQX73zbB/moaxcmX+WCpMVcTcyjLD2XjVycpbR+YwWNrg3V9xI742zmk
hNqxzTFO3NNL3LElHDllwfWECPa/+wUWzpEUJLryxofm+CfWIu9vwmr5JpxD
0yhPtGX5ChNO23jg53iIP/x2I24RJcjVT/aXuyeH200w3NuE41evsu+0E/G5
ZZRXFHPT3wmnsDwqisO5cMyOpPRUrMU9O/dYkFbRQPKF7by/aQ/nnL3wdnMk
trSOBPvdLNtkwllHL5zcHAjLryfn2h4+2H2BkJQCskUbbz0bTlFNPudWHuOS
neAKHZ1kOW3gw6POJOTfZp/REvae8yH1dgF+ZzbjcSud2vJoNnxxlvD4Ulpz
fXjr4+P4J9Qg7ywiLPg2rZ1DM3z19viTLNl7AofQGNxM/sjb288Sk1eC81ev
Y+YYRFlTHbbrNuF6PYX27rq7fan6thcb39vAwRN2eLp54+iXTbKnHd63kii4
HcIXy/YQkhiF37U4ckVdnTZ/hcv1TLoVmgeWHZ+XRfCMNMlEXjaepatiAndu
YuNOMzwjYnEy/YS3NlgQV9bN2NQmRKON13ntxd3Y+SZQkBvBkU1nSMlvoi5m
PnmLuCLkPWobQI10hOGG+dJWkXBkFyZ7ThORmkXODXu2n4+gqKKAML/4+9bX
1dudq3HJFOTFcmDPSfZdSJyKXzFCvutZNn1ohF14zay9asco8bfk5M7NeMbl
kOHuwNktu4RdvEVeUjDnbb3xTb43J3NMWoy1qNf+Xe5k5yRge+YKHtfSaSkO
wfzUXvZeCcLPyohVG1ZhGV5ASfRlTEwPcuFWBWXR1uL8AFZx5eR5X+HwOiNO
eYbhe+UAKzYYcT60lOEFCu5h4HYGLAQM3M4AA55+PI4YCDdsd7Jlozlu3iHc
uBHMFSMj3ONq6KxKwMTYioIOGdJiP/bs3IJNWA5DI93EX9jF5tUrWbXaldIu
BRrNIEkOu9iydgUrV18mv3UIWYU3z/zqTcxcfPCwtiQsq4FR4VfLG5Ix2bkN
y+tppIc4ssPIglvFnci7irmwaxsuV4XvdMGL8g4Fg62F2O/ewaWgRMpKUzhn
vB17XR2GGjDZvZNoXXy16ZuoMUj0HmM2rjLD0nwD6zesIVj4JhGXd2J01p/c
6nKibYz15yX11YSeF3U+401xh5yGDD92Gq1n+cpV+KXXMapoxcPkDDeiruN1
KYCqbqngwbtxDQkl3NeOmyUdenkeWHZ2JQmXd81Mo5TO0ZVK3kKISLt+xSpW
r14l9CrSZtRPy3+CKu+1/PL17fhcD8XmlBv5zYPCt9NQF3eF7ZvXYeHihcPx
rZz3jCY9xped27fgl1iq39/ufmlb80IwNrqCr5cLdn6Z9A2raE29wq4LvtwI
9cVe+Mf9I2qas2bqRjHQSrjlpO6K2gYYGh6lr9SfPWcT6BpQzn33re0hfM9u
thz0p763U/j6Jhx18OKaq9BJfussPQpN6vrIDjOcvFyxcwwkv75bv/9nc4Yv
R3Zv5qStA/an9nDB5RqRgW7CjzxPUEo1XY35nDp2gMv+iXR01HPr1DG2T+l0
9Zo1eN7MRapYuLH1j8CTw+209FZnY394H0eOWuLpH0xwiC97hF8dXdBIRdpZ
jjrdoKpNSmnEGQ7u3EeQ6G8SMWZPH9vPipUrMXW9RXPfMCppNS4nDoj+vZLV
ttcplcipu36AN9/fwkU3XxytvEgvbWNELSXhrBkm+9zILi0l2ukYJqK/plR1
01AUzbH9Djg7CG7pn0KTREZzXgTHDlgRFJ+r5wGm+06JOlTQXhKJ+eHrFFb2
zXhnoJQUcdL0a/acPI+12Q52mNoRmZiA09GDXPS8QW5RGnZHD2DjE0dDRdbd
vtQt7Sb7mjl7NunG7Hniizppun2V4zaeXAvwxTU0nWbR30JO2xHiH4CvfSBF
tRKUmgeXHV9QhI+ZzYw08p65uhpsyefkEZHW/CSbhH1evcaSW7r561M8ZLQh
jNff/JBdZ21xuyLySyrW9/P55Y3BWsh4yi6Iym4Z8vr506pFm7meOIS9iyPO
1j7kiTZQKruFjLb3re/KE1cIKW2ktTKNK6cvYOOeQHPv5D7LtYkBBAf7k989
O4acBkllKk6nzbHxjqGhs5k4nytcPHMKVxc/4hKK6Ffdu1ur7CXf3wXbE+Zc
cXQhOCqJBukoY7ImAt0vsn3/Yc6fMcXU1EzPPZNvuGFufg6PW9mkhXuK8zN4
JpTTJdrLz/kCO/bvE2kOsGb1EZz9c+hVLsy7HwO3M2AhYOB2Bhjw9ONxrLf7
26BBNaqaFZ9Md008Y6fiHg3kO/DsK6fIrpMwpJwVq+m+2Y6jUEzupf8wjI+P
z4zFNC0PlW6u5oQG8ecbzbEZV41O7jl+J1/dfu6Kobsy6WI4jakUgp/dR555
yp4/zUxd3bk2Ojquj+s0p94TKvJs3+eVk8HUSKSTMaOmpdO1hS6WoGY+gR+Y
VvhKQuahYeW9uuniVI2rBH9WzohrNUc3d67LmrkZcQNnGwvCitoZecRY5iMK
hfDlHxCvWK970RdmxDzXolaqJuNr6WLtPbSfaIU/Oq5vA11ffYRu9djx5HC7
vwPjapS6/fG10/qCVlzTxQDRaPV9ssx7Ix+ddCGlppNRXSyzR8hWq1YyPKKc
zOPBd96NtzY3D7WwL6L/6P/NXbP7oDzVSjFmNVN11eUxpmJ4eFp9hBzKYQVq
zfzyzFv2fGmm6+oOhE51c0y1U3HvptdbVnaNtz4+RUhKnX4P0+l2+WHyPiit
rm4jwyN6mSemXbtffcfGZvOiCWQd5WTH++Fi587N+PypWIEPgS6mjlKp70P3
a+lxtQqVOMa105Np9M8FjV5O7cP7lM4uiGet3sZoH+H+bwADtzNgIWDgdgYY
8PTj6eF2D8M49akurF1pQVplL0/4NLgnHuOqLhKvrGeFVTDV0pFvxFH+nrSP
AlVbApvWrOKrE6G0DI4uqH/0XcQ/Bbd7CMZVPWT57mOrlQeZjX0s0DS47yjG
ackJwGSbBRHpDSjU3+ht1t+R9lGgoTXbj3O7P2fvBQ8K7sbk++eHgdsZsBAw
cDsDDHj68U/D7bSjtDc30dzcQHO3XB+j14C/HSpZFw3NLTTVN9AtV8/6XvqP
S/tIGJeLtu7Qr2N7Gr6LPen4LnA79VAPra2tNOj65MBkvHED/kZolXS3t9Lc
1EBL9yDKb/Ii7e9J+4jQjMrp6ZbQL589F/OfGwZuZ8BCwMDtDDDg6cfj4nZa
zRhqlVL4d7pDheZR5k8aYIABC44nj9tN6Oet6eYQK5XCPijHFv79gAEG/JPB
wO0MWAgYuJ0BBjz9eCzcbmKMztpKcrKTCA2Jxf9qEu1yJYZX6QYY8O3jSeN2
E+pBmqrKyIqKIDr6Jn6xJXQMjC7YXvEGGPDPCAO3M2AhYOB2Bhjw9OPb53YT
aGS1XPz6IpbnTfls8XJ++X9+SmRVj37/yTt7EUxMaGet35/Qr+m/9/5+6t6J
ick9LqY5frq0Gs2dfUQmJtesa6fy0t2v1c6JMWyAAd9VPFncbgJ5fQyeLo6c
3rqOZV98wP98/SQ3Czv1sUfu7L+j219nYpp9mDnm9Rem7tHOGe86e6C5YzPu
3DM9neEboQFPIQzczoCFgIHbGWDA049vndtpVPTmO/DvPzxNXmkX1anRmP5u
BfHVPQwp5PT2DKDSjKMcGqSnVyr4nla/B6RqRPy/s5POLimjqjHGlXJ6JFIU
ikG62troU6j03/0mNGMoBqV0dnTS3T/EuFrJQE8PPX2DqHQ+nXJIn25YpTF8
BzDAAJ4sbqcdG6HIYytnAqIp7Wgm5folfvvqeWJutzEsbEKvGNNqYatGhgbo
kw5N7qMq7MWwvJ9uMeYlUjlK9RhKWT99/QPI+3vp6pQwNKrSr83UjCmR9Uno
7Oyif2hU2BUFUmkvvQMi33Et6hE5/eJ8bNywXteApwsGbmfAQsDA7Qww4OnH
t87tVH3kBR3iB/+6katR+fQp+/FYtomkJsG/2qsIdvCnoV9wvPp8XJydqBa+
nErRTmZyGikJ0fhaO5JW1kR9fgB2lx2ISo4nxN0Sh5hyBkbHGGotIy45neSE
cBw8I2nrbiHF3QXrayl0jagYaSvA1SmROsmIYQ6oAQbwZHE71UArEWeXs1eM
7fjSDqTVwbz2gg0xqc20lifj6Z5Gc7uU1tJEPN1SaGiXMdhWRWZmBnGRYTi5
h1BSU09BqC8uDq7cjA7D+4oDcYUNyJRKWoqzyExJJjbUmWsROTRUlhDo54nr
rVw6ZUo6im5xM72YHtl3ax8OA55+GLidAQsBA7czwICnH986txuXUxp+iB/+
bD1B8YWC2/XhvmyjntspBqrYs+gj4qq7kHfm8fFzzxFR00Znrj1Lt1wk4mYY
+55/hm0OkUR5rOB333uefTY++J19j39dbE9VVw9Jpw5i6p1MRWkUK5fuJqOu
mutbvuRHbx0nv6OfvjwPPlkVSGWHgdsZYIAOTxK3U8s6iLu0EVN7b1IqOhm4
y+3aaMuy46Xfnp06v8JLvzvLzdR6Ui8f5msrd/yvXuKlP7yOlW8wzmv+zB8W
vYGZvQOnvnqdFRfDKG0o5cK2I1y9kUpW6D627HUhKz2Ng5ve4/mv3chpkpLp
tB+LkDiaBg3czoCnCwZuZ8BCwMDtDDDg6cfj2EtFWevFMy/aU9MxpIs0i+cU
t1NqFeJ8HUmNEnE+jPvSjSQ29pDv9jF/2mlLYOQtAqy2cuV6LkODuaxeZENN
m4yxWl9++mNbKhrK2f2zD7lZ0SHSq6gtrKRbrmKsN59lf/oMl9RsEhwtiazs
YXhcO2O9jgEGfFfxJHE7Her9juASn0ObQsNoYxivvajjdh2MNITx+qI756G8
rrueUsjZt95j01Fr/G4Esn/PTrwSiygIMGbZxUDy24ZoCjdh8YVAEpM8eP3N
S8SktaEZlVBd2YhUPkpHtgPvbz2Ff2wCLhbeFNV1oGJyTZ8BBjwtMHA7AxYC
Bm5ngAFPP751bjehRVHuxjO/tKa8WYZWO4DrZ+uIq+sWfEyG99KPCMmvZ3C4
E8t3VhJV3kmR13rWHL9OWYsUWX87JaVtjPZnsfZTB2raBxmpEFzxl5epqC1k
23MvYxGZS+egnO76cmp7hhnTjJFn8yWf7djG3sO+NA0Oo1ttNyztRaHSGGJf
G/CdxpPE7Sa0GkrdTbCNTKNRNsZIfSivvWnNrbR2FI3hvP3iRcLjGugp8uJP
r50nKimbs0tWYOERRU3vIL1tNdR2SCn228kSq0ByW+TUhhjrzzPSrvH2J3vw
upmPVCalobwKiUzYB1Ubl7auZ+fm5ZhdTaJVqgStmv5+GUphFw0Mz4CnAQZu
Z8BCwMDtDDDg6ce3ze0mxoaojzvDz18+RUpxO0PSGg6/+Rk+aVUMi99uGL3C
1xeciEuLxOj3i7G5UUhVmg0fLlrFKWsPvF08sA8ooKU4iA9eMye7rJm2THue
fcWUtMomYk2/5OWNR3D0vYankx2J9br9WGBMksY7P/tvTINLkKl08XJHuX3V
k5zGflQLHz7XAAOeGjxJ3G5sqIfrR5Zi6hREfksf7bnevPmhOf4JtQx1Z7L5
7YOcPRNEmOMuFr29AY/YApLtjVm2yYSzjl44uTkQml1MgsM6PjrmTHx5Mzlu
6/XnSbnp7N30CVsPn8TdxxXnK4FUtvUxLsrtSL7I+4v/im9SMQphD7SKZsKC
Iqlq62XMQO4MeApg4HYGLAR03E5nm+/uRWw4DIfheOoOHbcrKipCrVYvWJ66
eMM6btff3z/nN+1IB/HeZzHafIEbqVVIalMwMd6OQ3g+8tFRamOvsG3TWs45
e2J/bAsWHjG0y7tJsN/F5jXLWbHqMnktg1SnXsN4mwXROeXkx3qzw+g40flt
9LfeZs/OLSxfsZIT1zKRDqv0MZBHZTUce/cwBY1SxnTxECYGCNy9k9D8FobV
msfeDobDcDyuQ8ft6urqvrXy7nC74eHhOb8Nd5XjffwQRy95kFxeR37MNQ6Z
WBCYUMXgiJSUM2YYrziMuekWjLauxuNWDl2tpTgf38+65StYZRNGSXM9ad4n
2HPWlbj8QuLcTPXnqdVd1GWHY7rXiOUrV3E1IZ9+YR+UylGkVeGcvBxNWeMA
GlGP8b5CTh47T1JpA6Oax99GhsNwPOxYKG4XFBRk4HbfYRw5coS+vj6GhoYM
h+EwHE/p4ePjo/ezdN/YFipPHac7d+4c7e3tc35TKOTIZLpzGbIBGUPyub/3
Sfr01+WD8ru/T16XMCDO5Q8pXzHYj6S3X3+fQt5F5o3rhLhbc8wuntYu6d37
5IODyJ6ANjAchuNxHjY2NpSWln5r5YWGhpKamkpPT883Ty8fpF/YDbmwHwMy
+V1boBjqp0fSL2yL/KF5DPb3IhX3yYRtkUnqiIuOwOnyGbzi82iS3LODg8L+
yOXfsH6Gw3A8pkP3zmQhuF1YWJjeJzDguwkzMzMyMzPJyckxHIbDcDylh62t
rd7X0r2nW6g8dXbh+PHjJCcnP3b5cjKus+cv7/Lqix9jFxRDxu3Hr3PDYTie
pOPMmTNERkZ+a+W5uLgQEBBARkbGY5c9I9KF5Us+4MXPD+AeFkv2E9AehsNw
/C2Hu7s7sbGxf7dvr+N2uvwM+G7C3Nyc69ev658JhsNwGI6n89DNnfTw8CA8
PHzB8rxx4waHDx8mODj4sctnOAyH4XjwoXsP4+3t/a2Vd/nyZT2/0/mQj1t2
w2E4/lkO3fd3w3o7A/5e3H8vlQnGx8b0ezPMPrRaDWOqEVTj/+id6SZQj44w
rl2oRdATaMbUjKjG9XtmaceVKGfLMKHVy6b+B8k2b5kPS6MZY3RE9YhxvGbK
+Dig1YyjHFEveNyxb6a7he47Tza+/X0yNfPahrExjb79dWvjxjX/YPugHRe2
a5wnoYknZVbr1/h8U+j2FBxTq/XrnscWSmd6OzYq7JhmQe2Adlwl7P6j5/lN
7/9HQ6drlVKt75tPSp0WCk/SXir6Pj3LNujWAo+JvjA+rkapGkPzDx64Exq1
vu89fvsgnsnjYw+RWcu4Wol6bGHt2f/P3nmHt3lc6f7P+9zdTbx3d7N7b+KU
jZ2ss0nceyzJkmVbsuWq3rtkSVazerGK1SgWsfdOsUhsYu+99957AzsJEABB
gO13ByDFIkq2s1FsOcH7PHoEAt/MnDlzzpnzft98M3+uDh4dnd2FVncaoRfN
X91eHhXo91LR42HggdxuTE5NfiFFJSUUFReQX1xMSWkphfmldPR3UZLiQ0JF
l5gj/4r+Nq4g704gTTK1LtaMjf6lOYKatso0vKIrdOdiSWviia/pYSZdGFf3
U5zoQ6r2+7+kb2Juux+vuF+b34QBSSV+Xkl0qL5N/2f38fvAQEc10T5p31Le
b49vo7spG7nHdv7W8V1zu9HBdsoKiykV8aE4L4+S4hJKiwrJL2uiv6uReN/b
VEpkDP8VTXBE3khYaA0Dg9od8kQO8D3m6/LOOuL902kbGPoz72mMM9jRQEFO
FoH+fhQ09gh+9xB6oZFSmupPalU7Qw9xEGR1ySTVdH7tPZaZcfrbXP9dQtnT
TFpoFvXtMjR/Y3HhUeJ2ys5GysqKKSoqpqAgl/yCYgoL8iirb6GxOo/QxBLa
+lV/VX9VNOeSWdNMn2pENx9rucH3M+TDdDcWEPJ1fR6RU50TTnpZHTKtvA8J
s3TwIMzQzbe6/rvEqApJdRZZedk09/19nEOv53Z6PAw8kNsNVmJx7gYu3l7Y
XNnNmgtmuPt4YXX5IiEF+dh89nOWGCejGNI+x5s9b2vn9vvlWdo9gMbGZuwJ
NKY9d3jG99prxHdj42O6OsdH27FZv5aERimaYTUt1c2ohqfzhnvbmVV2TodE
G6My0t328o/zLWhRaKgPOcax4ApR59ikfGMMy2qx2vY4n1ino5y1qfqEjFqB
7+2bttzoqPZe1/hdQRiUVFPdrZzDQxpmtDnR/3GdvGOz7vePT9Q3SUracm/z
8o9XkCBR6vYGvPu9tl1tufEZ5e7t4/jXjMfMtkZnjOH95JoYs4nx0paZ/jwb
2me6LYUBfPqz9ULeQUbGZ7YxQ9KxiTZn9ltb9uvGc5buJm1opoxjo5ppG5lh
O8NjY3P6MjYly1zZfoj4rrmdqi4S0xsO3PR05fqm9Vw0suGmmx2XjPypyItk
y8/+gxuR5QwMjczQtRbjE/Y4R9/jU3Y3PbaTMUH392TZsfEpu1e3xLFzezAt
ncLPNN1UN/YxpBl9QDuzy061Ov5gf5qy0bEH2+jd71pLQtjwX1uJqOxGfU/X
5sSHmb+Nqcg0v46hoSEbly/FMKhA5Haayeu/rV7mVMrwQD2Onz/FSvNouuSa
++r9fv2bG8vGJ3QyGaubIs9zNriQ3sHhifaZ64Ntta0Mqod15w1OXa8c/lof
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
WIp+xot8KM3wGT46GkBD9wCyzgYKyzoZGe7FcrH4XaLlMoLDLl1IYHkHSsGD
Lr7yCVEiVsdfmNvHiix7/u1rxmOkP5ujq3djE5ZFyIWneOFiFD3KfiHXY3Pk
0vIjaZk7b7y6nf17zxHdIJ+1T8xghSM/+eNBcpv7GFL3cGPxJ0Q29lNov5KV
Z8Op75Ai622hoLiFzvJMIv1usHnFIp5ebSDktOHf/riL9Op2FIpuKnNL6B6S
YTXDFmbqTjakfY75CbEiTx8SXCbH5E+8ZJ3FgOjPXRtRjwjbWTJpO7rbBBXs
e+1Vvjh5AuekRt07BOWOc2X7q+/b/1fC98XtxkcFz35b8LioYvonFyNq/djp
7V+I70rpU8lwXLmFmLoOCl23sPHLQEqaepH1tVIk9K3WzGRaIi9Y/hqHjh/E
zNyIPX9aymfbj+Kd26p7z39Mmc/WDy2pbpWiXQ2qLHPlF781pVTkMaXOK1lw
JZjaLjkV7nPbUfXnzCg7EzLcVi7DT7u+Synh+lvrCC2V0FadT0ygOTvWvctz
qy+Rk2rHrxd9QZS4bkD4d11RMU0FjvznK4dJFNcr1b1Yf7xecCPhNzPiT3eO
GZ/vukhoRhqX5q8nNL+BgRn3D8ZUWj7yARHlEuE3jRx/dTEmodm0SQfoaiyj
sl3O8GjP1+plesCq2PmbX2IWXkCPXEWh7cfMvxxGrMW6OfroKM+Z1b+Spnw+
e+41roVkIxFtd9SWUt2poMBhBQsMRP4mVet8sMRJ6NkwhlZZj+DE64msaBOx
e5h8qyXMt4qnrTObnYvNKazV3hsanXG94F6qao69vYhDRw7jECtipsjbK923
/kU2kWU6nzePelLTJTicsoztT76AW2ot2fYrWH79Ftkir1Y13GHRh8fxjCkT
81UfN3cfIjAhn/qaUlLC7Dm482NeXnmK2NJW3b09LTRNYYJTHsAtvJSBIQ1F
zltZLnJtL/NtU/U+aqu3Hz1uN46qLpA/vfAp9pH5DEyuHR5TlHBioyPp2S0o
awSHnm9KeEImV5ev5ZpzKFXdUrpbqqhu6xNz0LSWNV1pbF9+iP3bDbhhcJLV
a7az8aAJybUSMUcM4rv5Txh5hghuN6Kz1Wrfz1luJMaquYuA7fMxcA2guqMW
gznt9FLote++4zpUH8TCl4wJiq6jq8CV198wICS5lobSHPyuH2bLkmfYbBZA
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
pluPrRvmsVHdOQP/I8v7xnZmXjuKZljb1sQZihOmM8awWqnzlelzFcfQDKl0
NjbzHsGQ9t7k6HTZORjRTNQ/eU7d1LkPwvaGNCPTvqg9B0GpQDOzflF2SHce
wjf0Y1xNids2ll20J7FKgmps9C/YL/J+/bznihnnz43d9bcZ0M652vODv1b9
Wp2J+WxkdHTifDpdP0Z1bQ+p1ffN0ca0+hCx5Ie6/kYLPbfT42Hgr8Ht9Phb
wzAZ1uv4dPkKrBLqUX/PeY6sKZszq1bgnVQx+32jv2M8UtxOj795DLTkcWnL
Bjyi8hjQnkn3w7418jeBvwlup8dfBSPqLtI9jrDLyJm0+on10Ho8mtBzOz0e
BvTcTo9vg6HeNupb++55lvD9QNrRTF1jA9XVTchnnG/79ww9t9Pju4Ssq5WG
pkbhg406bvcIhIW/e+i5nR4PgkbeRXOzmDdr6+jonzgrXo9HE3pup8fDwHfJ
7cZGRxga1DzEtYtfB+26QA2D6hF97q/H3zweDW6nXdOoQaUe1uf6eujxHePR
53ZjjAwPoRn+4d8L0O4frh7S6PYfmO6KNv4NT66R/KYOCl1o/jxdjI9qdO9W
/NB1p8fXQ8/t9HgY+C653UBHDbG+GXSqvotnLRok1Zn4xlUx+AN4V0IPPf4S
PBrcbpjO2hwC4iuQDenvqeihx3eJR57bjcipK4wkrbQO6X32AfrrY1zHuR7G
+mFlbwsZEdk0dMimzzQQ8a+7qYiw5DIkUtXXxz+hi5rMSDJL65Gpvt27YYqW
PLJqW+hXjejevdP15S/shx6PHvTcTo+HgQdzu3Hdu7Cz/k3Gkom/p6/Tvjc7
a63e1PVjU9dpr2ku8OeTn60nQTKoW++tez9W++++wfbb1Tv908Rv0/XJyb59
kp+9aUGTXK1713j8QfVoy2nfC57V1pjuHeCZ32nPi9G9hz+n73Pl0UOP7xLf
B7fT+RAzfU5BfuBFfvuOGaXaMxFn+sXX+Ny0O41N+fx0Mb3P6aHHt8Gjxe3G
Z83Juv8HWwm4sojVl5wpapFP+PmkD8++dsLvdfPvDCe/X76g/W5WfBgfnxND
7sozOtxPY1sfirtnzs7KF+4H7e+jEzLN/Fb83VEZx4EF+/COKWdg9O61cgpD
LvPsJ9cJK5BwL3sdnxG3tLq4fWwRG664UyJR3Lete3XSlmSGQVAS1T1Khrqb
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
f8HhKMHttCV888sXcSuWGM4KbIjYyS/+y4zq4hjGDn+B1WZ2uFz0pUzWTobV
NEYcjUfWb/8VNS5zRzBz9X6cXJ2IKZKQbDmWJ748zCVnZ46tnsB3DkmoZfG8
+6eDVEk06PJtBfcSfEKiJcO6V2a61bhbylfRUsiyX75FWK1+LaOa1PBkrilK
WfnLP/ChqR1OF44zYfxYHNLLcZjT37a+7+3She7hh2IMuiVxh/nFzw+SG3uC
n/9hOWcvuXDOdDXj51iQXZfGzCdexDGrCklrPOP/8DmJ+vdsnSqsp31K+DWF
wQ7bUfo6rRd8WcKRcZ8QWqfod/5iVt+yGnRHGOL667/bG0FNykl+MVC3cMQ9
/LAxiXF92qRUpiTZ3QH36FSumk3hP189RI3gaLm2Qp6Qrd9DJ8+2S/b1+Ahx
ve7v6RFIOPAyk/cEU1WVyJy//J4Vl1IpCD6JTaT+fWslnhevkJgZj9X8/+W1
fSGGchReWcrvvzhJUWUBR5YepFipMayffpDW0v9YuOvcrkONRKqmJjOArdPe
4uXHf8283R7UthSw7rGROKVUot/mqin2IH/63RFyyhuxnzKEwwH5SLRaLoj4
voAcWq/HfTOIsprKS3P3YXvpMpbr3mbn+fCu81G7Ue67ibEfrML87GU8wvK5
lnqWIX9bjaWtI3Zm65g8z5yE6gbsevRIsJw+z7DGUK3JYNFMG0pqpWScmT5Y
T0sCs58/Qn6FGOOFF3jsDxZkluaybsi7+OeKPivGZ2ZMOnWSYjY89hQf7bHi
wnlL3pkyiXOxuTgsfovPVu7korMjUXkNaNr6vLfLOye43WFyy6Wi2vJY8tQf
sIsJZ+Wf+ss5G1NCiu3HjNrhQ2FtA2fGP87x8EL01KPwwie8eSiYGqnUUF+D
ytfn1ZO22/7cchkdmtTB5Srv/S6hrcKFIU/sF9ck4loLltPmd8tTcfaTBYSU
dsnOsV6IRVQJ0m4S2fO3uopNjz89qBxp5z7miX0BVAi/q8i1/0Ht1O9tWkcN
20c+inV4OsVBh3nhL+/ilJiJl9lxkuolNJWE4XglmIRwB4Y9+RmeudeQCj/q
Ovd91pvqz2Dz5rB9JIVVjQTvnMOCZd9y8vwFIjIrkerf0TwAPua+4XaqHLbM
OUFsUgXaMlfGDTPFOyyZ/eMmMGu1CdZ21nzy0XuYe8bQoOqdK2TbzWbubsF/
0hPZOnU0Sw86Eh3ogGN4DtUSGR7zxnDEwZcKWVeeMo9VfGKq50hNht8sLgcI
Hl+L6bg3B+lJdFzO6AOOgmdJ+9mfe34xey77U9ikpaU4g+yiOmqLYvH0CiIq
2IlpoxdgG5AlxoHgq1OPExlVZtgbsMBlEZOXbOHgqYuc3DaL3adcKWtQUuSw
xfA8oVI24P2cy0oRd+rP5wbEdY2JfDFlISe8Iol1ssQ1Lod6Zcf32ipryRxU
11dD4tk77gPOecQhktKSasPIlw7h6xnA/M9nsGDLPuztvckuz2XvmMF11dsm
mt56lVZy8AYy/cKre3yNqsRV9AVTca0SnaaY7W8NxdL5IhtHTODzaV/wna0t
61ctZt1BK8J8T7Ft/x4O+xcSZbaFYzt2kNig41rSOXYd3Y9VdAVJVls5un0b
0bVyomzOcuGYAxUPwBYrRm5nxJ3A956BIIlmq1kiSnH/3jX0CaZ//i6rT8SL
v2XYjvylgdup5Jm8/5tfckKMNVWbDmW6Jb8ZcoLK5hYyQ1x48803ePznXxBU
KiPlxDu8vj+MJnnf76jaqMmO4viCN3n96d+xzj2HxKMzmHssltpWNRpFM6XF
19DJ45g1+TjVYj6pyrDhl/9rTk2rVnCcXpmZJ96/pXzVdSm8/4eXOZNSgUKr
QVJfTlV9Fl8OGcP51HLkGi2yxioqm+RUZUX2s03V55u7DKF72H7Be1RtSJKP
8Ou/HKcg7ji/GrOLHP06eq2K+tISWjVqvL4ZwgdmbkT7WTH6Kwcq5frv+Vo5
MXWW4Hb6b84UWAm+bBpVjapdLq5/0nW9z5Qjo09ZM8Q8+HXBK6VqwZmtu+J1
qdb8Zmx/3S3aPmve2xVk9WmTwJJ6Ao+vZd7ey4Q4beT/DT1MWatK1Olg2f30
pPwdPQLKUmdeeGUlR/ceY+em2Yz9cCVrN5mTKdUIM3I5sHgBpq7ReO5+gaEm
IbSodV3nUb40lu17VrLlQqrhexr03wLJlYZvA424Oe46t1Pk4eaTTYtMLZqo
lfATX/DIfy8jIjuGTx7/E+Z+maLPCH+QdZrHn7Ekq6Ie28mPYqrncxoFZyYP
EfFsQ/ysIZ5JrNVnLDkWQmmDArWihbKya4Z1XT0q6woIvLSLt8e/ymtfmZEW
acljk3cTl18nbFVyraKMZkWr0HNdtpwzs+YLflKPWp7KoreOi/lKM+mnP++v
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
qVA0JLNg4myOukRQV5/K/JkD6pmRzpE5E9h4zIWiVgN1cYdMZTodSV6qNwtn
7sY/NJ/GTHsmvrIZlwghv8ty3li5jbORufJ3gofeWoytVyzN8nd1LZx/aypP
PL2esKye+J2q8khC43JoaDMMahMz/Tjox4zturs66ejo6rd23BvPtWv4mLSX
V3C/OLPmhenLIjO2M5OZfvxkxnZmMtPPm0YStqsM3cv7q3dx8Og+tpz0oaBW
QUnUad6f/RJjn3iCLWeDKcqOxeKDt/hipxUhUd6sfW8OX+85T3l9CS7/Xsir
M7cSkpmLz95FvPHcOJ4YvwyXqDLqy5KGzJeXEcziD2Yzbtx43t1sT36dGrpa
CNpnmj8/aLBsF1a5OtVlOCyez8uijPHjxzFu/AR2nvXEz3Yv77yxjKMeaZTn
x8n83/9qJ56J+SQHO/DenNf4aq8NuXVtFEaa1rM4O4qN4v3Fa46SVNFCx0CZ
okvICJbyfM5RpxDC3I4yb+ZijromUZLqy+L5s1gs6peR6M/i9+fw1QFXyhuU
dHYYyXZYx1G/WCqVHT16D/yY91edIKGwBfPK3Y+TfrzYrhtFZSYxsWXo5RC1
XRh1alqammisb6SpRYleilP7PUvt6mxHp2qjqbGRxoYm2lQ6czzYyyAJ22k0
Grq6uszJnMzpR5psbW1JTU2V8diVKlP6zUfCds3Nzde8fuZkTuZ06SRhu8LC
wqvGz93dndjYWNRq9eDnHR10GPUoFRqMxo6++0a9Bq3OQEdH5/fg1YFe+Cg6
6eyA73pX8NRodbR3dAyffxjZ+r+v0Rhpbzdi7Oiio/P76+a76/k96jQoddJa
mUV6UgjHNx4kLqccTccFvUsyd/wgmc1pZCQfH58rgu3Onz8vj8+rRl0azi95
hOvv3EhNJ2jriwn1Ps/RvZbYn7Zm3zFb/CLyv1+8n+52avMjcD97nJOnbLG1
OsFJe3dSCusxmuHdJWn16tWUlZVRW1trTuZkTj/SdPLkScLDw6moqLhiZUpl
bdq0iby8vGteP3MyJ3O6dNq9ezfx8fFXjZ+9vT3+/v6UlpZe87r/nFJdXSXu
m6cz6aE7mLnOithss/5/SknCZFcC27m5ucnr6sNTt/w7QUe7Uf5N2GA0yudL
dnUPOO+xs4NOcb9/kn47GAit2lujmfGLX/LC4UTxVwfxO+fwi1/8gt/dvZ5A
H2seuft34u8X2B9Rd9lryl26YtZO/YXIdx3vHnbF7dgS7r75F9w9Yx3Ziiu3
R+mnSJs3b+b06dOcOXPGnMzJnH6kaePGjRw8ePCKjmUbGxt5XV/Cjde6fuZk
TuZ06ST9Tnv48OGrxk9a09+3bx/W1tbXvO4/t2R9/BB7DxzG0srsu/3U0o4d
O+TfTP5TcnJyuuS6XZdRRXVxNjFREYSFhREaFkq0FF+2SUXflscuNcUp0aRk
ZpLZl1LEe0V936j2vkiZ53Ku++XtOBZLe7SVWD73B37961/ztnW2vD8z/fB0
Gev94pUzyF+BmXxDNzhJZCxzYdTvfi3K+TNWeQa6uxQcmvYLuZwvfCr/Yx39
lGnt2rXmdTtzMqcfebK0tJTX7SorK69YmdK6nfTbT35+/jWvnzmZkzldOllY
WJCQkHDV+EnrdgEBAWb/wZzM6QomCZNdCWx36e/tuqiPP8sXsyZyw50PMGHC
WO758//yi7snstziLPXaHuDW1RbPrL/9kntHj2Z0X7qXX907n2R1v+I6FRyb
9QtuvtuC+p4bJNutFOVO4GhEGaqWaty+mChjsl++YYl0okeHVklLS8swSUm7
tLhnrMH6kwminI0kNGhoqkxh2SM963ivHE77j3X0U6bhY6l09+3/HWpba/eF
Z+Y9rz8D6u6Jf9R57b7Oln736eww/Q63e5i++XOkaxJLpbtnT0dP6hqwl+Mq
kySLtFdE+s5mKDnEvc7hnpnpGlHPfp8u83fxV4RGUiyVHtswxPdEcsw8Ycs7
//u+Q3d3pxxzYcT1LskW/Vfr32MLu0Zi3a80yXa/6ydV16sTS0XLqRd/xS9/
+StGb4xEWmdz+mxsz7qaSJY5PWcl6rKt+c0f7+bBhx/mwQcflNNDDzzAAw8t
ILMfbDDWBzLxul/ylm3eIE6a2hTO7v+CR8XzX/3qV4z6whejuF+X5MTx48eH
SU5UG/uX0klVrAvbl8zgul+Kcn79JywSmv5jHf2UaThs192upq6qkrLSKhSG
AbFtug00VJdTUVGH0vA9vouUbM4VN2j/jTJHKl2junYbaa4qIDarBuOwfth/
VzZdWy0ZsQUojBfwXDfKmkqU7WZ8J9HVx3bdtGvbqC4toqS4mPKqKmoa1XRc
Iz+9XdVMaVEhifHxlDWp+uJoXdjb0a5uISchjto2KcbW1ZLqP4z7/BOn7nYN
VTkJFNYqaB+uUbrNOrxcGknYzqhsoqqynPKKSuEnlFFWXiF/l1fV2ExzXRkp
uZW0aY3/VdutayqmsK4JjZgz+vZ//Rf5XS51GVrIzqylTWUc+oUfKGvfOOnU
UVuQRmFlA1rjTztaZrtOSWl+CSXljRiGq+oIavvLoauD7VScnfkA9957P49u
DaHToCR08ws9uOlXv+Z4hkJ+qyl8Hf9aZE1KZqo81hMSkkhNSSEtq5yLvbeT
/LMLue76uwioHtynUw88zy9Fmb/78x3c/8gYrJN7/Il823d44oknhknzSDeB
JWoOPH6dwHS/5dY77uXRsRvIN4f3vyQNh+06m/M4d3gr77+3DKf0RoydF0eG
UZHNts8W8s2OM6RW65EfDXX2xIC9s92damqbtMK3GjwIuweNP9O8F97pu3/h
nUFlXk6+gfJd+t5g2b5LbkzvXeJcjgvvDX4+sB5D1fUH1mUAv6HeMdFXZwsB
BxbymykHqFAbe76DNSn78trhcvQ2lC8n/V0aa8vUW94htEZLh/yenqAd20lu
0ou/h+I1RDsM5D1AP6Z6GF6ekUhXH9sZKPA7xd71q9m4YRu7d3/LetskFJqe
WNwDx37fPTC5P3S7XUrnQ5VrJO/8UdatWsWTTzzKepdEFLoO+Xd7RWMrho5O
mnMCmHXrLez1y0FlHPib+Q/pqwNtTL/7F97p1FDfpOm33n05+Ux5fl85vvt9
0zFxKdt2+XIMU//hePeW16UqYP/su5mzz5+GXj/XpGzxf4eyUTzTX/zN4BK2
9OdOIwfbdVEcYM/+/Xuw2LWVZZ98yOqN29m141t22vngdmodY17bgU9qNe2X
Myf3PertOwP6X//+0r//lPutY6WdHzn1ajpUAlOqdcIWdA3L53Lm+UvfG27O
MB2nhqpgFsw7S0xSz5l0JrZS6vMDZB0kl3xtWqZk61TNCmGz2+lQl2KzdCLz
Np8mu0Y9zPw+sB5DPRvGhn8PvV2+7hjQhoNlg8H1bilNYs27n/HZageqjH2F
98vXLaCuCqVSIdv94eowkuhqnYHQVp6El2c4BdXVpIXYMffe6/nT/93NA6PH
EtqrzIwjE7nnE0vCwnxwdHTEzdWb0OhoKsS81qe/9gYsXriOP754krZBXLpF
Ge8y6sGx/HvjMaJKLr5hVDdSU1MzxL7UGnG/2QSrd3erOfban3hQYL6dx3wo
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
FHOOw/Lb+P2So0QXNPbDJnrhc93MRq94QvZ9xP64KhpTLXlz/h5CQz34+PYb
WGQZjNPOJ/jL/7uTBTuOcXj5/fzPVEtqm8s536/MtvTLy1en0RC39ws+PBxA
dspZnnjsTWLq2wjb+iEfH/Mi6NwmgWP+hVt+HdZTf2cim6HjgtwGvJaNZum5
GKJPvcX1Tx2lujyFrQ/9H/9zx7+YO34C6zzTCNq4yLTMAkXffNWc5spDf/wN
ox5YhOWxtdz7+9eIqtfQlmPDa/d/TXBqFr67n+CW178lv7YExyH1ZyB+UF1a
iN2zZFCblMc79/JbhqXVHv7x+/9h+ofrOGG5T74+nZaHy5YZ/O//jOKxz75h
8cRHuflX80ls0qLIuoDt1ERu+8ikTu7pedgvG74dPjyV3G/Nc3i93TzqX+y0
OsbCf/yJdx2y0aor2PbWS1h4J5Edsp/7//g8YdXSGrAWnx2biW7Q0zqErnJK
ktn6YP92yEXfq/SWdEcevOX/CR2MYdyEFbhYL+E3/2+7qJeBfI/PuF5cl5ZK
+W8dLE/HyAV3V39PZif53tt4YdJDPP7KYg6c9aagVmBoYQ+Sj6xg8rqzRKZE
sOOph3lvgx/50a5M+OsfGHX/Rxw8YsGjt/+OafNXcujYHvn6SHQh9Rm2vPvR
HvwC3Fh231/48FAozdqL84Gq4Bxvj1mNd2QyfgeeZdTMr0msriY35iz3/XEy
O874kt/Qs05Ip4aCxPNMfeYrzgen09rexrk3buehh99l+67Peei2NwjIb6A5
2+4SPPWcn3UXm50CCTi0jIORhdSknhnwvjv2u5/i7pvvZN66vRxY8Ri/e+kQ
eRUluK36B7cvscAvs5aWzMvLl1OWw455C7ENiifo8PNMmm1JUVk66+ctxdor
gNOr/s4fX9lGdmEws176Ct/oKHY8+wEheQ399rAY8P/6aT63DST09Pv8+YWD
5OQksWfCfdx05z9444nxrLE5z2czl5iUmVV30c/p0pWza4AcxZJs78zmgHso
CYFWjL/rNU5EZuF/7DPuvfU+Plu/h5Ob3mbUTX/jo9X7OL59Inc9K8rNjWWb
4H3jHf/gvS+XMenxe3nkQ3sqW3RkCWz3lMB21fW5g+qYmBbN+nv+wovfnCGj
tpUoi+UsO+KCr8M2/u/Pj2CXWIXOPM/30cjBdhdpILaTyZDP6uem8f7Hq9j4
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
gdB/gbh/AcNVC5vQ1yeED5xpJWTaFUxRwglGDZCnRejJauqd7PBJo0WZx+J/
vcDpqFz5Nx1NS62wOzr5myDp20rzOQojE9vpi90FtnuTE/5pXAh/0K3NZtW7
VsQmVqEtdGbS+H34hsQIvPYOh8+HUaM2oG2tp6ZZ3W+fjLBH1YG88foq1qzY
yeY1C5j29r9ZsnwH4fnVaLu1OMmYx1tgHslZ76ZQ4JSZAtslVjbi/MEkdtl6
UtZYyDcvvj2IT9a5pTIWSqxQm8ifZvkKS7eeIKlUgUHTRk1NC1F7pzFz7RHi
Stro0pfyzZQn2W0TTNSZT3r4VagodO7lXdZISVIA78x6hbv/8CZWPjnU5wrM
Nk7UObIaTXM5ka67mTltHKPnric8T2C3XllzU84x6a0tOEcUiD6up6VWzMOq
Fs69N1HU049ypQqnT1fiG5eJQi3h5ZNExJWhF2OhoK/uoj6GItbOepsvly9g
jXUwpfUakzpKsr65w56E8jayzyzidYG9EktN5bZ082H5swP01qKgKj8Z25Vz
ee7h2/jwkBslzfofpDtfr+N8a7GVw9G11Madungdf+FawnCWOB63o1zfRW3M
MVZYbGBXTClxVlY4Hj0rsF08azft4osDwbRpdahammhurif84Cp2r/mKoOQw
Vm3YOeB566DvwK41Xa1YKt9F2lwbbru+Zx3viPA/K/MCWTpa+vtm/vrP1eTr
DMRsncovb5lD5iUAl1HVhuo/3mDRKcdoGCayrJmGoGHPQOgU82vGGd5ZH0C9
8AVKfddy9933E1yiQt1ax57RN7POK4cWvQL7SY8xf5sjBZVV5HtvZswSD1oE
frJ1TKKqPp/tT97LQWHHUo5N59HlJ4gr7P+9WAsuh20orKgh6fQC7t8ZRbbH
F9x/6wecdA8l3PscO07G01TkxlOPbaGoto2mxAPc/Mgm8oWNyjxxscxy368u
K19eXS2O7zzCQ5/sI0j0fbdj2/AqqsN58WOMXbwbn8gYXKx3cC6jGIcDp01k
Uxp6f+Rpz2P+3TdyNDCObO9vuPGhTwkvrCZ+z9M8/KVXz9oCejz+bVqmQ7rw
i3p9sA5dA3seu4mtQYW0tFWz5amXcMuvp0Sqx9Svicgto6rEl+mPLyZT+IRZ
J18ZQn9qnAbUxbOohjMTBrdJXXOV3G5bA4ppbWvsvZZ4N7JPXG/2LaAu7Sg3
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
nj+32ZnC5mZsnr+Bex5YwJ69y7nnd68RXa+hLdOamfP39OVbZBnM+R1zuPV/
7uChhWMYu8SBJvm8aTOZyUz96dpgu4Xc+vsPOOMRKubVs8x77QCF9cLHai7g
yLQpjJq+mgObP+fJpTZk1GlQF7qw5B0LwhPj2PLUJFacTaAixYb3PtqLX4A7
y+79C4sOuWO36U1uuekuHvjoCxZMepw//n/zCM7MwmnVP7h98W58U3Pw3DyO
W274hozyRpKPfcHEb+2ISA5n2+SHeH+Tv8BaLoz76x+44+9vc2Dvah64/U38
8xswGopZPuNlXFIrhJ/S35IIbDf7dhbusSQo1IVvVpykpFlFU6Yo567fi3Ie
YvTYT3GzXckTi04REX6G2/7vFbzy69HXh/LS3xYTmJyBz/rR/Om2v2EX5MvW
Mfdy0x33sengIdY8fBc33v483+45xOqHRjFrXxANajXx+z9n+RFXfM9t4//+
/AhnggLZIvL9+Y6/s+7gXj58eBTvWcdRXZzMhnv+wtS1NqQXhjLrpZX4x0Sx
/en5BOc19PkXnS057Bl336X5Nmew9Ml3cBX+5OEXb+VT2yiq80J4/ol7eHSD
F9VtOqItZrLUIUa2t33tbbtA2PeH+GjNV0x8/O9MXOpEZW0OG95dirV3AKdX
3ccfX9lGVp26z0a3t6Tz4f3P459bQ1t5GOP/fg9ueRUUeq9l3jZ34oQePz0Y
TUNDLhsHllNZwN5Fb7LLKYK04EOMHvUS3rn1fTHyOlsy2TbuXm687V7mrVjK
+Mf+xiOLHSgpjhM8X+B8YDINlfHMfHo8JwQW97JZydi7/s79rz7MmCXb2b36
be6/817um7uYt5+bwl+vn8UZnzAOrvg3e0478/+z997RVR3n/vc/71rv+/vd
XCe5N8lNXLB9k9hO4m6K6cWmFxeascE21djG9N47SEhCICRAIARISAgkJEBd
Ql2o9957b6c3HenzzjkSagiME9mG+HzX2kujOXvaM88883z3zJ4dFujErKGf
YXY1gXR/C9ZYuODr78JO+1ByKppIvXSI7TaXue5ixTuvjcLyRixVOR3czjc4
Bfclc3l5wha80yqR5Hgyd549PnerB+Sdqf7wOHG76jCrXvLKLswSct3J2Svu
XDowhr/N3oLrNWc+HP43nv/LLPbt28KYNxZwOSCe9KTbLJwn7r0aTmGqG+s2
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
QODfhtsJe1KYl0NuTga55U291lIeX+hpqi0jPTmJjPzKju+0P2nQNVOYW0SL
+tGfp//c0DSVkZGdS05GJhXNmj5rwd+DNiXlRfkdelZWj3LAHyK0Ul9eSHm9
ROjDTyNRE7d78tBSU05+fi5p6bnUy5Q8CccItMqbhK3IIDk1k+oWJT+Reg8g
9EgbqiivqEaifvxstYnbmTAQ+Je5nQkmmPCz49+G25lgggn/FP4duV17e5vx
DN7Hez2rnbY2vXFv8WNdTROeCJi4nQkDARO3M8GEJx8mbmeCCb9s/PtxOz3y
xjJScyuRKLWPL2/Sq6gpSKeosgHVj/VhehN+MTBxOxMGAiZuZ4IJTz5M3M4E
E37ZeNy4XRcX67PoZjjHyHj1E9f7Pjnx1/fw2odH8E6p6vc73B3pHqHMzri+
sfeX+eC49t6RXXFt8mIurhrJ5wcvklklv79Ojy0pNeFxhInbmTAQMHE7E0x4
8mHidiaY8MvG48Pt2tBp1ChUGvT6VjQqpbhHg86wt1KvRSGTIpXJUGpbjfst
9a1q45mvLVKFsF964+mthrMM5eK+qthzDPvIAr+Eyq7vXrS36415qjUd6aQK
Fa2GM7fV/ZSpF/lrRbyoo1IqytToxH0qo8+jUsqQiDINZ78Z+JihTIVc2hGn
6zir9b76GnhbWytquYyWFomI0xnrk+m8nI+PuBBX3CTKVYjyNMZzN/VaDUqV
2njWowkmPApM3M6EgYCJ25lgwpMPE7czwYRfNh4fbqelOi8RX78UahqaKc+K
wd9XhBsVNBXFEhkeQkjAbWLya5DIJZTlphERHIDX9duk5VejUssoS04mIjSU
m2dW8I8pe/FL7OZ2KkklUYHC/40Iw8fTGRcPb3Kr6yjLSbivzKraRkruhuJ9
25ubTs6EJmWRFnqHAL9g7vh5cfnqDSKzypApWihPTiU6PJRAv1uEpxfQotLR
3Ke+Mq2WxopCkiJDuO3lQnByLo1KHQXua5h37BqRiemEBPlxKzqDepmaxvw4
IhKyaZZpfrJ+MeHJhonbmTAQMHE7E0x48mHidiaY8MvG48Pt9JSFWTH4b/vw
CyunuDPsHVbIrdVjOepwSXC2HZwNjCMv5QYbNllz9fp1do5+g+X7nUlPuM23
07dx+VoYvrYf8Or7WwW3q+ridsUx15j57j946f2P+XrZe4x4+Sk2XLhFtLfZ
fWXevBmC/eyxPP/cn5n41hA2H7dl63vv8tyzf+bDr5YybvSbvP2FDaHBzqyd
vhvna6H4n5vP4EWr8UzNx3NV7/qWNxRhs2EnZ6+4c+nAGP42ewu+qVVkCW43
V3C7qNgQvvxgBG9tOE9CeQuJDt+x5eJNchtMZ4ma8GgwcTsTBgImbmeCCU8+
TNzOBBN+2Xh8uB1oizwY/Y614FmVqAzhwYZwIf67F7Lkm02CG7kQkVFBgtNS
Jq7YxpEzTthtn82+s+742S7k7QPOhJXK0ZaItEM68uk+rV6N19pl3AhJoknT
StjhKXx82JHo8Ev9lFlJodcaRh11JaJUakxdYvhf5B9RLKE5+SzD3zDHYul4
Zh9xEnxMLiqfy9ej38bW3R+3rb3rW5vhzqgxG9l92AFH6+18uPwo3qmVpF3r
4HaG9OVBhxjznSU37yZzab898TmlosYmmPBoMHE7EwYCJm5ngglPPkzczgQT
ftl4nLidqtCT0W9b4nOnDGm2CyOHW+AbXkpNUTJOWxYw8c1nWXHKk4Az37L1
lAcJRS2oVVKqyuuJtJjM6xutCc5vRJZznZEiH+/QClq7cpfjvmYDvtFptOja
yHdbwSRLV4JDne4r0ye8ghz31UbeFV8mN6bO61xjiy+Tos53Y8w4Gw4uHMzs
nXbEiHq0qYvZNXYclpcDyMhI7FXfzAQXxn52GPfwPJQaNU3VlTTJVWRdE2VY
iDwN3FBTwM55n7Fp7VJ2OAZTXKuAtlbhZ6lp1ZveuzPh4TBxOxMGAiZuZ4IJ
Tz5M3M4EE37ZeJy4XWttCLOH78TOPoRw1+28/d5qroTF4e1yg9TUbJI9dzPN
8gZebof5YPgyDpxwJ9DHg1MXI4m6tI0pC7Zg6xZAhKc577y6lss+OSi7eJEK
D8GbbN0DyCov5/bR2Rxz96Uw1+++Mp3vpJF4eRkfbLMnNK8JQxb5Huv4YMcZ
/JIKyLtzmjmbnbnhuIdZn2/hon88xUVhrJq3FZ/oOHyuevaqb1RGNF/MGc9X
uwSHDPbnsoU98VmFxDmuYNZ+B8ILmjHUsthnH+OGvM1pv1ikgpS2q2sJD4mm
tLaZx+9r2SY8TjBxOxMGAiZuZ4IJTz5M3M4EE37ZeJy4HTThtXIpM4cuZPmi
95j43jCOuvpwbe+XmJ+05Jz1PpyDEqmT1hFotZSPJgxhyNBVuEeUIJMU47Ji
EVOHDGPo0CHiGsaRy0HUye7ZNiVea6bz/qptWNlbs9PqGqnljbT2V+bFKzju
+YwP39+IW0gJcl07RV5bGTHyE/ZanmLPWjN8YoqQaRpFPZbxzc69mB/axUW/
BFGenHCr5b3rK2+lOMKRz+dMYfCQIRxwCqKyspDr+75k5oo9eCWVIdfqUZcG
sv2QFyl5jUau11obwYovV+MVm43S9E0EEx4CE7czYSBg4HYKhcJ4Rq/pMl2m
68m8nJycSE5ONvKxgcrT8MzHwO0aGxt/9vaZLtNluh5+nThxgry8vJ+sPC8v
L+7evYtcLu//nlYtao0WnfirbW0z7kc0PHvSqqVIFWq0On3nvTrUIg+VVmv8
bsC9OLlcpNN2p72Xr07wMMdl67nmF0N5o9R4z8PK7F0vHVlOy5m5356QnAoU
Oq3x2wz3fpdLpUgUHWmNZfVb3zYRJ0ep0ohy9L3yb1U1kpWego+TJZdCkqmS
dtdNq22ltc/9pst09b18fHwGhNtdu3bNOD5N+GVi27Ztxmd9ZWVlpst0ma4n
9Dpz5gzBwcEUFRUNWJ6GvPbu3UtGRsbP3j7TZbpM18Mvc3NzoqKifrLyDM+T
DGsMBj75U7azIDWI1RPHsMfqIknZhT8wfRYe+yczYuVu3CJTKR7guuVHXWLq
hKE8PXYNV4ITBjx/0/Xvf7m6ug4ItzM8ezGsq5vwy8SBAwewsLDAysrKdJku
0/WEXlu3buXQoUMDOpYtLS1Zs2YNZmZmP3v7TJfpMl0Pv9avX2+0AT9VeTt3
7mT//v0m/8F0ma4BvHbt2mV8ZvKvwrQn85eNB79v1077A9aM29vbxV89be0/
xsZxkbdez7/jlnSDPPWP7TlZHXJ/9D7t7qf29o529U35oPjOH426pBd56H9Q
uSb0h5/+fbv2B+wpaTfaB0Of/hhd2t4u9OVx05Ufsb0DAaPdaXvAOOzv/h4y
vmezeqf9Me3/D0BPG9Kmf7Ct+YXgsXrfrv0B9qG9vWNeMPoRA18n45z0c+tl
H/yY7f3XYfDz9B12+xFT3JNxh51vu1/ehr7vL/7ebz3m/Y70/3Ij/q1get/O
hIHAA7ldm5q6snLKKiupqKygXFyVIlxWWoVUJaUyP47cGpkYpwNcoXY1JUmJ
NKpbB3bMG23RAOb3g6GjuaaA+OwatG0Pqcg/W88HpHvUea5dJ6MiM/7R+7RH
Pymba0iIy0Wq7Z1QJaklM67gvngDdPIGioUfkpAQT2ZKLAV18oHXpV8Qfmpu
16aRUl1RTmVFBRXl5VQJ21Ap/pZVN6KQNJCTmECNRC04woBVxwhlXS65tRJ0
DxtDPzF0iuZHau8/63M+KN0j5deuFXaniMTcKlStjzbAumTc2pk2u3fa9lYl
VQVJFNZJ0f2Mz6p08iZKiwpJSkggNy9L2NZHb+O/Ix4nbqeVNQmbUE55hfAf
KsooK6+gtLSUqoYmmmrLSM2tRKLUDiwXb9dQnZNFXZPQy8dGDfTIG8u/v70D
PO8/an6GsVxbkE5BZT1K7SOc4NlDxnJh5zPTCqiTqHrZPY2skYK0Yhr6xBvQ
qmihsqyYlKQksnMyhW2pMMrlsemuxwAmbmfCQOCB3E6Vj+3W/VicOMHRg+v5
eu9hTtic5OD2/finxmCx+PfMsAxHoemHg3U+0+n1P719kfYH2Z62Mva+O5Sb
uU0d/ltnXg9a++nKq/cPfeLaaRVcol6ho1+XsJ/69p/v/fV+UPj+e1sIOfcN
vxtvQ6lc+4Bn3v3Us2/7+xdE/+1r1yNtaDG+K/7AtnZC35DKkWm/Z/rxcOR9
+rS9n1DPfsoNPstffvUxd6oUtLZ3t70o6hKTfreQkCplV3zHjzpy3U6xZeMG
hr7+Mu+/9v8x2zZa6JL+ofL8V/qpz68P+uGJxU/N7VSlgVgcOIb1cUsOrVrF
vgPmnDh2hO3m18m468nHf/o9x/2zkPXD6/vvm97j9UFjvsDtK5ZcjqZOjKHu
vB7Unw/Kp580D7Mz35NvY4Yfc55+cHuNKfQqGpqVxrMiuot8sI7ei+8vXf/x
D6i/vpk7p7/lD1OOk10jfaQ1zy4ZS2oJNqR9/zjpNbLOs9vb0UtysF7yIgts
/KmXae+r+Pfb4563t/cb7hnXv6nUke9pz67Nmxjx9mss/Hwqvxpn1aOeD8AD
9KW/ch5uQx4/PD7cro3iIBdhGywwNzvEujUr2b7vCEcO78Dc2Zsb53cx5CMz
fJKr0N1v5PvXlb7+RH8d01aN/eIFXPGJpknT1nnrQ/rwx9KFXvnKSfA69JD2
GhOgF5ynWalG20WGHsUe9ZfuAfEPsG/6lnwcvx3BvD0OpFVKHzDv90APGadF
ezDl9S8455eB9N6gExlUpHqzbOjXOAdkI+k1GFspDXTFfNdWJowcxrx5E/mf
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
GTOean8LFy7E1KlT1c791pijIQ296DRv3jz6mclvLdSczK+//hp/+MMfNPQC
0qRJk/A///M/9PFXX32FP/7xj8+dJw1pSENPRhTm+tOf/tTz93CMY6q9l19+
uedvKlao9qEhDWlo5NDrr7+O//3f/6WPqe+HqL+fZn/jxo3Da6+91vO3JnfQ
kIZ+O3366af09/PDge2oZy9vvPGGhl5AmjlzJv7+97/Tx9OmTes51pCGNPT7
oVmzZuGdd97p+futt976zW3+4x//oHO37r/nzJmDd99997nLqiENaag/vf/+
+3j77bfpY21tbYwePfqp9kflCx9++GHP32+++SZNz1sPGtLQ75nGjh0LZ2fn
34zt3NzccPToUZw4cUJDLyBt3rwZx48fp4+pNfH09PSeO08a0pCGnowOHDiA
vXv30t/HUX+fPHlyWNpduXIljhw5Qh+bmpri1KlTz11WDWlIQ/1p48aNOHjw
IH186dIlnDlz5qn2R/VFxZxjx47Rf1O5gyZ/0JCGfhvt2bMHXl5ew/Le7kn2
QKD2pOqhwSs9vs7jO/r1146QoqqrYWpweNvDo/ZAUPRD7ac9UG+P+u33VLoo
GTo7IX+Wm6kR3VFrw/3edffcC+WDI02Pz8m2z2t/u67u9b2GOS6NhPJcYsNT
K5QsctpOmvLbSpfS30daGUl7IKjliV09J8n/T1l33X2OUBs9caHzrE78N4gy
PEWRdz4923Yp16t8fgp/5vvbUTmLTAIetwNt7a1oY3WAJxRDIhb27mOjrMMn
ddpbSZ12FngiiZod5FLF2qSKNU5VN4fohESoPE/9y+OCw+fTuENRt3tvMznE
dD0hhFQ7FA8iUe91pL5QSYp+RKAyLYlIcQ11Tqqyb1YXtd6pQHkd9S9pSyhS
9qk819uugj+qT7FY2X43f0IpekMYte6yAJwOFlqJHtpZHHrN2a5eJSjaVbal
tgekVNzTN/0vtacbNb5lYoVeiU472FyIJCLFb7+xDIbtuqR8tDAbUV/PBFfS
Z6OiLgnamA1oYLSAJ/k97xkkBrOuCS0N5cgsaYLkGY1nEbsJWRnl4PTdAEq1
9LsnPhPWhr88Rd5FnGYUZVSB+yg9PqPSjWsonnKzK9AhkuFZcvU8sJ1MxEFT
XTVqa2rQ0NiIpnYB5M/fFMNUxGiub0FzQyWyS5kQyn7fglH7vjeW5aCqmat2
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
JjCusOmpSoHTPuEXrY30/sejjFltQ0WTy6nNsWHoc9oCgUGa1QmuBJa2q7f7
TwYt7cryuIKpwJQNVVH8IH7r+s0FyhsFw01rIo88+gzaTlkdNBl5errQ4yMc
DWmsu77MjS+e+p5NSz7n73/9L7bYxwuc1iDrPOHKPKaeChY+rQ5NhjW9uz3G
B0v1ScopbXwnLHgZvjcMvbCCP2xPpkxlgew/dhOdb17k6x12Im5Vk22vy05j
dy6Mf4yDPumo6lRYLhnEIkMffC5N4/GPzpCdFszut3rQvddraJ87yaxX/ofZ
RjEUJzox7I0eDN3nTrlKg/ueccy7ESLa3WxZdcSbr+Dxv+8TOEtNXNN1SrIf
W956jr/2fJWf1y9n8Ju9GLr0Kpe2jOMff+vN20s3MOfd/nTvMofAIgVeBxex
+Kw1zje0BGbrj6mfFzsE3789/xqThgxls1k0leWh7Nhyg9JqDcroZmynJPj4
EgZsvk5IpDvbBr3I7EPewu84MvjFx9npmExesB69n/g7ZwMLURU68+U7e4gs
LMf7Pni27v0va8F2mqoktkyeh4GzB5fX9OTxr46SEOfLhv95jH9qGRMR7cO6
ZxqvE4sr8D7wy935XNVn7KjVeIYHsmvoFDyy2+Ie9R37qrn8xutWrP52Tjt5
spSN66zUFWNx8F2e+9vzzNxzgqNLXuVvX14kr7KCoE70VpQa2NKOxGJ1y75M
TVEQ054fhVuOEmWKA2/26IGDiOOTzVczWduWCJ/LzDvsS4UioYNusopTOTB9
HAcsAol00uHVpz/FTbSx1TdpRB+uZc4xO6KCrjB4wDd455UScGxxB/nS/a7y
5tN/p9frgxg8dDmOThd4vc3frm5nmThLR8TPlvzyfFfm6wWTFXmTX6Ydwi3Q
F63RH7DKwA1ft6t89slabjgKHFlTJLDdzzK2K0t155Nh/Ri805psRTXehyex
2FDoper3w1/N9OD3ZNYRZ6HFx++9xZCvF3PqppPAvuXU1qsJO7eWEVsN8Ahy
Y8/It/l5j8DAXia89+LT9HplDkeO72fA80/y+U9rOHrioHx92juRgihDZi3Q
xd7RnGWvPMe8E24UV7V+Z51ks4keT+8ROKuchKbrsFBvtN7rR7ee/Zi2cjHv
DXqJIQvPcWbL1zzT/QXenLeKWcMH88z/m4lLUi7ex9ew8vQt7Iz20vPZd7gi
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
d8HfzPsh/f70fw3bSX7o136XdZfK2n3f+ZAeNP2bfRqNtvSfbgL/G7Fd8zj/
M3XN7yrTQ9/zkG6jh9juIf0e9GuwXUOdmuLsXJQPP2DplB6Ej26orSQ3IYKU
wsp/fR9qg5qsyEhK1XW/Op6pLkwkseg38H5Ifwj9X8F2sr021KAozCQyKR/V
PT/Gv3eFVaX5FCqq/lT57P889MfH1Q21VeQnR5FaoPzX9882aMiOiaa0SvOr
+7FeoyApsRBl5R9z9uSDov992K6OytIcYlPyUKpq/u34rtH31FJR8jvJJCqs
VhRRrKj4XXIn/O+kPxeufxD0ENs9pN+D7hvbCZ9WmOzHBS1d/LIr75nfqHOc
08k4bej8femdMEdDh+cbOq4ldvYu7A58OmN832Xb3myoR1msaJc/r6Osrfdv
u3Of96TzIcPRHvc0X+p6UKmuvT993n6vPp3t7w7BPK64zbkEd+mzNrfj9X/g
+yshgncbfN9Juc7afid9dE6d+/R25e/yzvNf6sN71dGZrd2Dbq/j1+ng/unf
hu3uOF7uo5HtO7PTMm3vNdSrKC6rpq6mGKdTi/iff+oSmaf8TTkL1WW5OBsc
QV/Kn6++R033a2t3aMvdyv9LPu1OfDrhe/9l28rSQF1lKSUSXmp2a3fq29/g
A+qKo9CZ9CLfHLAhT6m+g0+7x3iuz2TfJx9iHJRK9X18p9W2PnWmI9On6OMZ
kNfOljo2qbOx++t9wh9F/zHY7n7mKPmekoCb23j7m71Yh+XQ0bP9hjHRgf0d
7Lf5WvieMqUKtaoY72tb6T/hTjLdP2nKC/C5dYGrDiHkl9/ju6M72Nj9xRd3
rfi+5qjObPx++fyrZevVVVRWVrScc3nXcncYl/e+9+ejh9juIf0edL/YrqY8
jt0/zcQptRxVtUr4cxXSDpgaVbUor5JzfjfUSXmjhf/TVFFerkQlz7EN1Kqr
5Ty8qiol5ZUiNmsaXw0CL1Yry1EoK9FI50E01KGqrJRz2kr5ittHWlIeYRWV
5eWUV6ga9++If+qqCplXRXVz/sx6UUc5ygolVaraTvncke6jbIP8TCUqjWir
UkllVWNmcpUih6v7b5BeWiF/Eynl8q9oI6ukm0qhmxopN7+iXD7jookBGlWl
aEOFfM5uQ/O96gr5XlWHd4N1+BwezYi9rhSWlgl9qu6oz8Z7NVRVSHKIPtDU
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
RaAUk1O0U8aBMTy3yZeMSFt6DthKepn0nqIS68efYqerGxP/OapDXSrq9XK5
L9a3HSI2vsA3m91FffRiHCopK6tHke7E/C8XcDIkhLVvfoGP6FuKqnx8ji5h
WP9nefmb7eSUSVz5rS75SN/OaKXvvtp1J13ttaWVy2jtL/d7uX2sJZ7VwKG3
erLRM4nSxAM89tY64kR7S9+RKirKaBBlPvBmTzb5pgtZmrZ3G1UErO9ar5Q9
E5lmG0JxnQ6DXk1ZaS2mdvbXrHsfoe8mVEm7eOxpG2J9bXi0c546LZ7znuWT
TQ4Eeuxh6FdHSRd2p6VVKfKfJOcvvWc5JHE7R9FXVGpOzvwFz6gUUd40Fk47
SERCKbrcMwzpL/xz4dtqxflg+byUrFMz+XiTM7GC2+W0nceVKAjb8DbfrN3C
GdcDfDTDjoDUKtT1JYSe2sDYN16m76erCBNjX6uVvtk0drs+9vfG7cTtdHku
DOmzBY/AEtSZjgzqvxnPkCKqCxM5Mnccw557iKk7XfC1ncbCPWdJKFQJe6Oh
qryWsE1v8Pw8GwJyFWiyTgrOthmPoNKL3E4veMlrY1dwOiRHPFukflFBVfpx
Bry8FGf/PPkZkekwlZHW0hr8GBZNO0RkQgnyLLE+49JvYwFL3voC21MhVGoN
6MVYr6xIYtqwMWxzDqJC2ySevzVU1WtJPfEj4zYcI6qgwcztBpj7jtTODWnH
eHfCQmZNXcDxCMGR9C3y94LS9+2XWxeee/onxm5wIrrIPNcr9bVxGxyJET5V
hv0UPrJyILa4klOz5uAVmYKyuZVc5+8ZsckRvwDBY9/fimd0qXh21LB/2Ai2
2e7jm8GfdqyLolEu98fWUn/WdMi/Ox0qFFkcXreI9QdP4bRpDGPWHCamsJb8
WG/Gf/A2j903jgNnPZk54vMu+WgbtbLt6VBfk56COJ+rppXKuGyzFbsiKqiI
PiSf744oJnr3QjYv/gX/+CAWrLJm3s4g1MKmNyoVoqzVhOxYyJZliwS3UxN1
6DBO+44LbmrF+jU/ciyiXP5eu76uniyvvezauYkT0RXom3TyNaXw025XWLid
BTcC18bt9Bx95mEWe2ajkzmXisOjH2HFyVCysoL47O+vYR9bRm3SHu7+80Lx
LC6lrMif8c9PJrFKy/k979F7oSuFFZVku6+m97enqSoOou+zPVmwx4W42CD2
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
GfWNKKX374p62X6oNFoMptvHLtyIdm1tbqS8XInuFsRi/73zluJglpdUo9IZ
rzle/XWjpRmtUjxLxLhuvF32TJbK1CDKVHvzynRzuJ2R2kQvfmj7vu6HNdtw
cvMiOCyMoCBfgmNKRLs3EbRnFXZBReYkTXlsfveui9/kORZK476FjIPfcMcf
BxPUzaSdtsSPn8eOZOwPW8lu7NiT0uwmmjljt8dEzl80Ky1kntnI2H4jWbAr
pFN8Tgsuh8txO1NNCg47rZk35xdWrrVi3cZt2J+LprbxxvC7FmE7VE2d90y5
GlrRqRsvcqf0A+/z3sE4Gq/j2X0jZFyANtuBp/91gCrVtfG1G5l3F5i0FEQ7
sXx3EErD9c9fG2qSOLxjO+uWzGHKnM3EVFxh70hjJotH/kBImeay92gLwjl4
NEzYy0ZSz9njlVlPe0rQ+e/eGVUE2a7nmM95FDoLv+uMW8HtjLoGUgLPsOmX
+SxduYpV6/dgu3YzkSUNGH7XBmoVfrtO3j/p5uA35tdqQN1ooEWk0+Y60+/l
A+SUan57320uZEX/lzkRnY/2JmyGnh9+lNGPfI1HRud417cexrpYdq1YxJfP
Psmw6UcoVJj3nbikcwXRJ5fz0gfrcD9fzq+xgK0GrbA7Btke5Z+dw9T9LiRX
3v4fd9xO3K4wxhObVUtYsXQlG6ys2bHXkbDschp/1b7Fl0FrM43aJpp/JVe8
0e2qL/bkw9EHCYysuHn85xrzbl/Xa0crTVph55pNFEc58frzX7LXKxXVTaJZ
LbpK/PZPY+rc6TgnVN2cTC+DVmMT+iY9WnU5fjtEmabPuGlluincrjmT7+80
f1vX7fHyDuqbGynJzyc/v/riXvSZdp9f5HY2CcIvMFWwut8d3DP2CN2NpOQ9
b7fJ/AM28crfWJMGdvX7g1nOf08k+fY3xbcFrrQm01Dqyt/u6se5nGpKQ3fT
87//i9U+OWj0TW1zti0YDdK52dduaTbI15sNei7GMJXQ2oJBjgGkl9+vtjTr
KHTbzq7wYtTivqYm6d1Qq0hnkPdAN3cj8VsaW+K50dS2J5RBW8sZm9OUqrQy
v9PXFVBYozfnI/Iw6qU4dLpL78bFM0CSbTIZ0LW/3g4dZTSjF+WU9ibu/I7x
Qt1MctzWJjn/C/W8mJ22hry8GtmX6yqrFWOTOQ5SUxuXa5/35XVnknWn1Zmf
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
4JtCy5Khxjp87YfQ69GpuAflcn7aO2w85Izbjrls9zSPv1zxww3lwSyZZMdp
Ny/WDhnE5A2nSU72YM6gJRw84oPr5o956ce5nA31Z8vH/egu6tj4BXP48fXe
jN/oQrboH8z51ZYzF3zZ+OkEXDwDOGV3RbfbVbqzsuNb0uqZnMSO+Uva1Mlj
x5wYdHXavKJIiHHl65Hz2X4kgDJVJSemz7Nwu8r8cL4Y9Bovz95HXImSxAMT
mb7vDKmVmuYEmpT4r/zg2nLIjGhrt08cUcc3stLxGC7HN/Pq8++wySWShDMb
sbFex4bD59g77yeGj5zMvshW3M6kItzZke0b7Dl5eD4Tf/yJdXvDCXK2x9ba
mpPuJ5kx5jd+mWLLjpm/0u9f/6THo0/w3U+TmDXmu5a/x06Ywfxlm9hqt40j
u6cwYuxIFh0KIvBIW9mrtlzg9KxxfDH4Gzb5ZpARvI+lZm4XnEH4hiUMenM0
i47Hoa6IZfX8HSyxiULVgds2dhZuZ/62t2HIk3R9rAsTNjiw9JOHeLjLYzzR
7Rvhp6tEuRSyotf/8K/J7hLn6oS4Gbf7+v7/MHmVLTar7Tgp6rbWaEKX6sj9
99kLbmdAa47/vTmevm8YfW2DBE8ykSHi/1ot+mYXt3P/v+xF38NAkzKbwNB0
IUPL3n73syWiAn2jGodhXxNUZeYhmpZ4bbYvJy5EkBR8kK7/Hol/mfjdkMC3
Q7dTqWpez5Zh0RdOlVnH3zdTadYhatmpjx5m2M5oNKpoPn1oHSWi39OY5WSx
2TxHoXVX9LIMlV7N4RE9+GTONvxC/IkrULXMnbh8379sA1G0Stvl+OU0N1zS
UaKo49CInm1kZRz7ke7vmvuHgYTEFmMU/ZErutvKaZFfF8fQx17FPdd8Zmg8
A//zBVHVmuvzpUtQJ5rLZzKxtdoOXgfQSIzjbA7Hir7eDYmVgv1L9lKl65j5
oG1Ry9b//ANb/0J0ErlrwR3ndumHBbf7FNe0SvRXFYOZgydu/4APbXwoUwqv
b0jiE6tHOBZTQPLB0Tyx2lPwLDMX0XPkIys2eKehMDSR4jSUHl8vZcvufaz7
+RVm7/IjyGYYC12TkGkbqUwKIy5Xhl6XxC+jHMkvV7ap3w05R3jiibUkFCow
ifYy0qoLTuHZXNwzmg9s/Sy2ZDhdjqsu6c4SuhVsHzoO35wqYraNuKE+bcZ+
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
6AhI3E6ChHsfd57bNaLNPcPYcfvIrFLfxvMolOx5fihnE8rQymN5qusj7I3O
pf7WtqK8hHqch3VloPV5ypXt9zHVCQf41eYEeTU1nJv9HTvPX6S2vv01FSGr
f2LjGfF7XSwzvtuMf2ol+sY6Dn8zAgefVBQ33btIgoSOR6fido0G0lw2sMrZ
h+yq2zdn01Tuw8fvbcUvpJia2J289eI6PINKuWkL1GbyW/+32HzCn+r2ONpV
iN25gG1HvMmrSGD1bAfOBuagam9TxYZ8Nk5ay2m/ZIqjDzLD3pmQ7Gr01ZF8
/uFajvvlCN8lrQWWcH1I3E5CR0DidhIk3Pu449yuUcXhsc+wNShTcJnb2VfR
E7BlJeeSqlHJoxjY41mOxeWj/V30SY/75J4sPBND3XUeNOS68uarvVnnl4CP
7eu82PMzgvKqaGhnkD1x/1he7jUSv+RIFr3+Kj3GO1Mi02HIO0WPAetJLFFI
Zy9KuOPoTNzOqIjluw8W4xKSxW3tXahS2bPzHOmircrjdzP43U14hpfefM8P
XSYTB/zEMe9EbmW7w4zTcxjc93OOenmybvgQXvlmKxE57fhFUym7vhzGK59v
4rznYT4b0p/5h3wpVxtJOzSJGdvOkFym+SMplfAXgcTtJHQEJG4nQcK9jzvN
7ZoUgmdZfYlHhvmbVYepvAFM5Ltb88rUw2TV1P/ueU0pDr+yOSQX+XWNNaGq
qUajN59Nq6KyRoPpehM/jVpqapTi90YM8hpk5rV3lkMk0/nBqgvHL+ajk8id
hDuMzsTtSvxX0m+2IwGZNXdmDqJos+eXDmXdgbMU1t3K/M8aHIcuxNs77Za4
nXn+eZ1MhcFgpEFVh1xlPgvtOuvtNHXCJ+gwmIwoa2TU6w2WPNDlHKf/qxu4
EFR88++KEv6ykLidhI6AxO0kSLj3cae5nSZlP1ZdfsM/r7bdb1sdjsYydozf
QEKZ/A/tw51xwJpTieWob6uxMhyfehzbc0ko7gzhlSChBZ2J22UdG8+ozc7E
lqrviC36Ql+s93iTUSS/xSfUnN95hszcsju2r3993hn695nNMf9saexHwnUh
cTsJHQGJ20mQcO/jTnM7bYaz4HbzCM2vu9Q3ahS6b3WfgEYMesN1x73bfaIu
AZeIYtR/8Nx6ZVooydVa9Ld1wFzFvoFdsfNOus3zVCVIuBadidtln57OSJsT
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
g74vMXLONgIDTzJ86Hv8tOoQ2dnJ7J8xjDdGTOdoZL5lXo0Funw2jJzEJltb
VkxZj190ASlnFtL31c+Yv9qGmd8v5nRQlmXucJbPNoYMeEW0w67MdjhPUVFm
i8wjPgHs+O2y/ET8Dq1hYN9vWL/3FA6zPqbfV3Nw8vJh/7whlvjxyFQODvyY
t7o8Znk3P/7oI/ywxpmc6vqW9EWJtJhlrHOOJPrUYoZNXMzaDassPi+5qO7K
WFNjJafnfMZbPcztcKLgcwWibdRwbvnnfD19FkvnT2OnSzjlpTmcXvoJ/XqP
w+lCNqWZAcz45ANGTFxPWF7zvOyr01gq/GCGx1Y+6v+KpR2uOuRNpbqehGPL
Gdx3GOtOuLH6k0+wOehLqVoid/cKJG4noSOwYMEC1Gq1Zc//q4O5b2f+X11d
TZWsHqPR2Ob3OnG9rt5k2ZO4veevF7RqOap6rWUf7/Z+bxC/V8mU1+j7M+G6
OkUa9fWC51SpLPoa9DVsGjwWz5xyca3uKhv0qOVy6s17MP9J2xL2j+Mnh2BK
hQ5FXS3hDt+zIqAQtb59ueayqFeL/FYZrpPfZtvUoo/7Z8uovTS2L7ulvMzn
I3RgWUnh94fDhw8TFxdn2au+o2RqNBoLt6upqfnTsho0CmrqlBgMzeeLmMz7
7It2V1OtunLt9zzfAUErZKqFT2i4ul5fY1sDSbtG0t/6NBmlFaiMxjbt6bpy
fmfQlXry69TdJGWXoFDKqc7wYs6S05TUqNv1N+b90evVNcInmM9vaU+3AY1C
bTljxdjquqK21rK213DLbdYsR/iEhoY2dljSrWv43f5fCrcnmLldVlbWHdN3
9uxZS99RpVLdNh3m+QHKOpmoZzpRzwxkHpvM56v34J9ehKrB0KYO6+pVoh3W
/2kfoa8MZsmSfQRFZVIr3oU1OUGssTkj2mVl+3XdfMaRVoOsVoVWa2hHpmin
Kg1a81kGra6rhGyZaLvXe6+2F9pLo+Wa+ayGduQ0WM5datv+pdC5Q0dxuzNn
zhAREdEBLEHCvYilS5eSmppKdna2FERIDj/FsMe6sNrZl7SMrNumx3nmu3R5
8H0mz1/NqmVT+GL8anyTUsnMuvt5IIV7Lzg4OFjeBxkZGR0mMy0tDWtra+Lj
4+96+u5uiGXPpJ48OW4dPhdTyLpNetICHXn2mScY+etMVq1Zxq9ffc+WMyEk
p98+PySF/55gY2NDUFDQHdN38OBBy7e7lJSUO6QzDueF7/Dyj/M57B9Lxm3S
kxZ6iPfffokh3/7MklXLmDL2Z8vcyOjkzLtexlL47w/Ozs54eXn96b69q6sr
UVFRHcASJNyLWL16Ndu3b2fnzp1SkIIU7tFgHqPZsGFDh8udPXs2W7Zsuevp
k4IUpHDjMHfu3NviA64XVqxYwfr166X+gxSk0IFh5cqV0pxMCX8aN1pvZ0ZT
qzNomzrZebTt2iOudTIz7wrMeSNlAx1TF65bpzpPXbsb+2SaYalnlzKh8/mH
9i92LivvDjpbWZnxx21qum3p6Ui5tzvPO896u7a47COaOpG/7HBIfuWGuO3+
pun2+YA7DWm9nYSOwHW5XZOJepUSuVyOUqm0BIVlj11jJ/FhRmQlJWga2u4t
qVXWUFyl+kvvyd9k0iOvLqam1Rntf0U0GVWUmM8z+jOZINqBRlFNcfVVcszt
Q1lLSZXyynnzdxF3fJ9Mow61SmXxD3KFwuIf6mRyyzkedz83zGWvobRUhbFV
oZnbhbK2lGpl670n/3po0KmoLK69al/eu4s/Y5NBU0dlrQJDh7dDE4rKCtRa
HaY/mVVGnYaK8hrL+sTbleudj9s1inKtRyGvQ14n/IRSIXyFqs05jP8NaDI1
oJaVI1PV0/BnK8p/JTquHbWLRiNaRS0yWZ14/9z7+S9xOwkdgetyO1MV7nvt
mTF3IevsNmK/ZQvrl89h86lUtA2ma++/0zDmMa/nM/z/7b13eFRV1/7/1+/7
vM+rAoogIAREihULKBawUEXEgiCgIAJSBKT33gkthJIQSoBQAoQO6b333nvv
ySSZSWYyyST5/PaZSSWg+BoFn2fu65qLzck5e6+99lrrrPucffa2ii7U5taV
5Upq62Q4mMyi/aeHSP8v5jU1JRFsHf803x/3oUL9GIzV34m6ahTSmp9i8JUJ
5+nX5wR58j+xx7rkB3un8+8xh8kR9TbeOWqKsD88j2dHGhGZp+BRa/nv5naK
dD9OH9zB4kXr2LbPiIPGh9iycjNXg3O1+9w/aiiTrjDorRMkZCmELYjcS1lN
tSySQ3MNGL/Xhny5+vcr+Q9FspcFnz8/A5vYItSPSSr0Z2SKubKFkTOlNZHl
SE8e1RWVbbMHQ00Wh8Z/zumbHhT+yT37Mnwv88lr0zhuF4X8LwoWjxe3E+Og
yMLH/iK7Nm5m+9bN7DA6wLbNJgSm5FD56ENEm6FWkcjxJYP5ac9ponPLf/+C
/zbUZP+mH9VVq1BXqf8w59dIa9hI60SpcnE6/AvzFizgakh+W0n9yKDndnq0
BX5zTmaZP53bvY91WrFurbXSKIw2X6NEVU2NRviV4HhV0vpVNbXCx9Taddsq
K3X5b12NBrX4W6W0Z0L9u/LaZtdUiWvq6mq06/pVqqtavvsQ92UpR63S1Iii
Rleukp531ol2pXXZRAt1VeSmpFBWU4NaJeP2kRtkK1Qi57zL0A+Pkl4mrUtV
2Wy/hOYQ9VSrtf2u1rYh1VwrYkWzPgiZa6oqteeoG7hsXY1WjjohU6W2D3XN
yrq4VFtTre2jpB+pHmm/ZY1oS1dnQ/O1Wh2opOdY99NNi7xEkkN9XzmktqS2
m3Qn6UetPeZ74B3e3+tVv0d5vVo1GnGdRqfH6iqtXmvrr5P2VdX2o7qhH0J+
af1LdXVruaV+if7W1ssp6UCSr1LU3WpaxEP1taGP4v+t4nutLobX6M5XN3uu
ILXbwsakd2lFHuy/EIRCKfidspCUlMImOSV93SNna9lb67vYbx/tOhwko7gc
pbQOZb1CCoOO0H2IEbE5uj2ZpOsqK8U9qvrvf7f9KOZkSntud+28gaCUMmH/
NeQHXcXSP0u71qs0Zk2+pFvTUesHWj032am6Ue+1La6Rzmm0yaqWybDOx6Q1
G2t18aBaFxPqJFuT2pH8WVVMWmqBOKdK2IQPR6yCKCotJ+jIGIbvsSdTVt7o
560g1aPWxSVNQ3xo1QedPUrjrXkI39fZfktb1tVT31ZVk81I9ajr/ay22XVN
+rxH1gfIoalSt+xjQ1uV6ewe9ROOSQU0pVpCVo3uOu37FmkNwgY7Fn3V+pmw
B22cq6urt/X68btXbrVurcAGOX/TLx4gU3PfbpD/Qf3KD7nLz31mavelUCiL
sT1+h/RiueCILeOopEO1ulIXA2sbbE7UpdLdw6R7QI32XqPTs6a2isKsTEql
2FUvq3S+WhuHarVzDLVrEVZLNlKj1Z+ks9rauvoYrW7UWa06F9ORy7hjH0VJ
labRZiXf0Ggayn8uajxO3K62So797k8ZMmsT1rH52jX8a+SxGH45g6v2YZRV
1+h0IOxMLd3Lauu0fqMd8/r/S/rW+ZPQq1aPNdq9uBvLtbr7r9YmtNfqfKCx
XNswV7zellTiWL0/tRznlveclnKgHUvdGrg6+5buUY02r9HZVNi5qUzce77Z
3uvCmh7WNlr1nZZyi/N0cailfOoqnQ5aoE6XizWXU8rFJPkb8i6tPM3svjWa
6tBo6uea3mv7dTTqXnduk74lP62qz+t098rqZn7U0g+lPCTP6xL2zo74Cd01
5I6660WeWR97NUJ+jRSTJJ1Ja51XK4n0CCLQMxKFOD/T05Q1uzZj6pmtHX+t
3UjX1tbq1vb9B03U0HM7PdoCv8ntKsMZ2/5TXNKLRU6rQp6bRo5cJfxFTU6o
H+7+gXjfuSNyu3T8Xexx9HLlzh0vCisrKEyIxsvdEUcXL5IK5docp/k1wZkK
5DkRuDs54+nqSniOqilnqSggzNMdr/BMymTpBHt44xcYL3iKktRQD6LSy1DJ
8wh08SFHxIDI2zt4uv0ibLyjKVUEMmXkXkLjo3C8c4OALHmreQA1qhIiAjxw
sHPAJyCGhIR87V6qgc36kC8vJMTHHVsbW+x9klCK2KwsSMDF2Y/MrFhcblrj
FZVKvii72tzEK65YxG6pjx64+0WSFumH9Q0H4tOySAn3xvq6A2lyid/UoixO
xM/FSdTtSHCatO9UZQvdhGQ1zf+rEbw11NejmRwayvMitXKkpEbhcOMm/hll
2n3xNMpSEsO8cfJwxmzeE4w08qCiWV5cnBaLt3swpSJG5ieG4+7lT5EUM0Xf
w32ccXYVYxGeJ+6PavJjgnAV8cXewYPccrWIuUJuWSJB7i7YOLoTHJNAWr5c
G2ML0iLFudbYOvoLvVU2y9/q7tNXdau+VipKSQjzxfauHZ4hyS3m2daqZWJc
nPGPjBH/WmPnmYBSul9qKilKjLnHxnK5+OtT/PtXE7zjsynJCMfZOVY3z6um
UthkJB72Im46Bujk1Khaya65V9/CeBTRZrR/ewsOPp7cuW5NYGKBts6KuDMY
dDMmNl2BWiknKSIAO6kPwYnaveX/Tn73KLhd7PnJdHt3N1FpwvaFb6bEpol+
i3xNjFmosEFnLxfu3PUiLS0CV1df/P3tsfZP1u75ER/pj6u9A24+URSUiRyj
srjFNVnFOUT4uelsMixL5DxNNlGRm4SPiA8xablkCzv28HYlOr2Eyoo8gjxD
SStWUJIdjbtbLApFNlarn6fjwn3YRWYSfnwi47afxyfQlRvWbmSUVdwzZ1ey
8yRCvNywc/IgMDKOlLwSynLi8HBr6EMSRTnxBApfsLd1JDCpSJur5Ib74OkX
QYrwffvbTsQkpZMS4YvdLUeShExVlSWij274hccR5uaAtWsQmTnZItY5cVeU
ZUrBV2pFHhQfiru9HQ6OHmSWVojrWuomr6Ky8ZmMsjj5gXIkhnlhLfVR1CHl
NhUlWYR6ugm93GLRh1NwFjyq6R2ZmqzYMDz8kkROVU5aVCA+oizx9PL8aLzd
XPBwcSFM+KuqXCbipzd2Igdx8ElELs4RjkpBfASeTo64eXoTGx9PsVLzO35x
f5kqRTwsTo7D19MZJxcP4nNLRGx9UL/EbSrDm4MHrpNWUkas7X56dF3MFfsQ
cstUjWNbpy4jPtQHNzcnPEJSKRMxTVVWQJSvm/B1G0JSslFUyIgJ9MJV6Pqu
rYgpmcmE+4eQUlCGWorbZXnEBXviaO+IT0QasnIl2UnR+AYkUCIvJSshnAD/
BIrEPVKKe4Heol/OLoSmFok4XMG1xaux8wsRuokiwNuTqJQ8lGo5yWEBRCdk
a+cz/xk8TtxOFnGO99+ZgYV7DBVaglGrzc1LkyNILSygOC8Zf19/fH0dsPeP
o0Aciw0PxFHccxw8Y8gXY6uSZRDoGyTuz5H4ODqJe0Ms6ekJ+LkKWxL6L1Go
KIwLxs8/lPjwAFxtnQmPTiJZ2K6zjROxWUVUijxflirGSHAHBwc3kvNlgs+V
inH2bBzntEJxX6qXu1atEHIEtJBDWZxEgG8AsbHhuNnZ4hsr8hIRj2qEn6TH
huAh/PL02gFM3HmC8OwGbldFbnLMQ9mGQlHWos0CYbe1tVUUp8SJvjrj5uFF
VEwMheLaSqXwzZhQnEXu4u4fo5tf3qj1OipLMwjzkXIbR/xjs5GLWFEo/NLP
3x8vO3uCxH2xoDC3hd1XtJjHWCv8Io9ofy+cRF+DxfkK4d/32n6xvIL8WJ3u
Y0J8xHE3EnJl2n0q8hIj8PbwwMXJl6wiOSqlTNQXrPWjysqWfliY7M+6995g
ypc/cV7EVbmwpTwxxj6i307uQaTkFCHLSBR+6E9IcAA+bu6EiDFOiXBk/uQV
zFpwUdtupu8ZNh/YjbFtJPFRwSLWRJEu2lMUZhEfHUNmXtlf5QZtDj2306Mt
8Pvc7kkMr9gT4OfKgVkLcBMcrDI/hA0GHflXh+cYbmDA7B0bee7Jf9H+uefp
YfATjgGWjO++iLviPnZtQ2/a/WBEUqof6w2ebbxm0eUATo54in3OYTgbfo+h
ZwaVDTdidQoH+3Tnf8afJ78onCXPP8lnex1FnqHg4tRemPlmEnhpMz2efgfn
jGyCXU/z4XuLuOoeSZkimMkduzFx2TZWTujCv6acplDVMt9Nv72cp78/TlS0
F9OfeYJnu2zB096EHh3+p7EPty4uxmDCSUL8L/Dkk6NwL8jktuEPdHziGeat
34PRouF0+FdHpi7bw4HVBrT/5AAZ2j7q9LL14EEWdusgykNZv2c/C7q2Z8px
fxFHldz4+QVmWnjhZzGdJ4cfJzvFlw09m3Tz66VwVPX3+XyndfSacKJJjpwU
LDf14el/deCbdXvYOV30cfwZ8pVq4s6tYOSSs4SEOzBHyPGJoac2LjdAXeDH
hM4fiDoEr46/S69OHbHPKSPlzip+2O9CtPdJftjjTXlZKJN7f8btUH8Offgk
y29EC3nKMJ/6DBvvBhJis42O/9uOoVttyI68wtSZxnh72zDn2SeZcyak2b7F
6vv01e+evobge2QZi0/Z4n51O089MYA7CYKr1ptCQcAFDLTj8jUH9/4q7Owr
fAoqKE+/xcQeLW0sLT+J8ws70W7mQVwjo7FcZsC//7/tIn9Xi/zvLtPGbMdT
3FeW9e7JvEuRyGKsWsmearumpb7zKlDEnqbdk114fvoyvur7Is/0n4t3Rgny
Rm5XSvjZTaw8cRtHq9107TwQy8As/uQ0rj+ER8Ht4i78TLdnZmJx0xlf1wtM
+/oQifkKCoIv8Fr3Z+jQuSvdDSawbv5wnnvqWbqM647Bd8bYHPmV15afwtnP
nrWv92bhYXfi3E83u+YHzh2bz49GIhfxOMOsA+4i32maQ6lKduLtfp3YYh1O
WoA5fbs+w2G3JCqKffjmrU14xSdyZcNrPPvkOiLiYrm8qjddZu7idrDgdmdm
YPBCDxas+JW+Bp2YZyk4VfM9v2vLOT+3N5uuOeNva0ivzp35YPUJjq7/mu7t
GvpgxOEpfZl9yg63c3PoOsaEmCgfdrzWi3YdOrNW6GxR76481eF9lm3dza8v
dGHKIWdi3M+LPnYUfZzELsON9O7cnk+//QXDvVt4oVN7Tvglijw5lp/f+hor
wQGPjOrKyku+JHidaaEb+4Qi7XsQyb+sF7/FnPvI8UyHTizfvY1Jvbvwy/kg
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
GzZ2TzXifLm4b1Q3fwBXU4VKu6+CRrcvDjqdqZVlKJSVtNzWRdr3rYjC/CQs
dxzGNzqVNpiOqcVjx+3qoaqQU1pWKnTx23quqarSGXuNxHXb8MmYqK+KhnH5
PX/6g3JUqVBJ+3RIeyTU3ec+9JC2cW+bidbbWHfiJsHJhcKf5IRbrcfIwVf3
nrFGJY7p9ie4j/TavQV0VdU8UPzfs3vt36U9G5r9+b62fz+IPlTIy8T11ffR
x/39sAVqq0S8UVFZ+X+Iq7XVyEuLiPW6zg2bWwRk/cNe2qHndnq0Df5KbvdY
Qp3Cpn59eX7yfA6amrF/9Sy2Wvpp468eD4Y69ab2neDMdbs5fvIQq2ct5lZ0
MdU1bXgP1uP/jH8ct3tMoU635t03X+bHFVswMTNm7bxlXAvKFHmK3s5/C/4H
f+DV3uNYseUwR4y3MHftcaIKy/9xz8z/elThefArPni1M5N2XyWpqO1yz8eV
2+nxxxF2djmfvjmWOUsMMTbewaKNJngl5ja+h9bj/qjKD2Hnssk8N2gyOy6H
UPn7lzx20HM7PdoC/3XcTkKNnNSYMHx9AkjIKX/oZ7b/7VDLcgkL8sUnIIIC
Zc0ffsemx18HPbdrO6hL8ogMCcA3IJxcxT17hevxANRQlJ1EsL8fwdHpqKpr
/tY5yf8kVBZlEJeURbmybeZiNkDP7f6TUENJfjoRwQEERyZTplTr/elhUFNB
fmY6GdlFVP5DFabndnq0Bf4Kbvd/yfnrms9nkMr/EOLwDxFTj/9wPHbcTuvD
zf/7sPNmHzX+KXLqoUdL6LmdHnr886Hndnq0Bdqa21VXKijIKeGhlwis01Be
Vkpxbi4F0h4GVSpKZDJyc3Ja7Lv9OKJOU0FuboX+ub4ejxyPE7dTK8uFDxcK
3yilsrqqyb9LldQ8gm8R/wiqK4ooKlfrfVqPfxz03E4PPf750HM7PdoCbc3t
ElxO8HH7H3HLuXfNivtDWpPXaNVSJvV8ng8WXSLM+gS/zp6FQdfObLobQ+Xv
fbcrUFelpOJB3+X+hVDGn+PFF46TJ9fPl9Dj0eKx4XYaBfame5k/53Phw7O5
4enEwY2rmdKnF0N+OUua7GHWD62jSqUWPPDv9+m4s5MYf8KdvPK2nS+nhx5/
Nf7buV11pYgZj/vDIz30+B3ouZ0ebYHf5na1VIv8rlKKmfUJWW2NtF5lLTXV
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
9TojF+zCOiybSlUO538ZxEs9JX+bhV2MjKrqbMx/GEj/Hl2FfyzDLaVU9CGN
g4PFsY+26NYtktpTxGM+9y1e/nYdd329OLVElEeLsn9DeRl3I4soSXHh+7df
o0dXUd8yCxJK87He8g6v9B7KrFnj6SPiyzpzK4ymDxB1bRF1eWA6+01t2SXY
iz2T3qT/+C1ct77ErDdfZ/ouC9xdLzDhjVeZu/8uubHX6P/KS3Tp2k3r0506
jBb+L7ii+Tu8+cMpkgsej/Xg9fjvw+PE7ajN5+qyL3int+TXs7ks7oXK6iJu
bRzHdwuXsH7lQo5e9yYnK4mr68cw+OXpmFsnkhXnwqIxH/HVnF14pRRQpdFd
M7i/FDMmY+GYRHnV/erO4sz4sQz8YBl3gkMx/uYLDM86klWunx+jxz8Lem6n
R1vgt/dA0Ij8Tvfgq0b9+w/A1GVlqKV1yR9wbo3IFesLDy2fuqIMpbSeQt09
xzR1bfSNi4aKern/jJz3RV0BR8fP4Xp0LiWKchSlqVxcuQbfPBUV+geKerQh
Hsn+dsI/GjykRpiztFZ5TU2d7l/1g3KqGpTyMipbzJeSjlWgqW0jn9Yokcsr
aWqiRvRFUy/yn/O76EsLWXDcldS8EirKywg4PY+drgmUVKj4k1XrocefwmPF
7bSoQVWu1M5Vbu7X5eJ+W1pR/VD73zbVo6BS03w92vvX3fjXqipq6toqR9BD
j78PbcXtrly5oud2/8VYu3YteXl5lIl4q/+18a8glMVdu/D0lzPYZWTM1oWT
WGpqR15h8aOXTf/7j/qdPn1aG8eLi9vOtgoLC9mxYwcZGRmPvH+Py89h6xf0
7DKcBav3sHfXSqYs3It3Ujayx0A2/e+/+2dkZKR9vvN3tSfljq6urvr8Qf/T
/9rwd/PmzTbhdtKzl4CAgDZgCXr8E7Ft2zY2btyo/+l/+t8/+Lds2TLWrVvX
5vXOnz+f9evXP/L+6X/6n/732z/JV9esWfO3tbdixQrts+FH3W/9T//7T/ot
X74ca2vrP53b6+dk/nfjt+dk6qGHHv8EPJI5mXroocdjg8dvTqYeeujxR3G/
OZn/Pxr10Yc=
    "], {{0, 608}, {887, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rxuqt61vv6p9tfaaxLWS62zXc29AN5JuzDaENIw3ejX23bS52d6k13T9luKt
ymaR5uLbHLfzW+hbslrW7iTfmW+Nbp1pC2573e7XPnbX8+5gh1PH407bzvtd
Fl137xnfu3Nf/35zt273zQfaDxoeaj680aPRc/2RxqPrjzUf3+jV6m18ovOk
qW9LX0u/YX/bgNlA16D14MOnW5/2DbkNjQz7Do+PBI68fxb+7Oto/OjSWPpz
zPPcF8wvCl/yvyx7JfPq8rjm+O0Js4meSZfJsdfk1x/fxLxZnsp6S3xb+E7o
XdV71ffN0xbTTz74fJj6GP1xaSb7E8unks/Sn699MfrSM+s5O/WV9nXt2/7v
PN8r59Tn2ucd51/+iPix9DN3gWfhwqL24r1fHr/eLSUs45ZPrMisNK3arj5f
i1hbiybRSBtXARh5UEFBAHyrBIDoBQAbksfRM27mX78LDK2nHQC4Q4rQR1QH
HIOWQH/AlGL9cCK4MboyfCi9Kv0yQy/hDDGWcSuTDDOWeZKlk/U8Ww57FIc7
pzmXB3cETzbvWb4m/n6BGSG8sLiIsai/WKp4scRNyVGpXzJ8sgZyAfKZClWK
vUrfVbhVDdXI6nkadZp9Wp91iLqyehZbAvR3GRQZXjN6bPzOZNWM21zRwszS
wyrMOsXmoO1pu1r721t7HEYd3zrNuUCuBDcud34PIU8xLylveR9VX91tpttt
/dz8yaSogF3kA4FnKHVBncGjIbOhdGHC4ToRLpFRUbnRFTvaaC9jluK44zUS
XBN3JBUkX97Zm/JlF3OaWrrb7sSMksy2rLfZhL1q+7xzMnKr8gb2Lx+UzHco
SDp07vCjI1+OMRWqHHc7kXiypKit+N0p4mmNM75nM0svlvWV/6zgP29cSbmw
t+rCxXvVb2rWarkvK1+xrPOtp13NuXb6+pUbzQ13G7tu3m26detSc9Ht3S3k
O0atXK0f2m62775r2YHveNCZ3WXctXTv2v2wbtHu0QeHHtr1EHr6HhU+9u4V
7J18cq4vqF+6f3rg4mDoU9mnH4eqh8NG5Ec+Pbs8umNMfWzhefOL3S8tXhFf
DY4XTWyfFJ2cfn39zd4pv7f678TeM09jPqA+0s/wfdL67PNl72zT17nv6nOJ
8y0/cQtOiyW/3i4rrsStNq2tbfhfDLqC8oJZ4Hq0D4YecwnridxqLtOR8Nz4
h/RZDCYEDOEucQ+jNRMj0whzGUs4qxYbju0Few9HF2cr123uRp6rvFf4avgr
Bc4JlguVC5eJlIqWiZ0Tr5SokrwkVSd9TaZJtk2uU/6BQr/iiNIL5ZcqL1Sf
q42qD2s81RzQ6tV+oNOp26Z3a8s1/UsG5wyLjPKNM00STEPNtplvtTCyVLES
tma2ATazts/tOu1rth5x2OkY4GTtrOzC4wq5Trv1u9/yqPDM90r2pvg4+G7Z
JrWdzQ/y++w/RuoOaCBXBB6hZAXtDs4IyaRmhmaEZYZnRGRGZkZlRGfsyKBl
xGTE7o5Lj09PSEtMS9qVnLozJSUldeeu5LSk9EQkOvIzK7Ka9wxmf9wH5/Dm
quZZ7fc/kHBwf/65gqZDTw6/PbJ8jKVQ6rj+CaeTQUUpxYdKzp1qOt175vXZ
n2WEcpFzmhU257dX0pAIKb5YW91WM3jpXe2vK4Q6wXqlq8bXnK+Tb8Q0ZDUe
vVmB7GAdzQO3X7d8uPOk9VJbbnvwXbMO4Y7lzpGuq/cO3qd2mz4QePDjYW9P
5aO0x+69Ck/QT0b76vqzB3wHVZ5ino4N1Q3njlCf2Y6qjgk9Z3vB9JLtlci4
3oT/5JHXg1PSb/e/B9M5H0VnHn3OmXX6Jj3HML/w88vih6VPK983/C8HOiBb
aATlg/oEh8EL6AwMN6YMq4F9iNxoV+iK8Qb4cfq9DKoMrwh5xC3EGcZTTM7M
DMydLAdZ/dhU2NHsgxwVnIlc9txC3PM8D3hL+RL5HQSkBSHBUaGrwvkioaIW
YmJiq8g9qlGyUCpW2lFGWmZZtk+uQj5JwV5RRPGrUpvyIRV/VUXVRbV2ZH9w
0eTWHNM6o03SEdWZ0D2jt30L35Zh/SMGDoZEw36jImOyibzJd9NbZlnmdhbs
FmOW5ch+oWq9aNNqu9fOwZ4TuU+UOVAdFR3nnJqc01zMXeldH7sdcnf14PIY
9TztFeAt7f3Z54Zv+jab7Zzb3yD3gCySR4A8GUUeDbxGKQiKCLYNkaMyUD+F
Pgm7Fl4YkRDpGaUbzRe9suMVrS2mPDY7jhpvn6CSyJm4lDSZ/GBnfUpx6p5d
0Wm+6da7NTPEMlmzoKyve95mT+2d3vc551vuj7xf+1cPovKxBfhDxMPMR9iP
ch3jLRQ8LnJC/KRUkWyxQonKKfXTWmf0zhqUGpfZlpPP7a44c76lcvTCwkXO
avUap0sRtbmXK6901I3XL1/juq52w6EhtHHPzdKm5ltDzV9bCHckW43atrXv
vHu8o7azq+vFvblupgdKD9169jxq6cU+8eu7N2A7ODlUMpIwmvz8/Cv8RM2b
4+/6PsZ9yZ8zWqxZ9//m/3DrBYtkpxWGyIaAnBsuZQCUNyN5pjZyflQA4EgE
wFUHoFyTAfSyEUBeJ/+eHxCSeNIBZiTjlABqSFbsjmTOGUgueR30gS8QE6QC
uULJSA74AJpH8aFMUKGoI6gW1AeYG7aEE+Aq+DmaGW2BTkVyslkkDwtBcq8p
rAQ2BFuN/YLTwKXiuuiY6Xzpquh+4q3wJfhv9Nb0ZfQrDN4MjQRuQjLhJdGM
WMPIybib8QuTH1M/swXzbRZNljpWRdZaNiW2q+w67O0cthwjnMGcC1wF3LLc
nTwBvBASpSZ8U/y5AsoCQ4JpQtJCA8K7ROREnonuE9MR+yB+SsJJEifZIhUv
rSw9I1MlGywnJfdB/pJCjKKOEkqpR/mESqCqmhqsNqh+XiNZ01FLUmtVe1in
XvegXtgWG31ZA4LBZ8MBo0bjsyY5prFm/ub2FqaWBlY61uo2KrbKdsr2KltV
HTQd9ZyMna1dXFz93CLcUz0KPCu8mr2Hfea3cW7X9SP7HyS1BHwLlKaQg84G
v6IKhpLDLkWASJ+oOzsUaBWxsnG3ErySsMl3Uwp2haf7ZvhkBWdn7avJfXGA
O9/9UPGR/mMLJ4SLHEqyT3eU0pU7VZRV/rzoUlN/maMu5errGw6Nt27J3D7Z
St+e0jF/b1f3Ws+Ox/19YgOkp/nDNc9ujl17UfYqfcL1teCbV2+L3jtMr32s
+eT5BT1b+81zDj1f95O0yP6rezlz1Xhj/4AABjAAdiAMlIAx4v0IsBeUgzYw
CWEgOcgZSkGy/2EUFqWC5PZ5qCbUDCwEu8J5cAe8itZFJ6Ab0AsYPUwaphNL
xLpjyxCv6+MO4Mbp1Oly6CbweviT+EV6H/pWBimGfIZfhBDCCNGG2MKoyXiZ
SZ6pmlmBuZ5Fl6WD1Yl1gi2GnY69lEMP8XYikmHe547nkeAZ4T3AZ863yn9L
IFlQT3BVqEN4v4i7qJjoV7G74oUSYZKmUgJSv6SfydySPS2XIO+gIKuIU3yv
1K1cq3JUNVWNqu6hYampo6WoLakjrMuvx7uFT1/IQMJQwUjL2MzE1TTILNk8
36LA8qjVCevTNpW2dXYt9j1bXzh8dcI487touTq5RbsXeNR7Dnmt+Ej5Om1L
237Zb4LEEWBL3hN4h7IUrBeSQr0Thg63izgWORGtvGM3bSBWGjmRxhK1kgqT
F1J8U++myaefyMBmJmR9zCbtfZbjmtu33/HAYL5Xwfhh6lH9QskTbEVw8eKp
b2e+lH4rXzyPvsBxUbbGrDbwyt76K9deNbDctLqVdbuzlaHdteN016tuzofm
j0J6U/uyBtKehgybPiOOdj+Pe8n+qmxCfLL4DW4q6G3Le+K0y4djHx9/Qn/W
/BIwu//rlW+D37/Ps/5Q+Gm5QFrc+evwUtXynZWh1Q8b/kchq58ViCBr3wYE
Iiu/DHSBGYgDMoaioTJoCEVAGaLiUJdQ72FJmAJfgGfQaugU9H0MJyYIcxPL
iKVg7+D4cMnIndOA7hyeiN+J/0xPpn/O4MkwTPAhTBIjiMuMBUwyTF3MVBYW
ltusUWySbBPsZRzBnKqcK1zt3Lk8brwSvAt8j/mrBPYKUoUchLVFJEW5xAji
WAlYEiNFL80uIyKrJmcrT1XIUbykNKi8rCqp5qS+S6Na85k2nY6WLkXv2JZO
/XlDSSNP4zyTVtMf5vIWIZYXrT7ZqNmm2nVv5XYIdWxxZneJcL3nLu6R4Tnh
bepTsQ2/PcpviGQQUBXISckM+h5Cod4LEwlPjRiL2hJdSsPFRMWOxVsnNCUp
JJen8KUWprGlH8ngyCzaI5pds08rpyvPff+Hg+kFPIfqjxgfvVWocbz+pHLR
1RLNU81nTM8+KvMun65IriReKL+oVz10KeYy65Wr9R5XV6+fb3BsXGm61Ly9
hfVOd1vG3S0dc10198MfaPZAjx73nuqjDqgNzg/VjmwbRY+VvJB8eW6cayJh
sucN95Tj28x3Fe/vTD/80Pvx/sztT6Wfs794zkrPzn2t+xb5XeL7k7md8+Lz
t3+4/5j9uXsBv3BokXex+Bfrr9wlaClpaWrZfvn6isDKnpXpVePVotXva/Zr
59f9HxOkprpxfEAEEwAwL9fWvksCgDsMwMqhtbWlsrW1lXIk2XgOQGv45red
jbOGGYCSe+uoq6Mh/d/fWP4LOW7dDg==
      "], "RGB", "XYZ"], Interleaving -> 
    True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "XML:com.adobe.xmp" -> 
        "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>887</exif:PixelXDimension> \
<exif:PixelYDimension>608</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{887, 608},
  PlotRange->{{0, 887}, {0, 608}}]], "Input",
 CellChangeTimes->{{3.676868036831242*^9, 3.6768680400316963`*^9}, 
   3.676868075768403*^9, 3.6769061177276373`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Open Problems", "Section",
 CellChangeTimes->{{3.549548005988791*^9, 3.5495480110025587`*^9}, {
  3.676871203180698*^9, 3.676871205642243*^9}}],

Cell["\<\
There are many extensions to this project to be explored.  What is needed is \
a deeper set of grammar rules, along with lexical graphing and an analysis of \
a corpus such as the google n-grams database.\
\>", "Text",
 CellChangeTimes->{{3.676871211468575*^9, 3.676871271016809*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Section",
 CellChangeTimes->{{3.549624602331629*^9, 3.549624604729114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"DeleteStopwords", "[", 
   RowBox[{"WikipediaData", "[", "\"\<Automated essay scoring\>\"", "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.676871377807993*^9, 3.676871431256014*^9}, {
  3.676906291033968*^9, 3.676906291909761*^9}, {3.678127608346697*^9, 
  3.6781276277835455`*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"essays\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.165374677002584],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"scoring\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1343669250645995],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, 43.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"human\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.165374677002584],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, -51.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"agreement\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.103359173126615],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, 78.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"AES\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.18087855297157623`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {7.5, -104.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"essay\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11111111111111112`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, 111.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"assessment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08010335917312662],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 133.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"raters\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11111111111111112`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-20.5, -141.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"scores\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.103359173126615],
     FontColor->RGBColor[1, 0.75, 0]], {94.5, -140.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"educational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0723514211886305],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-0.5, 151.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Automated\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-116.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {127.5, 23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"technology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-131.5, 26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"testing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {119.5, 48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"writing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-120.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"measure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-107.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"program\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {136.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rater\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08785529715762275],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {132.5, -2.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"number\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {99.5, 104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"system\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-133.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"education\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {124.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"disagreement\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-138.5, -16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-122.5, -36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"features\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {136.5, -51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Petition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-98.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"score\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-130.5, -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reliable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {129.5, 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"HumanReaders\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-103.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-39.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stakes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-128.5, 66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"used\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06459948320413438],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {105.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"training\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {104.5, -119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"developed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-98.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"published\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {124.5, 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"challenge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {110.5, 121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mathematical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-0.5, -164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"assessments\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-0.5, 169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bayesian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-111.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"various\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-106.5, -138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"engine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-106.5, 136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"including\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {108.5, 134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Learning\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {66.5, -162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reported\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-65.5, -164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"commercially\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-0.5, -176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"machine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-77.5, 165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"IntelliMetric\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {74.5, 169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"percent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-95.5, 150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"called\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {104.5, 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"readers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {60.5, -176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Page\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {152.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Service\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-118.5, -154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"competition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {121.5, -161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"correlation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-65.5, -177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"given\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-155.5, -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coefficient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-109.5, 176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"consistently\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-123.5, -167.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"claim\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {155.5, -117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"standards\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-148.5, 147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"statistical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {118.5, -175.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"machines\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-138.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"point\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-165.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"evaluates\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {137.5, 164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"state\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-150.5, -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"arguments\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-157.5, 133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"accurately\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {155.5, 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"research\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {135.5, 177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"datasets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-0.5, 179.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Study\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {165.5, -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-49.5, 180.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"argument\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-161.5, 10.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {175.5, 35.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"use\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056847545219638244`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {44.5, 184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"grade\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-175.5, 40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"agree\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {174.5, 51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Student\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {164.5, 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04909560723514212],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-165.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"adjacent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {161.5, 114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"commercial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {164.5, 8.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"surface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {161.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"eight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {177.5, -6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"early\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-176.5, -47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"differed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {85.5, 182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"average\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {12.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"considered\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-2.5, -187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"PEG\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {170.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scored\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-170.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"applied\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-159.5, 120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"written\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-159.5, -136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Online\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-102.5, -187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"consisted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {91.5, -187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"exact\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-175.5, 91.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Org\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-172.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"test\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-177.5, -64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"BETSY\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-116.5, -73.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"work\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {117.5, -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"inter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {71.5, -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cost\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {13.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"set\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041343669250646],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {177.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"true\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03359173126614987],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-108.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ASAP\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02583979328165375],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {15.5, -91.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> "Plain", 
    FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-193., 194.}, {-195., 190.}}]], "Output",
 CellChangeTimes->{{3.676871391240816*^9, 3.676871437475771*^9}, 
   3.676906300512886*^9, 3.6781276385647287`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 714},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (June 15, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       BoxData[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsve+zbOlVHkYlX/Ix/0KqTnfvTs7p3nt3H82MpJkR0swIIc0wM0LSCBkq
EpABXPzQj9SM7CIEEUkkRjYCOWUgYFEWchWWnMKJFKoCJCAbykWY2DgpjV0O
VZZSVFIBOx+cib8l3b33Ws/zrLX2Pn3vjKR7NZfanOqz+93vu9aznvWs9b77
3NG/974fffo/+re+5Vu+5YP/zuHH0+997ls/8IH3fvjt/+7hl3f8yAd/8Nkf
+f7ve8uPfOj7n/3+D9z/vn/7cPPRw/9/y2Ho8fN6d30HXv/+KzRm+nrNN9zH
O/l6edjeu77G1/4bbcDtXnO8umud+jrhc6dd58TrXky/sfjfu+5dt3q9unl1
swLP4nM3Cfi969517/rmuV41W9qXWaFe3QXuVXV9E5XjV01237vOu76JuH3v
ehVf37hyfC+DvnmvO6Ncns3trxkV7wwc7hQz7l1323Vvs3bvukOus6h4T+he
Rdc3fQN5Gw5+02Nyh1z3cL533THXHVz1vukbyNtw8BuAyR3MkFu5bk11v+m5
d2vXNwkHXs3Xva7j3vWNvm6SkTtJdV/d+RIjdceicccadjsW3kn8v3fdu6av
O6MhvClf7lhxmDfsNs2+Y9XjZsO+hnQ6C8w7Frp716viujPk9Bty3bGpN2/Y
HWv23XjdA/MOvV5xXXoVC929695177p33bvuXS/voi3t/viznxm8b3zYcPX6
6+66oXmaPENPCx1+Ysw+jGzUkiZ/e/N1ozvF0s3xV7tzME+8iEaqUzSsv1ag
9uviV7kfPTrNYJPs4yO9PtUnw3r6YN82Yf5+4pGA/yyADU07EZTknXMgzcyg
nRdinzA8pYD3AWeGS8icvp2jCj1YsXd2wOT8gsk+ZEE0oB/WCvlYolr9WufX
PhJjYt2zrwJt4cxZsyElyYAa1YZH+k3OiDDb1FV+G9jbJw3EU3tJvRjHGTGh
ZJ+Jfj1bkVZTfpFV+zThaEnDnhq2jfiOaZlpN8tLFbWmfDZIdJ9+LfJrPuP2
BtStPNgn2/pMyCTys/XUPxBpmUs5LhPf9qHYKSH7qQnJQorvZKT6obTtQ4ql
p/asJ3Gq3ok3Af40Ys7YG+y8Ae0b4+Jzch3ZN2m5Sfnq1evA2GxSSPNJ5aHO
RFRUdJWqGJkxmYDxWQ3uVJqUqNKi082b+xJtmKYT3Swt2acZ9nGSG7yQTo+b
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
H77r35z+ucFbH7+/qBppnkFw5hk4MQ8Ly7Z6apsfL+cM3+Irtu2qGHkbay31
kYEJec67C5+7GpOlzj9jLT5fFWaU47kWLNO6payxqdmYyTyaNj4MnpktenQV
ZkYbM+V4xn8ZJ4kzZPv12uZpGcylA3UlA8rPM1SZmP8seJfRSPsVvm/nYJ8w
IKdYGb5Zw1BYZ6I/DjBWe7gzY6s2Na44t8SsI1M0mIErPRWZOaNg7ixHKmJ7
JTZPgjydmFMuL2h+urOdB2fq5kQSxWDdBOxMydgqCFtPN2dFTaebQjmlcssJ
ka/BuQpjtuVClV9Djkzk79lX7ugWMbIR6ikc5uNePhssKSO+nPLrKkFNv+bE
xLRFdxR0L5YwCtY219/wSOHajTE6oyLPf8saMp8yEY0AKfmShTdOqCKzFKBu
WksNKx2pfBwxnApoclN16So2acFC+ZDq8lRQOHFqmiVtieJphi1yPiag5P5s
KzsPI01SUrrQK7KhaITqLScp2HIC0hD9WlKuIjFyuHNMM9TJkZI2gDf1SHlF
NnjSwkV6EGuNsBRiTuYVpYE5kBWPlwiJmVNmOZDzquX0HwdMJcLEacDUnRAm
7hkYitlYVGpT+R6fvelauuNXYnk1g5SAMhnHYdUOIk2I0rNUQBb5qatYvJZK
uRCysMQMGsuEYRaWGTU4GTNXfXhap1PkZADkpqnmgnuVRs5ssiZa6NwIVZ1h
FoftAAWl81b5sMVnD+jxw1EewyEzxe74IZ/h22zHb/ndwfFo2iLy4MM7Pgk/
fH7vdz0Qep7f0n8dcHrcbD4xM/z9P5wi844uANX8iIEzGJbBvNry+b+9wtg6
uw6O8F/gjwOuYiv4B59/Yhhw+ODjh/8EkBkgq4fz/8N1QJLjMpjxG78U/2yY
cODoY/LhD+Mn2AK/wv3xbPbKV+cx9hTO/ykEJxxefPHFL7/44q98+tOHAd/3
Az8ok5PvXz79M4Ff/9zn7Px/O4bvFPfhHPjw8zDmZMyWk2hpsBzmH14Q4D9o
ozk1nP8b4VHR3JglJ8VpgJ//M520NGyHf5jgzDenAI6nWECJMVz6g36dFhr+
i0anA/bHaEIP7nZJrDCeHH8dQBvgSodOzvzjuvqKZ7Dk+O3g1zFqV2StmWfD
xkP+Q+xUWNjyR5UwUbKGuPibnQH8pZz/j4+jFhyDtTWebL1rJWkd/txou9n3
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
HCaBsp34AK/GUX4NulqSJNI4iHNmZjjxwLPju0W3xI4X2rAQ5g8wRniLWgAb
mFTFACRg+qCr4BS6WMuPHS50cg5iBhOHISUtJRzYcSwMQ+z9yU7oSdVLsCDT
riquuEiJQCCIOyQ1QJs+jDZLSYpoRFTr5KWNgJI8MvbC3v3J+Sf+rILn17+1
CJpGiXkxzfbK/nbh5WMjK5YFl1mBP3LQYhGYA8w3YeacC1VPOFGRWceqHAfU
ZV2GnWJVe5HiWKY5/tIDFUF2qV5VWYK0tStAjilQdoBVS+B55+FG7qSnSigu
YHwoaoISMWp8I1zoXpF04k7A84KeyrXygvSKdS86679uCrYstJMMOKgyoFZK
yIiZTHiSDnWWmswojFgXtKH8lWEXhJ5mGdQvMz+KfNpnBfynvirvs3gSDqqc
xBNJ4U3LyIB+8icZU0tDbdAbeJio/ZhSLRBV+ByK/tYL/QQ+041H3IZIhQqK
HVrZasI2zj8bOMS97sQm4eW/YNQB9tc4E8S4KH9uiA9jv1rWBYGiinhb1bIK
9quN2ra5uNwer8OH43W6eWkDLmHDr+lJ+/js1caPqX+GjrgPn30tP5o+/hfs
T5MPC/GB+enfBQxfDdO6zcfPerj9GCvAr1Xn/+Plxl8Og8dpP6vn/yqhG4f9
4hJg/pie/1/QyGFAeEmxsBncBn8JcgBheMoHH7y7MPP4gwN7+OCPH18WgBgb
/+8jHe4LRJejhSEFhmv4i+6XXnppOH9ejJEKxBih86foDNl93yxo5PA5HDW7
R37k/rM///N8njzQbAj0V77y1dM7Av5j+41BvTks4ef/PHiMrxlwmPn01+Y/
f7gjB9pEfjuo1yQlZ+Hg5Tizm4QxxJDDyAff9OiAaqGol3bZs8NsB/ufetcz
zvMkOBv/OfzLCAfW0+SCYse8ZS/kj+qHkZebYCSHmJ+9OL1MMaw83JsLCv0F
gT9Q6/SPFMY7bjmp2QbzX4rXh1+Hfyww/tOPkzotriTueIrwv4jQWaw33SiP
l5u/9cnjP7r5l3/0zMWleD18brr2//njY/r89595Ynh2uWmH/8LPb332CZeU
BSF/dd29dPqfEv6NX37bFKSH64N/8Q1+/j+iBwM2P/oD479KeOKJ+6Eqmr88
myfa4pKCzgRgdbrVeS4FxsCEnEeDLxV14wyLS6om9LmMxTlrhVhc0M0qFncT
Pt8EmAzzj3Ze4pHKl+NX0bbTHcZB0zxYDpeTCORnbYZLoHehT5Eab4YmB1Lj
pg4oXYr742z0c5Gsopl9DOLFscj2W1nfXOgjwETkdONWjT/tQ7AtxzpCSnpl
M2+47owETnQtk2UE83IbiRrMuOQoQO0vop3FryELwhIOMt3k7kuWU/Apyjw/
c6CwZ0MzoPYtLnmVGorcYhVoi27ELq74fImnpoIFyy9lkjQsZ2LKblpUB2y8
u6strDI3wBJXD6uojz6gNHhRBhE1q8w4M0PXXVBwnS3DI0HTyhzx8R6Fiyri
pe+Kw+aUREjSC6TemMXBZdIWbSnhC7KDyb9wsy8Lv5zhTBgoDKt9aghTpigN
vKwkTauIHTWhjsIlla06L2R7aGqwCaCFrp5207F/ZkqzqWqVLxStmkpkGsDb
VS491U+Lcq4mF2GtS7Y/QBQ2CBublgkgboakS/jAjEytOMMV14uN5J0lckCb
6MEIS4IEexah+2L3NSk4f8kqDmv0OkZWJqwDjdQOucDPkvuSfRq7ixQX2HO5
Kch5teVeqAxlhaToP2qE6P+m6u42NB4tmedd5sPFZdKWBOOC57kqeVJ84MTJ
jEXfldPHCXbpnsacSqGJRNJYb4ST6SiAwiFFAc0YkM+sgM0MJhNsQQMUFunw
w4SL5O8FzUxpgl2PnwzIsyV0UaM2XjX82DNrLyzJbSfVqZSMm2A5fyXJHoWC
CpnW34VMIqHRHPfOvMAkRHxBO5o0eQifQ5G65djA+15pEykKdzaMUtCBfH9B
/WfgXiRMpTPudRSQy6SQGkr1dKNTpcBNC8ICwRV6TCKfqwZs9p5ks4gWaqb4
0sdA8FbRytAlonBhu2Bvz043N1Y0EUr+k/U/+PwTvnfmv8z3g/rf+sxbPVPo
5PzJEfnLTfgP5jz4YO+k8j7BvN7wfy3ntLRZeLn5teIw3zL6Eg6Oten0M/yT
ASkilwg31xE9/39yRGwsN8fPbMbxf6cYgB+nff2D+I//jMhcbcI/i2B6DzPz
3/9/4sffgJcF7svV1v+jTD9jA+wVycab2DHclxuWst89/Z32cKb64JseFXW6
lOMXbw/sFHcju0LMvx22G+Ow8cR7Y1Nt/Pz/oTcd/ysxv/elLxn3RlOfOh0U
//KnP3341f7Y/rnASZwDX25/+W8e/7HA9/7ADzAghzEH146H8KfxOPe+dL3C
ywjagHDRRxNIgsMm2ZhL08nTzAOkR7+kWFCzjRdtx8/D+IOph5kfeuRRis7G
F7XAjY4f/7tJlwjlhWu+V3A9RRxGftDP/71qmxnjeKutCLHbSTcHYUczMz67
WZAx33v6dxk2/kiAA2KD5WFFZNklouBhPb1BQEoOk9hrhbgTxzyYyhL5+L//
Oxr8lrfc9xfe/bp3vv2BC17RJOJtT4z//Z//8uNj+rzuod1w52/+1beEKuMM
+d//wfF/n/cP/95TC48a6+ppiQ/+xfGE/61vvW+B2I32/42fPv7nyP6vP3zm
+J96u9x865uuf+TZh/+rn/m2v/XJt/ylD7zhye+431ud0Dzg7NePJrxGXGo6
j2pwC/N4mgdf4ONQXC4DLLYFvpRhTpiFhzvog8bixrXKWHjCVrEwrt4V+NzN
mKBDc8n1Ra8Kg7nEuNzxFmwRx7sv/KcL3Bd5/+xdhG4fQl/k9c6hu9zAQfRs
hKeZJ/2wbyuuxJ0FWcKyPLrAc7rXFI6FfOX4uPJbw0BveSgiI2fwdunS/d1Q
aAxP/jw+WAM1hl7pCtZdks32wc4N6EzS36GAory/oLp25Tb7bgJF0DfOcc+F
x9HiemskddxrzSUt7f32mCbETI4IVvSwuvHUVF9ZrnmDGhJq3CkA+XBAiv5h
FArvZ8BzGymvZshgPdaztkQ2dApjYNTC5UsSjaXJU1KEbsH3nVTUflzgWIl4
CInYyirecgClDQGyNSLxihwsP40fAKdcI+FFQ+XZig//P3fv/2zdXZ2H/Sc6
3+65+8s5574CgSSkV7ZBEAzii2SQhDxJ/IUYXLfTgBxEOnVN/QXcNJ6xIhq3
uGVwQkhHBWfGjUF2BzfG2JCOARtn0tAW/xCl9rRTNc04E7W/ueecvdd6nmet
tc+995WEJb+z5845++z9+az1rGc9a30++7z3XjhJzkjAhd4OQvxI88VYMfZX
Jgsq40Razv1d4PwFXU86Y+fXciXpAEs3XzkOkp1SVljWQLe3/paT/cZaoKAc
3DHOHD4pN1T+aPXhumRJahnkCQhd4lJLDUmwHIkZ5HeM1M5uYXqYp77c8PBB
nbbU2DtzEFkEEblgJ7WWkZJrBgGNndxIUMuWyBkWy4GWNhe1/aGLoCSChsR0
Q6qyywmlbajLvN1xYQu0ixCgkZbONCsxrG9QtiDUPh25luXRLwNhxmhyHeHn
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
50HG20TaSqI9ypFOHchp1p5ajIj7bSXaOWvaakytQTEcrXmaW4sKnPKjdHJR
XKDFaOjEysqlVy4kB0+g1E4Y2daGlc0eI3A+xU+9PV5TZdypueLIqa+LarBg
0M7JBm4wtNlesDEB4as0A1NxL+89159RV1vYJhheAstJd5J3TR459ELxrpS8
nheEc7DhvEy3zoRCu7UqlCIIJ/Io8D8VboHXhz3P508eV2VCGxyZ3oeJk1Yb
I4whraEYogi+1WXxK1qVC9Ol3deCp5uu0YswuGffYf/hVFIsYNhUDapmHMQ5
5X7WeZaOuBsj4TihaRMnb40zueKnOE4mSMmlslLUt5d8aC/xvbGqVPMqtzp8
Pvc201Cz4ye6mjBFviwqzOlJS0cqYB0uimBV07vUFE0zIVZMbjPGjTvdQKga
yys2IQJ+W4SjydMdfUw4YDv3PGzRxBpaL6uD7FCsF7YnEHe6TrC0MKxwfDFJ
4Mugq/vDKdgnSUtCN3l9XAfxW2rRF1m3J7qyRThZ51fW9nZRnA89m3ZN11LI
srgXbNTrmfzn4Yw2eOftzK0d3h4/mjEIVElndGZ2zlEOzcN+2E46Gbt+dt6O
s/DgulU44wcT41vanT63oJwTPqGVbdq5DqKOjJOSCzBjf3IGNg6AsAK08qKw
zX76p8ePMCbXHd7ZO2/TaBrHKOkt3JQIMo3bI+aAS+LS0PUY7UCJmc94nG7W
KHTNcFcrODQ+UTu+kNwnNTgn1wiK2TDROc1I2TeL7G2BJOMW9hk4PUE284sf
eXguDDTwSQtpJXaN1/jbFiBzUgRBEClgogKWIxo2oLJoBvf9I8uawDcydUzt
RhlCLicZCTojXnOVn51TpIiQGkQij6DqWZ8QbsKBu2bn7iBHP61MCVLkdeBS
EIHwUaMDDv6yIERSMQlbvWV0fNYQ2hSyAupzbDPOHKWofim/KKwzjkswPmZK
K6CBTgS1VMm2cr+L1jadfkTZ51kZoubuRL4ZmKKxnbjAs5ieYxbPGriZbON6
wZ/K5kPFDSYwm3c+bTNHGd6FcbSuXWv8lwUmGR/lm+cmSTpStS6ClZvG1VTj
Ij9nXG2Fn+0swM55Ld6xRIT60kXbzr2h4itbGT8gPPpC6hdxjvVCBMQ+mnmB
CBeULJIEh6mzMQosszqRn6dhiWOGKso6tZ0sYoJMRxOR9Lk4SKUgegS/hKtE
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
           "], {{0, 
           69}, {2048, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "XMP" -> Association[
              "BasicSchema" -> 
               Association[
                "CreatorTool" -> "Pixelmator 3.5", "ModifyDate" -> 
                 DateObject[{2016, 6, 27}, 
                   TimeObject[{9, 6, 41.}, TimeZone -> -4.], 
                   TimeZone -> -4.]]], "Comments" -> 
             Association[
              "XML:com.adobe.xmp" -> 
               "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> \
<rdf:RDF xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:\
Description \
rdf:about=xmlns:tiff=http://ns.adobe.com/tiff/1.0/xmlns:exif=http://ns.adobe.\
com/exif/1.0/xmlns:dc=http://purl.org/dc/elements/1.1/xmlns:xmp=http://ns.\
adobe.com/xap/1.0/> <tiff:ResolutionUnit>2</tiff:ResolutionUnit> \
<tiff:Compression>5</tiff:Compression> \
<tiff:XResolution>72</tiff:XResolution> \
<tiff:Orientation>1</tiff:Orientation> \
<tiff:YResolution>72</tiff:YResolution> \
<exif:PixelXDimension>2048</exif:PixelXDimension> \
<exif:ColorSpace>1</exif:ColorSpace> \
<exif:PixelYDimension>69</exif:PixelYDimension> <dc:subject><rdf:Seq/> \
</dc:subject> <xmp:ModifyDate>2016:06:27 09:06:41</xmp:ModifyDate> \
<xmp:CreatorTool>Pixelmator 3.5</xmp:CreatorTool></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]], Selectable -> False], DefaultBaseStyle -> 
         "ImageGraphics", ImageSize -> Magnification[1], 
         ImageSizeRaw -> {2048, 69}, PlotRange -> {{0, 2048}, {0, 69}}]], "", 
       PageWidth -> Infinity, CellMargins -> 0, CellFrameMargins -> 0, 
       CellChangeTimes -> {{3.544379162237352*^9, 3.544379175555642*^9}, 
         3.574009622854604*^9, 3.5740096771925993`*^9, {3.581868126615425*^9, 
         3.581868137389792*^9}, 3.6119448864400587`*^9, 3.644332879574626*^9, 
         3.67602184800485*^9, 3.6760221842131643`*^9, {3.676022245795371*^9, 
         3.6760222459531*^9}}, Magnification -> 1.], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{
             RowBox[{"(*", " ", 
               
               RowBox[{
                "Evaluate", " ", "the", " ", "following", " ", "code", " ", 
                 "to", " ", "copy", " ", "the", " ", "banner", " ", "artwork",
                  " ", "placed", " ", "above", " ", "into", " ", "the", " ", 
                 "proper", " ", "locations", " ", "for", " ", "Working", " ", 
                 "and", " ", "SlideShow", " ", 
                 RowBox[{"environments", ":"}]}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
               RowBox[{
                 RowBox[{"SelectionMove", "[", 
                   RowBox[{
                    RowBox[{"SelectedNotebook", "[", "]"}], ",", "Previous", 
                    ",", "Cell", ",", "2"}], "]"}], ";"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                 RowBox[{"celldata", "=", 
                   RowBox[{"NotebookRead", "[", 
                    RowBox[{"SelectedNotebook", "[", "]"}], "]"}]}], ";"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                 RowBox[{"SelectionMove", "[", 
                   RowBox[{
                    RowBox[{"SelectedNotebook", "[", "]"}], ",", "Next", ",", 
                    "Cell", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
               RowBox[{
                 RowBox[{"SetOptions", "[", 
                   RowBox[{
                    RowBox[{"NotebookSelection", "[", 
                    RowBox[{"SelectedNotebook", "[", "]"}], "]"}], ",", 
                    RowBox[{"DockedCells", "\[Rule]", 
                    RowBox[{"{", "celldata", "}"}]}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                 RowBox[{"SelectionMove", "[", 
                   RowBox[{
                    RowBox[{"SelectedNotebook", "[", "]"}], ",", "Next", ",", 
                    "Cell", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
               RowBox[{
                 RowBox[{"SetOptions", "[", 
                   RowBox[{
                    RowBox[{"NotebookSelection", "[", 
                    RowBox[{"SelectedNotebook", "[", "]"}], "]"}], ",", 
                    RowBox[{"DockedCells", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FEPrivate`FrontEndResource", "[", 
                    
                    RowBox[{"\"FEExpressions\"", ",", 
                    "\"SlideshowToolbar\""}], "]"}], ",", "celldata"}], 
                    "}"}]}]}], "]"}], ";"}]}]}]], "Input", 
          CellChangeTimes -> {{3.575758860585256*^9, 3.575758891310994*^9}, {
           3.575758933293943*^9, 3.5757589725405283`*^9}, {
           3.5757592530750093`*^9, 3.575759371153764*^9}}], 
         Cell[
          StyleData[All, "Working"], DockedCells -> {
            Cell[
             BoxData[
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzsve+zbOlVHkYlX/Ix/0KqTnfvTs7p3nt3H82MpJkR0swIIc0wM0LSCBkq
EpABXPzQj9SM7CIEEUkkRjYCOWUgYFEWchWWnMKJFKoCJCAbykWY2DgpjV0O
VZZSVFIBOx+cib8l3b33Ws/zrLX2Pn3vjKR7NZfanOqz+93vu9aznvWs9b77
3NG/974fffo/+re+5Vu+5YP/zuHH0+997ls/8IH3fvjt/+7hl3f8yAd/8Nkf
+f7ve8uPfOj7n/3+D9z/vn/7cPPRw/9/y2Ho8fN6d30HXv/+KzRm+nrNN9zH
O/l6edjeu77G1/4bbcDtXnO8umud+jrhc6dd58TrXky/sfjfu+5dt3q9unl1
swLP4nM3Cfi969517/rmuV41W9qXWaFe3QXuVXV9E5XjV01237vOu76JuH3v
ehVf37hyfC+DvnmvO6Ncns3trxkV7wwc7hQz7l1323Vvs3bvukOus6h4T+he
Rdc3fQN5Gw5+02Nyh1z3cL533THXHVz1vukbyNtw8BuAyR3MkFu5bk11v+m5
d2vXNwkHXs3Xva7j3vWNvm6SkTtJdV/d+RIjdceicccadjsW3kn8v3fdu6av
O6MhvClf7lhxmDfsNs2+Y9XjZsO+hnQ6C8w7Frp716viujPk9Bty3bGpN2/Y
HWv23XjdA/MOvV5xXXoVC929695177p33bvuXS/voi3t/viznxm8b3zYcPX6
6+66oXmaPENPCx1+Ysw+jGzUkiZ/e/N1ozvF0s3xV7tzME+8iEaqUzSsv1ag
9uviV7kfPTrNYJPs4yO9PtUnw3r6YN82Yf5+4pGA/yyADU07EZTknXMgzcyg
nRdinzA8pYD3AWeGS8icvp2jCj1YsXd2wOT8gsk+ZEE0oB/WCvlYolr9WufX
PhJjYt2zrwJt4cxZsyElyYAa1YZH+k3OiDDb1FV+G9jbJw3EU3tJvRjHGTGh
ZJ+Jfj1bkVZTfpFV+zThaEnDnhq2jfiOaZlpN8tLFbWmfDZIdJ9+LfJrPuP2
BtStPNgn2/pMyCTys/XUPxBpmUs5LhPf9qHYKSH7qQnJQorvZKT6obTtQ4ql
p/asJ3Gq3ok3Af40Ys7YG+y8Ae0b4+Jzch3ZN2m5Sfnq1evA2GxSSPNJ5aHO
RFRUdJWqGJkxmYDxWQ3uVJqUqNKi082b+xJtmKYT3Swt2acZ9nGSG7yQTo+b
2IoqN1Tzs1uXmN3TDfMs5qENgM1VnzOt2NH4vDTP3Ke8Lsye1MDmJgzPgG5f
FF9fjulXVd7GbOC6c8OKvlaf9kF1b1lge9ZGZgr5YZXJbycRGGy++Sm7WTT/
5W4u+yu1Jg24tb4xoVRKSlmO+Stq/teFvhWGNU7veodSuj9RWCMaCqyt0uSv
ZmhgtG9KS24F5CY2HueRJMViZP75S/enXQbJ9U3wiuM3hSbWvnn73aQpfzk6
TT/x+K4GsNj5ntUQ3qjDe9h8FuBnh8YtucHa6YbzNkyal3FJ5Ov1WWzZE7vq
RQfS5n1KrBc3+VjIfh+kXiyvSsAMpb3WnNG+FjdzLtQd1C2ctxST7BGsLEQ3
t0/TRSShx5vTDOnEBkEb+FveLSKmk6qbrvIU4jbXFQZWW/VUhkJ/ddojT8du
eumw43D0zj63UWOEIbNSOYNViUaq5jeUEr4/2dvcFLKapTdp5tlXxbfk+DR6
zfRgCWiEFFGOgZ6QF9o5pj2y9RXjZ2GRt+KjCNuHw899Y71uxbR9kohqQyGU
IJXwLkLqS8gXtX8i0GMP0zvlyj1RKV+8myDAY8+8t71GgX8TQdj7UUN+hO4w
UXkhd0G8mDheq2bb7QmB0OBR++T+9mS2Gsz4F8Tuo5Ex6EEiQsTFBiMnd8Ja
XBLhx0e0aS8gKiSop+Mg+Cg72Zn6oskYuyBhY5EgsYMas6y/bpThVm6UtwPm
fUo9214144N7miTUa22khavoNnU/DpUw0FK5N1Qbnk2Bndh0ZwpNtFhiFUje
+HFo7Peu15RHjXOmT2zpmZ+0XGh9EyUa+hmrqsFbvBgCMQZ79nHdoEi80eAZ
aKoGExoIM2qpjGoGG7ifj/15nVAgTw8Gpv0CWAEXGKsgnlDaPQ3QkVlOUwia
OAOTYc9ThY1DYxpVslGbqL0sUbR2e2aCaGzS5EBycNJAk6Y6QEF8FkzEu30O
ayNaFNuGImFTpa4kwkKpfODjBQ0clVeuvyHpgBhqhEoQ2Va2JT5DBIq5cep2
gvZ68RUi7WMq5StquAWlr8mcWnQn5LWhlBLZedjvQ8hwgMZ8pvRsjGPxK8/o
VLyaENyEXohgo7RBcYz8uV6zCiW9jSrEmiDsQvfl9lhhLXoVtoceNDL3nCZl
VdqDDMIEEKw+WOih88Ur2lzIepCNwnqdeKh1fByp5C/p2u/D+1xhUYAOJSnS
oNglQYIiho3yWbnEg/kQjFRRAw2B5V5IxktnkkjFYmtltNj47MkpJT+K4HWK
iK4SI26Z2/ufmuw5a0p6rDlDRSKSeX2h/EwP7aI5rUJnkl+4BFJV1VA+7AuJ
E5stRuH1dOhI899NVcTzQMiGKLgQ2g9bJad8U8ZuvImst3XpM0+emr3MQCmp
ueJznSoYSIHDHwnUrR0TMncmyClt5yb3oWph6NVDNDUZqz9Cy/xJUmnZzXPG
NsYFmXwnjgnNopiAeCEXfBMk1VDTkPaYqcOXfqA4r7AdTSCGFh0jKkhSNQ+C
rZkt/Ad6DT+1s31B+IMi3fU0Aiybpz2PetGMXgMoyRcOR++L0jxMudytJUJS
00I6wLD0ajaXWpoN/VLPT9WrU72Wb1GhYhbQsLxZdkZpr5uqdk4laWZifxgQ
21GvG8KnxTElXfBL6CpMLnuPYd9XpPzeqSgOhhZa6lfFhF2gt7Sy7F0TQz+p
dalDy/wM0kpp22u2BoHNdUdoOcopq1+ALm42g4aLzVIv1jFSoSQlquy8K4ib
LJV6lCGN1DUcUSOlB5CXPhB87Jj6GCzWPQl3OGuVIyCNqdRELyL+lAk71q1Z
J8C6AE4d/3J7zw0S+LlXnPd4yuusBcVSko+YgsGm4VIBQ9dBui06iT5Z/WVC
UkSsIDbkdRMSrQ813SwJADJ/HCsIQmR7+EPZhj01VAUQ9NWD2vuZob0i6a8F
T80dhAArMtW995CTLmk4uerp4d4aVYCpaBnEUPu64diQ/1EDqZacJ9BWnbsC
O6keMLEVe0uNXVpI2h7EAm08J0hPVnnoYczeTRozKOxt+Qi9N697hzqfbu0p
r6k3pqhBNPQog16Q+aLUPyCCIlaiCfTgMCxUk7LnN48gra6TOLHRZGmybsTo
TPQMeDFBQkRiKJFFArKpnBHlxsdVKxSgPTztHca9PusyogLF+mMJgi0Ylxin
d08yQnIa3TQzYp3yr5Q/9Licijf4gCQa+KxNBYtn2mugRKJBcqDQYI9tPKAW
6FAi95TUWnBdMUh7LWQi3ajvcrATOk97zSeFeEztmqUcdKS8VS7IhSejb7RF
kGmXQdsrCoo76/ObYayQ4qytgndPjdVTxceijJkhepTLfiF9pP2LlAMN8MEj
KNUznugS1Nzjee4wmbnHkFcGo4/x0N7bg1CeUtMeWiwLomLLIuOF0kubH+aL
MY2vFaon3PTEpNLpiuqZ1Vv64BjZU2NPyLA+eCjHDSNRSzrYBus6XBCQRjDk
NomI3dtWAptTFKO88YTlKPpaQz1htSn1afklDqdk0xNRk4IhNYL6sYXsCJdF
SLrPJmcO0upwsuyAkjrIgGjVdnGj3oZLCSRCiMfzu5iD1Q3LSA/Fk11bGKAF
CPzpqVfvIUqU+8i+8FIY8staSprmZGhwJEvVUwSBnGVsuYJHHROp54JOGw3V
zD4n+7X8mruv0ITw5U2jtUnxL/pGhLnjdUp4ZK1tMPSgG4Zq2DdpWbkmGaEj
nVx2WRDQ2I8CSDgkkuz2BJTW6IyV1HFRMOhD2E2AGJiq4WzqyQznITahxDHV
Q3e8cTyFV35sQs2D4dwEeKktbHikOWVxxHaGg8XoWT8j6QCPdhx0KmEi0fum
V8CdYJz4wCRUpaDkAI1qGaLAW+zGWztudwU61EHaQXgfyCSkRXtCUjpDohmq
ufYGPQ0QRnnSoaoy1aXsmgi7lJHBJBoUXKsaUs5M6/ZUj0QGST+5n1T6gbQ5
bfcUZVYVtpD2LzuTIBAAnT8SwfYLPnnxr3G54eTGZmfNDIsbld01jpuIdVpt
qcGQXOPU8z0d1SxUAY6p1IheYkR9BelSr2jvZLyqgSOvqRSagT7OL9WkR6Sc
7cXxPvf83h7Q8S/tztAJM9RNRHhsa+n9BeswVx85rmkcCvhoDJeWdc/eOWII
Vi8BXTudJKPZZtNAxlBY5zPo/hEbYeIbSvmeJNSqBiunyMueGgmXAnNHzqnQ
n3g5gLxANvcKY5BESJA7y/pvubZfi820BUBD4uoaU4xavtAbULffi4UN0l90
0nuPlNp7XlSaOqCqOe6fqV6j+QGraVMfFlWrkkj6ts70AV6TAaoVDWMYy3RU
IdZeSjrSQyaYC6ZU7T2ZlFr6XZyk8as3oUZEqPGwVIq7CYs1Sxy9l/TUI1bg
CGWvWopz0XEjyTx0SKm2hl6R2mmqVt4Kxs2ILArAqfXidwTe20jCAl57iriH
/PJCxhJHa5FEwMEGmJNTfcQTxwIu+z1pC3V6qifA38+ujatePlQfuCiIC+oF
MOcdn2qvKJ6cDVKO0FlH7yLm+JPN4LPvbUkHmJ9+rqj9PHbN2NQgKbgfllYT
K3K8NEBBJE3reG/iSeGHrrwKajT1DFI6qXbLu5VhcO91eU+JAMXwxsAGW/iI
bw2Th0SJCO+KhwRvJNB46+d89kXRS3N5JXlkcHCeaU6hh8Fmag8O9Dyet2ws
LM5ATkwHea8PUkUIFQeS69HZo6BDsfcUL4k4HkQ5Q5U3AQwh5hoHzgBqyyOW
a48ONMR1eyeMAsJADIlJbrJWM4BcN318IXqyFUX1uXZqGfiiDF7XvHwQ1U3e
iVoQCsvEhn5VlQ7ssk2f5ZR7gXNLUxjnLUmoNwbIBZULHU9NAvFQwk2yRm56
fXRkXIi8yhP9LLjUVHAguI3Bh+h70Eaa09nLveKeoubkQYp5VpImXDeEpDdF
WgFBbBNJbn6oceXGTIqFJF3jrSlYeg2ERU5NRtBlUe1TQlILRAoJPHlrgAiG
hHLV0vJnnZsfhlgtQ1vYw6Q18QHNhos/+oe9mIpSqI0KeHUdGB6qm4fSO0zf
7zRkj3T+sI3UlVsFjKSqhLYhAO7s4g7H2wCuktQJUOFwBfaOAkrOZZRFGEXB
Txuo/+EK21OkDH9iDpmqDVLD/PF64VaZDY4hGZyAMpKLctKpQpDBxlbnhrYB
S9Gaui6BtNY/hJLkaky9PWe0Z4EVPgAI5fEsQPfVU055rvU8myvJNaaVbtDb
CXx2PlCwwAT3C3thNDCmLdoPMJ6NRxlzmgr1Dm/o8Mk2x4QSnMouFRcoz7Uw
JGz9rCIT/n4fIbBugZsEkly/w+1u+FZbRy/EXsssm/ZCDFbmnQduT+HbI+5o
J6KiOsKiDz1CzCLJuwaLBbVkWUu9MsbStqddOYuhm+fR5M1LEGQQnoQReUTd
nZY8rkSkdbZvIoJR3EnEXMnJOwiCF7UYDq7OjoPXKXqQ23Wq5jQA8usBZS5B
BmFVQ+MhbmRto6u7tpPESan12sR6CNq44jFEO4MI9ZGWZjY6sVH+qCIDf1QB
Ls2uQqJ1zE/3iOII7gnIVhdESbiG7rmyQzBVvnwXDOljAySRrS81+UI5I2RS
607U4m6QZVMoQUmEGkoNeVVieD9CFdx6EpI76rchLNxj+5bHkKHU9lZnF7q+
a+r6XA/REqw95V1O/RHymrnEQeGYhlbNNdx1A6LNskOJs3YS9uSalyRnqSxB
oZHtj6cSdHvUDaQGayD1nPAI/SSyTFGCVFo2sfStqQHzrYcU0J3TwJazGoog
kjJwI924Mb23DbYZhDrZ6mAXi4+mEgwm5Wdtz+US4mB7EI4g7T7WIWrclliv
TrstYlSsyL6PpuaBaN+otWE3xP2GdZJKZg839+rUZHpn5WmOFEZBSUmNaffw
V/pD810lF5FitXGVNuoCMcksqjJOZi0lrq5rB9YElnoDUnIvKKTPAhT4Q3Ty
HaipCkjOPSfflAwiDqBvtDwlL3i3S4YRRFSaqf6SdyCDuQaFd72CInnhJqek
b7TE51rJMeVOQDahVuyu2ZdGHnT0YmPDAAYywCqXIOy5nJykOQQXFQXWPfbo
mi1kq7wBhsC68NI+NBOAqyfKsdWCBsBCcNxI78Gcb2LnDlB4ClBEnCpUenwk
uhTvOmT+tWYEZx82koRJ6FXcPAaBoKP0Z2yJmd4LBfK7eVyI4SO6a7Tu2u/R
rjM8685KxK1YAKJr2/mySqOfpF+v8XPHRpKUWQODZimGjytO0D33lDSEg9iH
ObVnNntE9xQBlvRGv5WOBZ3/3kskpduY5iSJ0h1RKrFKUDGl3JTZqBdFoyIp
TClD8SqEXTaAaMAgoVZwqWhSfvXOVU8cDxzOSdY8m9QCiXjcPoDt5J2fV5DC
myOULHHzfs2Ok1YggtQ3QjG8CRGGoKCgdWR2UUKxL5wa2jEqdc0wK4Uh/f2r
RBJMBRdIflOW5S6I1QkGIB+xo9HyQcleyL6WSGpUGFITQO8YCxfWJnGclU5j
iCexi+O4pvBxG8nK6YnmdY12iKgO1JSq7Atc+zXlJuUItl2OBgF+vVZWiIxo
xwvaaJcFkG0DiD0p7b8a5j+FEuWb8aTiBWPCLh4uX1N2U8MG4ym+uooo2G4v
sYMGclmhRNCGMNYR2l9wGrqdPjMxBxRq1IVGAod6YfujfUPuj5abOnly4fGp
JhP5jpJHAkITeghcq5HLvp2x8Zpf6F56BlDOatBjoJNx1aJ9PYHsN4kerrpo
k5rkuG3lvH5dM7zcjPkW1Z4N6rRP9yVZvEhhmJ85gIrW/JgMat9+bbKsrRGX
++wgkZzk5doFitty2Z57dWaJQ31hdQpkJlhkrb0u5OWAKvsO1nITi3MksJoa
A5Vo3k4G/nOHEHpXnNiIMdCrBoD7WntmDkXQI2uVWjp5zMzkFO71eBb8Qc0C
VdgXNc9LLenkTjcOjjMVNWr5oAlugOaCg+CRVbkgNaCdo2896ACHuqk1oWTH
YmARjph6k1bptYok5Y0P1xESSepdea/BcdwhMan/oV2V1QUKKxcUPiayhbw+
Qt/2Lhrck4uScA2Cyml6GrvgEdiIVpzynbNS8DcALQrIxGtajuixo4D2QL7B
QtcSLFcA9Ay4ie2AaxcJqROJybBWexpqJrVYSFEjxLTd9WaMVIX5443WWuNO
shY3BURIavs913YEI0s39vvXZP81z895jQ5QECOJo40VbWGo8tIw5BSygCt1
7JFEiEJJoglJoJyckALY5o3BjpajHQRHEPxkEXBHWDzZKuMqqTE6W+r3pDqQ
UKtmSvStYSZh4Tyl4qV10I8otQaZIimYLIMeceTsdeIwMZakeM1BRAiuhXiQ
U2uTCLR1r/cd5B2HwF2mhly7ZW4MJIJUmKgPvA54UgNJnS2ynjOOBAr1kTcm
lBE7RFBECUQSofZzVOoNmI0WiJjskgKEGO0TQQbqOanT4OxgJNk7UsuUpCgB
aMKpZ+O0RTKCn9rJVKHZBztjgIoP12laaoRUB5wqXpdZpmR1iwUpyXUwSSff
Nwoah8ByHPGSROBWJCqhsJ3uXK/DV7toldvMcEVI3aniK5iXnV1HuJCh0WCU
DLTx5sKEmxLW67U65XVBmkzfYKIEXKthHgLejkHna9bFAgrWpZySTX2zK1Di
ArdON2lfLDrJxFsbf+iNgG8JpRkAzprIzkDyxTipnFG5uw4M0Yzj+5U7+u06
eARuXMucqb8ynCULIg933IXKWrFcShKJtq9Vxxgo1lvvfGI65KhJu6vG4LM8
QptNcRBNuFdqweFayMwql28GZzW4IgIx1tfr9JWZkalyveZve7RG0Tbf7ITS
nOoXkYTaQuIb51ds74ODrsycKbGXQ59cWsU76NERmnad1l1bMRWW7hKqO/5V
IstyKvd32eUgvCyD1wwCS5ZqS9LAcSRSY21ee3VjMJEvQbQFFpXucUwsKOyL
7+OwVUyOa/rEsEZNjsTjWMfmM4TD9p7x27XMby4UVdWFt14Cnblxb00EQwjA
TOJkaked1Wxhw9/m3I+KlJoQHc9pFR4kjiEj1mkSopx0MqNHRYMn5X6t6bOe
MEA6t8CQ6vKGjbkqUbYw8beaO3u0ELviW+ZwBj8gjG07G5D3kujwk7UIE+/B
IxSwM+3lY+xSO1ozRKOpPNwj43bVKpTvkFByJI8/IXZdVWE7SeAc0fwVnSzO
i4rxa84C8d0PMRSQquLXPjJbdmIJziVUHwK3Y4xUtRiHPD7IAgBUTAJnGnJB
o3+tY8KWP3YLsu4u2u/who1DBlbMA2JRM5mN3ukVYE6sMtrj9IiSaGcdabut
IuDIRBxwNqgpT1HjATWjUr5UCzGjSI05KQSEIgTXeUIrQPqmNQXI94PALW73
MlzsLJS2wZ3A2Mh/j05DmcVeuwE4W/AoVAcglLNBrPa0kNmJv91i77iXtgxN
PUMgZIy+YhXIrAlly6HNjj0qjLRODLyaOJQoF6KMqOfn8GV6ePLCEYvyOs5M
Wwba1iWomfClcFkGgRLorBzYGe1aC87XtdduWI6yc2yXgFXlD3oyfeVzP33n
wg1npHS2PM4cMhQvWBmxGNm9FRe8r4w9G0+rhwOYQXcHJJX0d2WJnCFHWFJw
EeAMAkvK2uLFKb8uH8Gi12FRZWMMK7/CCOHWYboFcxnEVnQviYDG2PJ6IlLC
mZhxFdPqRAiFtdgS6l7guiJbIYwlyGkhqiYUHadTIWicg5oRzfTJDGuaLCd6
UiotGZD61eIYKtCeU2Z3HQq0HwLIWU2BFQFFpWpNK86ojX47w5CJNLyVKwd9
apIbB0wNrpySQESBusmAqfmDeaVMzfyaXZtxcwqNbE8GecqwUsfynIFFU37N
x2gKimzqFCBTQnEjMW5k13zEp6CbgXcGFjyVjptuNJszemrdAqJdMWEdYtys
deZGN5WlRfN2ptmBEmdygD5Pn06fsfSMSVMgzIAzIx23OsNtm5FXP0ddz4P6
rFyYmvz8p86081bBqd4TTYJWAphHniO856tHfqRE/hycZ0w604UbxwST1smF
GWCngpi5OgMsfk2nfPNQZCNv6TqTw1O/hnSYp/RMLs+vO+XjOQ+mmIaXX3OO
lHy41RXPhH2dbLgl8M+J3dp04xzOzOfX/OozY6bSc+rOjWaEwWW28lezXtei
mkXjRszPTKsbU6CpXKufKl/rzIw/b+mpjC7m3M1BdCNbztax6/mp6r92mHSN
to03vbA7JyXnYcwRnEemjMKtLl1ZHs/Pb3XaPGxKAOe/vdWFbonYUwNmxGcK
ihi4mzYyt0T+CbiK9xG3cZW6MY/zOWCekya1p0mmZqadWuj2AAlQnE2qszrt
M7/KNsysPp+Y2YV1mnPazXhcNsXDcpUZpxqL8vkxmufb/KI3TjuT0bdk2zxt
5lHKGnKjcKWrONlI/KnfbudFZZLptiFPMm+wLXRr+XKj/J4j12UspoaVaRL+
JiEtXb5MnEzeKSbMUILNmM/fs4XrZhtKbEsWzcd0ApP8h0NnESPO09HP47VL
H/TqjvfXXTn57jTPbu3P6uRrnrML0/qKvO5Ov6oMqy3ZT44/mNf5nLs4SRce
jM8OdwS9jrmxW9Oi46+1a3uCUbxb850uR0EMEJc7u9Mx2juAX2HOvkQAIxpz
vHI0JrGKIJRMOxjpAVLz3PcUcQcZgHeKXseP7/TOTnG2FbvK5g6LKj47NcnN
cIN3fo3emRnFbF2YjcERnqzjTTy1VqsckzWl4ZoMSLmzS4Hbj8ZH24o4rmWe
WklyZEd88uBOPmuKqamayNUSyqU+zEyBlqmMWkB7N1oSOBaTSBCbBap2dlSP
bmr+mKS+XBHWbs+ZlVdfq2Eji7odFGwi+kY24dtUnwAEkrjNVPOjLEQfd+vA
lg5zhh4gzclM20m4CxbtKjqZEHX6a4xOlEEYlirv2ixZM218GKbasQ1B52mV
dD+uONNuqQzCx93IoiKpI6Pm+qKOrj5wuKRELUGq0sor0nkwJw/uY4ORSypm
ywZERkHV10XtzrMRvbt9SbNG+gpBO9g5209aFqs+2FSMyU5ahc7CGoQo0WM9
mfLEw7qs70uWap+mpScqki7BM+idWaZVdYQKU2xpCiRnw93JEpXys5aqazd3
uYkS0bsSMUQ/sXo3BHRdPJJax2SJQxSaDSIqy8VEex8jnj6XQtQlFerIixi1
nXKy6KamTZ0Kt0AUEq3KZWFmWbOK7j1BVPxa3uFwpP587TeL6kz8z61v7Gkt
X27W9ooDUxV5yjV0ZdpDmjRZiKuy1VlVhe+mZlXn03SI0WRc4FHVSHe7SEs2
tSPtmrB2JrJKIapHM/jrpr4o4pBi3lzEls+dXUcLd6IDqY0JpjZp0crm5Gwn
+yOlaG7hJNyR/JGQHpqp9I9t3ljQAZG7HxtUhD6O9NDEqsEjGRAODSdyTjRr
TvKK0U411VDNwttF89yAuFM4g8CRCVU4JDF1Km0Rd2pbDOLg103dGiDyPkfL
WaRlEeVhIc6aTghAwM462yuAU7VYa8o81BMI3/R40Zb4FiY9a5QLHUUhOwFY
WSV0sFpi1J66TvXcWLKsTeiMOZX3HevgNX27FqksVKtYomIC7Vx2zfTef93V
S9jMO1L4pNv9vqlbX3W27LWIluvIQ+3GBZy9ZpypkAS97gkznaY5mTqKelj4
dmcSkQyICHiHM3PII0Kd9lzsF0AIvF13VY8xsTsoJL1LCRXn4UiZVR1oQxDt
DBnuQ1SHO0tJGa+T+NJMj6DAnTuOx9eYsyRqHE8m5XCHAJlTIc0jAr5QEOGd
fB7m6QwHB4Fv1rArNwScnTgI6DQi3R7485goklOUVpS69Dl0WfJU0RLImAh7
WIVw6A3AwBOhma5SHuxHZPbyQXKQT0h20YsYTQpKACdzUu4HSoSgq0lsMK8V
icRWcY7sZPVsSQjxpLU78S7WwZBlO4odz2afS7GKFTmlbRaiSGkm/46CRdkq
mLA7O4wZMBTeqv2Bz5og9EZvJyFGHFOaBD2sEyoHIsCbJSWRMNswWVYC8Vjx
aF3hPGv+PoZGlJNzWXyPOy8ZoBLdqTs5ASUuDhdOaNlT2dlFtZlib8p0ZGWw
X2kWeBuyKUck8wEgqyIF5e8zsbPlQQGygKsg99MGU1yKs2VUrl2COileTGdy
JNhQiIn+Oqcqu7hiiE6YLR7XgFRKG+0uSoODsuXEj8oWmL+TwaJUlQLEbnYf
KSGOTxC7XDE34VOi1/H4NK1wOPOKFuoSw4NTQYKEYwoUR7AjmpX6g0gFL0L0
gxZlEjLOiYoxvjxgV0xbyDUPzmFKVazTqVhbmCe1NO1kPJLr+JNOWhIlAoUK
5Eer1ph/KBA56YJHGYqcfSkclYzINrCMuGR3FjqORakSiZBRkaYYxdpSAjul
+a6iCktIcLYwaG8hU9kRtSTfDLlcPJWGBa7GJZSE83yLOrCPI5HjE+xFfHdW
7/LqpYars52yKFysjcw0SbQQponqFogUyDy3usbR2ZtBLrmRrZXyF5SwvBmk
aU88pHod07OM7y66E2mpEWEzOn0853jGsNw0BZR00xGpwkre0bQxIzQKRfhG
C9cdIZZpLwhruCUpErV6NU/ktEptAnP69dkuThhx1qDkXCsUm81OQsc8CQyM
VHch8p+hJwm5oE04fV7nXGZhCWVFvlJTw+psMMtI1pBc33OjxYAEH6OyhZSp
GM7RkdQIIrDTU1AeXMUlAkIOxiJFGtiRVTl3CnroWkxCSYGdmp2SgitIXSwq
wyRVNUAcQedb6UiZIAEHAZMfidmx7vODCqxQyNNkJ+t6OmQfQ0SCtWhmJjRt
rpnfK0rKYaFZrm6hFdEYhTTkNGEps6n0fUdK/PBtz5Pr+I5iFHIh0ylww+Ky
Ekt0uTC/Jyw97pCuUKeOg1eS8vTZYbRFV6SWK1OqVRh/nBAgrLin7ZUPHfvr
5u1oZkZ1XGsF1zR5O0y4Yg1x5nfkQhBnzguQlnTJfFwN3p3urzCAB+/EGGPL
aPno4OCjal2kyo5WOcWoH31f9ckdTJgsB84ktoQVe+f2rzBs8FqfyjGVmsUl
yUgbbIv1K3ylTMZg0GzVq4OiEoaYqPquUaegimw2E5Jty7nfKXSB0v2YFwiW
pAkzB+nJJGFLVkGTe0uNMTQJBNZPBBfeEVv2igMLO9cFPL4S8Rz5qXKnsQv4
jEwmY3pXJLWW8FlJyZDQr7iWBX52LlM7DHYHe0ZbZl4xZ5xRwQsiuSGzG01l
TDBD4BiJVZFf++IRWitIxMoRy/LVJTzFNeKDpGHKGucbS1/FrpjFUtQS2oNE
2LCVW9gzyBCKldJglT3qCr4leYHgr1gTOPHNYKsmRFpRG2LvGE0O7g7gM4wh
y7rgdcIkqJBZMswfG4OOZNzKFt+nx0MVRuyGR1YduSDpGcRzH+6voE6UU6yu
np4wXgJdsl3SuUczsIIQ0VQCPtAYn51MPbPNs8M577HzJqrfheBSf8IPunIK
01aMPPLRTXJHvMuySsH63CvCnH2B2IY25btWwFzQTa5XKvIr0NhFjxjlqUF5
R7GzrBFrOZG5bsaSBxLCZq+5QAxS3MML8R0OVqXQqLsSw0bNIWKzzIosSLmU
EBB0XCt7Nl6ljOtsJ9aueDw3CWSehpsSSrTRwCHqqpDuSQ0EdtJDGLCCiCXD
HN6YyApXDArRr2PAvY7ncGuxNh9NNiXBwUlSSE4xykFK4ZB0qLPOUgFhFb5S
v1j6VtF3xlC4JA+y3MnSUC04ArHd4/6Q72W82H3LwZVDJ+mwi/Nz7vuzNueq
2xcM7xJW6o4HF2IClDi7AY5kLpck8TFn08g6KiKsWvuAj/W0xG3mYW9TcWnu
nP/BSFe/1AZ3+rPbyVfCHE3DzqVD9cGCqw3DjuJIccmyAxFjG/YCLFGrOBzw
MsEZ0VGL5QLVhV9pBpbxmNGeBVHnJZtOIUDJkyogSdpIaUZwxX3IglWlnt2h
7ViXI8V5beXbV0G1Qsq42cM5A4vwCsHKJwYsd0EcIufRkfKBjIWeyEMMtNBj
t0IBwgkDaMCJT/h0OQQ7/Zbj5V4YzqMBJ8HpdxFkRrIP4HAueH1J2mg44LSH
QykhDrAz7Tk1VEs7H0Dq5wXa2yR4kRluMer3EjhGrIdhfCJB3Z2GT3IHaFAi
IAqFUpnvK/ZRNE1BY6xEoJh4UGBSKgliGhCCrsESvo3tDXWYXKRi2RWd7Dl2
RG+OVL8XGwLzGaIwrFfEhI17hk6bWK0pkm7Gxn5H6rEXtMPqHEfdECkmGpRY
JgYLKYj4OfJ/xWaMwqimdmQwk7lX9Ch9SP2EWquxDCGgjt6qS5FiMnAFLEsM
FSbKC049LxOS0VYFIPU+zKwVPAVwxHRvZBZZXpGz3qtwUFz9bFfFeqXbQGZd
DVRGUiYUA1j6pFiYeb5Xgj2acVak9OQHdvJyfmcoUuQsOCAqh/wylMhHxk1v
2q6E9XzgJJ9hsqfdziXOPnte4FmjGUXcp9JY01GVWEhb+D0b3NCiVPiUcr3E
wmWByDPGUU4URdmo5+GmxS0JBc7BDFLWu6e2ydVEaDSyXIUjmR1eb2ayAjg+
EMO9ZsEeUPTkFB/34SlNMb76+qbrFXgSCkQM7lDOwiRx5lW/Rwrw2z3pAz1r
9kRmUaGVrk75FckmHQjGh9YC/PEeL82DGiGh5BpNxY6jSYceoiEmAuFsympr
T4Z10MyVWOt5qhiWsbaA4lzX+hBZupN1hdU9T7WL4e7jWuap98w+UmLKWUAp
E0RAgiWvFK3KGCXoPS8ZQF1WwHYXjAkerTSmJKGs7XvXYSEelTOW2ZAmIkQs
zhSCVS/zC2deOUyUt0j8AhYUViIz49lT0EMTGLqLfqcE29fe9ZknpN5if2oh
bIxWW4eR+qJuR0oCXW3kVDOET0sevt271PjBXWp+tC5IMTVjuLtDxRczwldS
xLmTZL9ID8nN5EVAbGKMkpaeCrtXMmOlqxfVmSJon9UFxJppz+Ub+auV3Yzx
Fp12KFTiSanQJ7ipOI9dKdtTTilpQ6Xow31rzBLZghpIE2JJh8TvPE9139ED
ENUci5f7SMfgXmSrYO0bNdifpa6SNXA0LKO0Sh88EbyfkXrnykaWe1hXsSsw
S/ospzZA/5yAU28lEfQ2qZBiDXoqc84rPgUSbtBBVhJM0xOaFj2etI4hTZTJ
0tZKxyj2c6Xe+1m9UEsiqGakEFOqhld4+ZCWGaV9CFSOIo5VtO/i9KGXUPKK
ECuSSVo4AiwrRUYylNWYzkZC+ZAutI9lSA0YmV/ySpkDCsVKx9sN6dy0ewyW
d9IhEIEDIGyqsoLmN+QhYhq11G1ap8Eqt4rQUU6NGGpQYtO1DxIH36nHEz3k
vKj3NePJRtgOjDIuj0fbahj14NSf8oVc8L27YxpA9/qp1gicZ7lrOvFOPd2X
n80A+tatNcUO/QZ1TbEzWRXrihqznq96dmSvBSW4s2cmc7J4IZDeyc49tJcL
lNDeTN7wxixmf1ed8HlwZMWcBML7MJIKQWwbNDTqvhCbxJyaJctHMR59AnMG
fR1TZU99hdPMMUHWiwsSYjSEoWS7vwzOyl404yi1NzB52lBAnR6cFOFwpqog
iFpPBMBNSSjur7jJX/kBPmUlIWNUDEcZwVSTd2pI9v6spwOdPYbHd/Q4b8Ry
QSHaWAmjXsulngs6dyOhoPgZEWzTBiy+bSFMoBuaJpJ9OLfH+HyYww3A3mO0
6o20/IrBZhi/7ckv7ZxXqi0aEapxPUdNIKJJCgUws1XlpIrRGZESPhcsjrJ2
DtOXRWQl4GMSFPSJdYO2046Abwo+Kp7FSFk9sIW8y5kSHpyqeuE8J7uAM/y0
Oj/YqEclLCs1b8KXAvYMAkLW6fu7ND7TIC5RNjwJigq6hAw1bBmTuNsdXdjH
0MeCyDKb5lRaijL7YOkWdO98E86ramQR6F4eJDUjbkwQaeLDvlFfyKM6N/0r
Jcm+MKyiSohvotluIkE0WehzY+mjj+yDzVVC8beF/dmGhmhsBzWFPK4StZR1
YeebICpPqieQVOpOe0rFLn/L1IrbliL6ybC+GDCVAgXJQ1pNOxuCaz+jUzlB
Aq/K4N4Y90noqk3HLNkKGxJ65UK6beFh/Q3zTyxxZ2EyrhirP58H1s86dRsj
5CQZqgYgmDSH80RqpDm1RZwYVsR3emZ9CscI02hMBnSVfo0mpUKzglOTILgO
l1RMN/ez305CMUWhHNYZdhU4lIc2s7bxDtEZWIYprBVwnnLQDSvOftkkZXs2
O8arRxMuXKpQXampBTi6V3VOckrOGKbfaumfOBu0Ab5512/7YjuQfMxVO4Ow
D7BXAbLNlAObHNc4BtxUJNNfMpTpz7MVYRqnqqylc9cym6b6W+JAOgyv4pK1
gozn1/d1jpdpy1EoyZOHRfwpQ2vQZvAsQ1AQRvKlqRxZxfZvn3HO/mJFP6Qy
jgX3wwxljGDt9EY7YJVJWNrpD87Ey5lAzAcyTeXXrCOl5ZM8KaLZF47oG94C
gRx6cqRmFENKTBh1jJEJ8DZkavZl6tB71YlKRDzDCVJ8M2Lz9MlHdpxTeGKD
H6C7MUnrEFd/s1Fm5Y2hn4qjRyeHu/xZBdeRrLckM3xWqItpRU/6OCyxt7pZ
NXUlSlN3YnTk35iUJukrjIpRaYl9sC3BGN6wVNSd3S/QZSdaE110sLPkW6af
LF0fUu3DbHnRVWHnZJiqqz62DSlcuKCn4lVysTgXTU5cZYIeU1aNMU2+nCav
N5VjEFOsg7PB4DDSqVXODxz62vi45UycjO6jA9cXuzx5dZQ3E/2pb0s1aDrp
ItIj8QBtvN/2qzbM1jfHa/jWbrb+VN+0Pmcf8ihdPZBva54UkLan1dvxKV8d
P91gHpMjyP5i9T5n0CpZIla1hcFs3nFAq4smIxVDMqMVA1Y0PvnSawr07tGq
pZEUKQ03xaIg2Ih5sMpvlrHjYWZ2b3b2ZmG/cjqlFBZT252PHCYcv2p1IYa0
+kxw9b76igCZSqJABro/INyzzTEESi1OgSgCIRfcZqIoZU1v2PZTFnLmrtoA
rAxjHCSzykBLQPujUDDt290UqkIk4M9sFCpWlrvXRZ76bIT/zgOkmEBJAg7k
3bg6zxyxDfRL35Y4MxWbNKwKYi/uI5VGwJlU2SO2BOC3AXDBrWl7nlDw9Efg
+xBKH+lOkTFtHyFqodLDcjFH2gRvFsA2I3CqXCrmPHkzDkixYDFvDRPKwZVl
B2mp8KppGcki9BA0xNRkbSht9C05Rb7QujPzV7XjzsCkFVkbBByhzLil1GiM
vcGLFa/bSk5VM5TP9k7aAFSYrcxWlKo25ld5NWnaAKzCQqSi4DYJB8zTWvVv
UUCVRaebreAGErY9i4nrlQ1zbe+1fytE0nju3aOHL3A+uUDgN4G9LRoDcDJX
fG3AproFhzp/5l+zhYwM5WCSu7ZftZFXHFP2DiQf/cq1W5rwJlvF91sLJWDs
2WZCOMaiofgi4pb1xiVqzMbgUjva9gICZbRZYnrlLGo1ZVqysOgqQ46f+MxN
UVZCImoIRJxcmytfgr3gB9lmjb7YGRO2jVahM2x7GVy3E9xEVakkmMcwUe7H
mhLuc3ZweZJ8YWWwPkqkQ2cml8nBuOtECoSIo+K0MeNyoq0UrkYt1CzwpiI2
MCIRslbdxAozqXctgzV2qm20f5XyXRaCYZHSKTuy2aAEt3ON+kVmU6vPCpNZ
LW1AH6BmthDrcmM50RmCKnEHt2IeYmMSWzImzyq6jwBVgVbfy/SHO711ODpV
630Chx7hJm70lQSRp2owGphWlYT4xiU7Ozt/NcXqIKf/KtkK6ZYoNK2o6Eqi
qVEOIWgFNEA3sSuMBzt0aJCbtCCV+XKvE/hiMPMkNjMp7uZ4VDDp7mKnJ/tu
gigfZWCLl5IUzSGTUE/VvNEikMNInbABvYPExaMtkSA9ZCAXeqcQdpf8bEyE
6QM0SpCC0qmF8yRVGDE5CM8E8CVaGal+SeubidTog8YWTBthJz7nZolpUxZ6
8joxNk4CqkSiMisAwuTpYsEcpUqVdyEFahLaFRKkzzbEDQJ/1YlApQpLbAfm
1For/hWL+kZC2XPeCeBBVdrAgZ7u1K2CD4v1Tov+SHuvXGawbyIiqazKjBvM
Vlyg/pm6U9+ywU7svpGnPhJtWM+z0QnVrgkVky2nbZTFGichtH8MBTee365w
PmNbDHlxIOP5bJa3S6MlOLOK2yiY0RJiBEWj4jZ2Ry1MIp4TXEEJ3TCnriHj
u07HJ9HPtj+tWitE6qnH8NA45k6SHt+eNsg0p31udxK7uCPrpSjAI+xBTEz6
RsTTWAGc+8aiQ0cfvPfpG7YWpE2bC0kWZ5cBbmaE2UBp2xZR4FgoelAl7JQh
ej1BIa0aTGWxlbTVk97CAC0ERYj9p1EFORhFycExqPvQjFECRgkNJ1crJF2g
K8sOpz++avgzpuqNOWLnajivbnnmWPRFDCHmPYdj5ZxEyiPfm3EVrumkWlwC
2lEBED7eC4+Cg1B6twnjSeQtCv4IlXujsR/4W2QDDjKnL924FqUTnoIS6CWw
vYV6TxyvgWYtCJN/+lSND06Ba+TA3HM/8RBSw/WIMjGUBhCP/Op6j7g3z+SI
FD7Q46b5YxbfAZisgoOUCx5KUyfSRu8uTFJYxonMPfJOs0wJzwpJkksJRcmF
stVot0k+enHpSZc0v7QwySNi7U4R00TGDHQyjNcNPbFFgq51yk/LlSQKHfr2
tqe0BQMBMm3DJc2JHiASE5LjbmGVQo+uYIfQs8yKRmE74D05X7Lv0w4H7A1w
tVS+PV/UXwSOiaFJBEr451aGoZ0WbgsxuOhwwVKJjocqgYpaBOkvKLjnkd09
gu6BaDR8XG2lbxxJxZnecxybyIReg2uLQlgcosxwq5gGhcfI4tUTIEzCaU5a
Cuj+IhjM4x0c2t17zdKOzm1oAgckvj0d1FMb2aHkMffEkZAy3kV4ba3UT/Yg
lkEQ3s6bBKo7LZIFFYEER0SAhc76K4aURQDGtFziY6JZ2aLZSJpQFBxwmCRB
wdK+YoeMM8d9GEuc5iDl0QobIkR55YpNqYdDM48XE5Jzn7ND2EhpC+URk2KY
dNvF+/fGYQSRJL5ULqUrIFYT7SnL0pF7T3F01kGg4KmwkfKFGhsOGW+Fgshb
fyuQxv2F36dca3QYVBSEdDx7i/6Ol+P22PYayJeGs4POBARezj6Xawfci10L
8J2o2GM6e50hboxHHPJOPYNufFRs+4bAxJaBMOT0LBS1RRJxcKEzImtxHmyx
8dPtMctJb0dlQFYKLdlmqyMsL3KE4o2ZcUbTE7mzg49mpPRvsAHijDSUtsFQ
kjabT1GkRWnUnpDdtDoogb8hoTwN0k31iDD09pKR0cE4S4ReydtPkhFpKUnA
d4KbWeX9lWuF1xQNHDKC+pZISOvwUY/QCiJwbjBtXfkntI52B+4IJd2qdaX1
fOQWRXYu5FTUSVMD7BFICrBusTPKNRQ2cFsoA7R/QNpCQwxApBUOsjjozA0W
TKUuO0Ll22lJ+sZehxBL19fwngg8T8kYSqcppCMTCm7TcuqhUeFCMCLcitnY
jrVs0g5OkfrpGTsfZlIU2l0dRKoFGj7PHetAIMIKTkv67J8NJbiDnAoBknmk
ynhRk5EKgoynHKEVLfGV/9CHXqYlRZLJ1cfGBktPTqWHe2Pc7BLCZonWCDVA
pg3SQY+0+oFLRouaDsPYNuW2RjA9IqqlokFqzLGQ8yUnPELcy+qoKUg9dFaC
ibKinC0op2gCa3jOfV0ru18MdhACyJIXkgKV8FLUeFpPECVnyzmCCKIHg2LI
xr8hO5Gh0DcOxKgkaGUFFk3GgADIwziHkSIdMnlLDuZVOKxTKpQtEQBHWPjw
nxQ1ZwTKUFOdWdFgtYTTgYnXMq+4z+yLiAfJ4gJBJFGFpNwRzSemab+kjqgw
coIHqQnULUSVXkObtZKt3MGWsHvfRebx3zuF5eCOqCVJuh8RQygoJQPOWFHL
kLM0qJM8uGNAuCCSv5odoVLD8d35899hmHi+2FOdOiIliR6UQyomcPhJz/Lx
o8iCZpwLzmlm7p2wuy9VhTPOIA0HbqArZD/4yLI2pkOjaGNjy2Fiy0O+hOog
xXRcq/EjHURtJ8Sjr/hUgeqaW5JgEQXQpygiigZ8bNiXKD6pFRQJygli2KII
Mo2DhRG3hqFrSTAdRlpOSrBkAdnGEIU6GJ4CP3dxNrA3KXN8JOZ11PCQCK0i
E0wN3VoY1lKyUDMWi0KX0LCRyEEuKOFgOb8IAJIp2afEigfAHi8uvpAkmirG
DiHrFAEBxzM0GMALqfFdcIGTCx0UXrN22shxQJkJLSkJhUAOarDX29Ejvcmv
PxKUeSKb3FSmVknXrudAaPpTsEhsm45ORSSzAmN7AbBTWFB6+mgPYy7Kj6Sg
rkx7v04faRltHk8Rl0TGGN16mzzGbPW02tHqnJgkhswoYKWFjEqPIJzj1SqA
XbKWlErgaml+FiJ5M95HGGUJPVUWgylJO8u14FHkD2uCaY6RhAhJCGMJPs4l
m4Pyk+9yEBGUinOn7aNfUTOZQswEAFVQyFsyVrkAQtRMeNREru5kQEfgtztR
GDNY/jjK424mFe0Wa1pgo/tIGk6irU2OQNGzwbTflPsKvipGFBxRpyQIwET3
tqGIaKxDKmGqMI8mJr+EAnrR/UanIptZ7hIr7Fv+ay462k09ZKdG4lkVMbdc
OxZ9j6DSRJSjkpRUN8JL8wsx0OiStvRsDMFLDGds0S2znlBpa8NUu5W+AErv
FFgfsgusNhNsZFKRZCW+qTqF8xbkL2WoaA6TOZuEheSopLM7IRaUSiImXZ5T
HsGfKAg+KCUNPyjvXjUuGcBkCYvYil7E+LEwpICO+3RXvou+iAFBiLSrkarh
bnq90wABW6c3jST6aaarHDFEli9Lje+SE7DLd3bjHVmRxc0mpA80OfI0qdPU
naxj6qAoSVqLQyDaUjwiOEzcN0DOuUJLWQ2Qbw1boKQWdjOrh9pKw7pquYx5
7DnLR8oxEx6FMKU4Dp6ewrSrrJ1ZfRZPC/SyrshT42mJLhNplx+XQLC2cyte
ghNLeTG5pJ4UjonwMWc6T7SpC98u9dcqTfpE4wm/5FdRjGkD0ocu/Spa6jd3
yZ4J3krWlClPStLVib8M47tdnYa1aNwUwdQYJGpNhq+iWbJ2VugyhjFxSg5U
sFeYVOrdpTust9TLsXYt60BnQEqnZvWqm/q1VxviVG7zdLE4A/kz5r+zMMHj
u6ETWPLM+SRBM7oi57SexJamJk/yV6eNpwRJagLOg34S1MswvjBvlgCOUn6w
S3zjm4XKza8S1KOqLHndLmR0AnMilEKPWZIvw/hzSNuJ8Uu0nRWGzL1QKWxm
VLqbOqJlV7evEw/mus+P7KIlAagQ6JnKe0Po53pprfJpU08Bii26TUsFdDe2
GTMY+iN5f9SxqWjLU+3YRZLkxC9EiW1OHJsvanmt4nH1mpGJj3BZnG6B+Kki
fLvJ+XONHoy5uT0rLRnxjynW5kiVUcZCaoDbP6tdZb/BlnR8Ze9qqpzbPCNM
DLUKaddjlUCtbsfVf8k2pM11MHIJ3HZm8004iMsTBTdsfgOjMiBdNGyIYyRe
McyloDoKCF23W9tpsOjbic3IwZggAtOdgOf+VIUNxKtAqPfOlVAvYz8zcYVM
mbJZYVnmx9MVCUOCj4w+p0Y7JzNKISiOhvjCsOyUOVWV7/qSMOktRo0kuc+h
mX4qFjU++Mp8S0V82gC7oyJWC1oQ84kMBUli33XWkU6QnexRpHHKl/l9nDwL
ikZud+O3k7vpqftnYl6YVzMnNTYpFuVyGeFyE1FQbifIhFgUgZuZMDZFCbcJ
lsa6nEMDBJZh/sIwn00ayJoknbVJ0r37+FCqqHCLXO/GeNWtiJi3DLZ5Oc79
UhGpIJ7zraz7MuV+H6PW3XBfe6fUxtScof5BvJOau6SrtnPbTdiPSVZSRA5X
fGRpNxOL/OoCzZZp8nLmccAWX5Uz8K/Z02D2tJH61fbwazc927BiR/fnkMyT
jPNsgV6AK6N3RmimTd16xEsaDPcTRFtYuwzjZ5FkN88MNH97zmyTzm6BbUmV
+fF5FTW7JH8ApCtBTjbYVMa0Oa+3MXBOv/jUlpeb5ORMv7rU4E5EkFecwCRY
m1xIKHVTMyzTz2DbcnJOT7EoiSHi2TARz21twAySFdu7vMqUR7Vh6dvseA3+
tJFTUC/TcpOE4SRi9GrSFozKEp3ZG6LGM5fKcKPOz2My46/OOWezAHheYt7S
/HcUJvN0LScXzpSF6Yxrgks3WBLADGjrhCazo4VVV5AKolzbAu0pteenbGS2
qouLVvX9bA7D94lHumJAEs/yw402zCBGj3fLbVdHbduFyJZxrBNh2001rucI
5nIismmVNGBbYKXzF+3ubPi6oNszjxuwk13WDAhZ6nMTsoyxO4v85ybvhEpM
LcewVHk0N8OE/Td0O1PpULs2qxsz1NJQFsiUNi9b2UwVxMi9n41Pq8/t6XzM
kqYts3KGJ+dfJQIlE6qInLVxm6XEZN6dE9OUmwD2HAtnQeu4WoWwzufUjf4G
+2dCcE4VmJGvnD435suE8cX2LS+ND5M9/w3iPKPAY3xLwLeF+0sqsjpVxwOK
dbc1CGJqKl7sXWkhh7iSoxqZJS23nFv65uvGQlCHNWB7Xo80Q7nyqcnxKbJn
+qXJdeb50hTDu4lvJ2vBRKynzLgFjSoVKTSZ54jG+eEormkaJ+QnjKk4XOX7
rW1tpoS08GurJbg6TslfVYI2c//M4lizrpCgqQIx3ddN+D7h6azNy1kz8pzu
3QzBphCrRDshNtez2U09xgx1akkWsgs8f6LisHnE8SNZcqxNvtWiJqFb0l5p
ts52S9sUEHSdtYJ6FOZLnyZf+tJbgZ1r2bjE6RIvTo/bV+xpJ9LHgPjn7XBU
1flsEVUCytqzwQC3uTu6QHA5GqtWrFq2DiNj4vCGAqrE26KRti6CNHPbrYQq
3UoDVM65nBt/MttXgdqMqw+OL6Mxbg9zuLMgdoggnfnwt7c0G8d0IM+AEuMZ
c/CM8akAgQmZnxiwNSS3HUE6eCo8FMC3Hfs+Utcu2Q5sx9lCQG/Uh5E8SB9C
dWs/WUA8EbZm4bYLEp2kGO5wmkidtbMasq0Lvox8012qf8XCIt/G88OOI0JS
oEk9xIV0wBVjaYgxhfQmS40xwYHyme3N2pieLq0t3vtQM99xr+g0o7zz7Bsh
4mRZuv3b3rASTfO8XuWII7ncntAxut561g/+agq7C1sJohPYRy5xcNd5KkHE
LDfx+NYGsHhuEZTlmMgMLNeLxBYxpl9KZJnJmEfCtCWTos2dvho2AIn/nGJB
QCxb72ZMVIXUyN700Eu/eETC7gVo1ARkwVYMRm6alq6EXT4hPF2GHHfpVo9W
6ogjKcTejjm1NDdXGrKo4dvOSk+3hKlSDpZebTFtRw0AK5KvFf5SonPMqbjj
FJ2UNkSKHh/HQF5ArSwOBoIyPIyBCrkQiUSImEOxQUufMFY00uctfPTqttoG
WBhGF1KClOoyiGSASGXhXjolKZf+cJ4TGs7TuqNoe5KSgPicuTFm3vZLCusK
A3or4p27wGPMFwgLLxGX1k5VlB/ud0t9akWZIkG3shK+0vlBCegVirUh5k5t
O7UZA5atQ2S4yU7HY6pdHPVmTEJiZrATLW7oatBxWZMgjR9kJHmtqjs+62nO
6CG4Rj9XCbbctbRlSoss89Km8/QyzoDyDmFpPy2++hZgK/SwXQb1ReyC4yAN
NoSUuGGRpa6JUOqsee5YwMM2mcgjeS2GSZ9jCqPqmj47DmlC7HxZvkSgKCNU
ELRJhu9bllbpxpnbK1QHhn3oYKXNZt9DDTLOE6pbMYwYxT9d5aioQZ+RjGCy
nh4DEJ6QPhCxRU8IUu1/PMtQBXyYSLrLC/Y4oIr93OJx1jQsIXU8BEJSjyiE
JZaIgpcqu7SL81z28q3lqWMjudIh12xHE0JJVYZJqM0MAOksiB2WIB2jk5ya
3oY5eTHOT9vtLfGE/aUeho+JmOGMj4iVcYBaxN4la8WIpXwHCJIynfXq3QqX
E4BaX/pVGk7l7VJ/UvfeMQJL5IgBvtXx0SkuMUUi8LorctOLGhpyD+VWVN1D
4BFfWlohNLFlkoTVTbFQBY0BKiza1LCEyQXCoQ2SyZTUUG0CW/e9868sBZB3
5ohUCpZH2QFpIkCOeMugbTCQTKAR34T5nJWkM5Y1nPi8aeK4bGmhLUXErAVv
qU9batYrJbRSJLYLYi0ab80FZmxHbKHZtuSpqLGzq2Mh1R0uq72nM5MqeacF
FPsI9KgoiBRB6APc3GJC0j1Spy0Onaj59DtQCdYHb6GXRubxp/FkCfUL+7Ix
ef0M3/a53mNTKfS+F0JkjSXO0Eyytmo2vkWMwFWajRo/I4xNjoUi/zu23O0H
RKZRy9ELaZacb9x7gIFcg7YoRuY4NvuQiy385dNFssej4HJHVdJ6VCDjGstH
eVuA7F/Z6YTxyqsAH1B4D9x2RBiipeHppcFjCtcsNCQdPWgMEejgFE8SZNaV
innVasSRfZyAHG6WVvAEh7ptDxfYHYYU6cxnv9zFQU4txL71c/BTQvmpUYo4
VT2UElo9NB5cQCV2XKr4pI53EFRbKehiJwTTb+LtgK5iOEs5c/HxpVF9VOhG
efFHwH9Eh6qJM9ZhNBwoFkuUdZNEa8OogqMxuNU5VzDbJdFSYIt048SR0unS
9zLm4Y3Y0rPVvdtO+kI/0RNiJM5zPP07pP/WefU1j8Xdis/djImH2KoDN5xY
ZYn20roOyB3XBe60IYCQa5cFK0/Ub7v8SoMXaxBJmTceHibQ1bUXM1Oj6yKs
YYrG8/5urD5ecBEgVi0TRoOFytaSww0F9gdN2Fv46/2G9JlUSS2U1LORbjsP
V2SSM4S+RTtH7TTkC/syFnmUDKo1oniSR2gRTU9ScM0FwhCBsKJsJUmQJ853
ag/zofdHiKs0laUh4PUqifu2z/V62sJ4DnGsgwCZTPJm2NHw6MSexJgsmyMO
KLYDvMFhx71t5pZAa7pzoKMtnieXJU6MeIctJ/Ue1hi4PPYURMo11a6VSAHv
m6BCKwoHCTK8wObIxRaMyjLi0gRUfRfm4SNy0s5ri2FQAEh9ZBTvWVZglPGW
yY/UCzsRpw2eXcGMjrFFwTL1kFpmQse7uRW5by2ciz8JIKk6FJiFl2uBRd+l
XmUQWmHi7+JAe3Z+nHcrHnSXMts1RNFjAmxRo4lmznMDH3pLoicburT/wg6u
4zhS3yuJQ8ZYCIj80jxY3ceumQqT5Q7EkPc+1sJRk2A1RSo19d4cBVL+nukK
XfJOnmjjpF1lyXUxQZr0HimkHpuBtgEJgs6NqE7djhZoKisQMacWC2+QPtux
GiWostN4zy+fmcZLk0lyoSlvk9C+Er57FKhVsM5QalMPlz2zuOtrAReVVEgE
NQCGJDVp5KP0qCRKXDGxOni79Ql7moEogW6c2wDNrHhyQkEHB2gTyqrr4umN
qxKSdveoX+C8B3fLbiLB0UQhpui4bGkkgkNKXaizy2UKg13lyEdPf7gmjcqW
fGmtXsuWwb2gbseSjvYC/ZKz0roRMps0Khd3M4CCEjKXaOxQm7NmPwWR9wLU
nDgBzMis58TwrXlBmaI5yDoTjOFcxldoijwu3mO4CFgeWVHwySEv1sdCxpGA
viMgslm2eiKYCFBWSgfo8NKcKy/62uKydCP1YAaBQ3rlKcM1XbJ124OfUBir
HVrEPTfReFjLSqTFU9RCo4CCb2jDuOyGLoWrOUulV0AgBuZ7P2YiQHoIx0Nh
whJcPjjXth1B4T9dz1HaeKQVl4AkVTH6gHyBqab28mD4yvGnMbTiCs6CHqGU
IKbIU+snK7NdiJJT5AKAom6HDZAEV2epLSH5pV7XGjyflnpgkncvFibLYHWr
zpq/3NhI9R9XYfXIQfGuOAZr5S2rVzSC3VKb+QmvI+XQQVX4xwvdqWm4Ulqo
QmEN/Vtcq2fzKkuqp0I7pOVYacDdZuUUPys1kSyPmQupkdyJhAQCUhQsXpQR
Lom8X8Ow1aT9HBcQWGiTe2PphbhNBeWU/Ng1hO0GCSw2/oySp4+0gtmXVkfG
fGHEVADPmZNS1Xsqj2xcznilqUedycuZpxWe8PnkjC/orIJ3yDge0C+FD1+f
WNzF+Ny9mIidvvvgznkrWw8vkZIUgBEq4ScqWAUKgP7Ne8uAm29kWO6WY+tF
1YfO6ikWofMcLV8FF7zCav9AQAn5w9beXbCFytpELGq96Nfhtq44zkAcIGsl
yiJo2g6RdIsme3CLb4tcUCoasAl8NkM/hKmQLMzqmB1yNoLUa2VF3icWNrQx
LkaSAStuwKQNQJOQueHYSgn2oh8aQnDe0QO7SBacISuybaV9OFG6D8HNpGUy
0HJ64gdx6Dlx/EDA2hsRGSJq7w+uZABT1+0JLau3977xZ4VUYtNJhayVky7p
ElCSxqmHVSIUTGlXIXVBZub4euCol0toWHwlr6vSAzu9f6NOEnvJtFmQrKTs
UOPbOAxuMlDajgI6zfpIKrjGpzSdnQGyhpMNrUIhmy+kVQwWzyZf0Z6urQwW
ceiXftSpqWorivKUGPJhFNK2Bc0o6Qrqch+Cg3GhloSJi/iYswxdwNb5Q68D
hpFhBy1wUW+TrQ3tilJOppLmhEVJ0oeUE4fJxeRLBYdyJwqvMJyJh3cfsTEI
dIKpW2OU67zrtsrLdOHg7iiIgJqngUb6O1ZF+VDwxZ2elxDSBr1FAvZoSFqZ
Ni1nUdPikq0iBiZMcjqQjCMXVIpXbHkOt/ZF0iKSOsnhW+hvk7yQ/vRxOZpf
eEXM19RwYR+ZoHtkanikK47uFGLSUsS3XB06k6YgqlKaQSqtIEu2CmkbW1bE
HXWWuyymijTqhAy/BFHywHHlxjB/EoQVCy83aeEDAqe9tLpmSwDk1VZj3TL4
MeLS8gXQIKdR+ug0m53qwuSsKgSIthxCJLyNTc1qJ3VzNJ6bsa6Iac5EVnXa
Eq5YADPaoR+A1CsTIoxZcnvhp9ms5Bd662xot4ic9M5RGWt86FVeWEK5r9Bt
dQjlxK+3fb1S84TrqSfue/+zD37g2QcPP1/JmTe3afkrMri8fxtxyWk15d1N
lrR+50PPf/hXPv2rv/65z3/yU5/6vh/8ofRIy5Pfiu9tMWwThrU3uvNKhSY9
W5n3ys1/1uTm5hCCvzMZgsnr6Wfe/VMf+/ghdofrMMlDj775lbCtvdH3217X
pz24eXD28PjB8cMM07DXLHoFw3TzcmfAFeZ52XPeynVesnzj8PkGx+Jux+du
xORlXWLbrfo7UVAynjUC9XK3rDDl5JvZb2Wtc7x4ZZl284ov/+KSd4sw3lCS
vg7GT6348q2aH3beJK+w7NjO7uuN6q1CN//g6jZUbtNxx/u1Q+C2Zm7p59kz
zGvRTfbcDoZTi97x18sINyXg5kz3p3JW79+6YN7SJnQeitsD5BuoG1/L6yaN
vSlSZ8FyU2Kej+1Un3PrujHpOE3Vzi7xNd4B3ezgyzNgNq3OtOfrkRRStryj
uz3f5wM6ff92z9nOWW5qodtw6lZtu8U27BUg/CtC4zjJ178ufx1WvCubjVsK
5S0MXo3j24KNp+Z2sbHPpw+LTTs2vdvx13HAsQ0eG87FtvuDzz/xx1946o+/
eLze957X8oqH8Q++YXf86jTgN37p272L9rV+45fe4gPkcVv6qSde89ufedu/
euGZf/O/fhdf//x33v6J/+SNi63Wo017unN88PDtYNXhOnw+OQjHfdj4+XQd
H/nCU+NlVsn1BZ9txORgcxypT/3iTz/y1BP3MWhlIzcujaceXUy3i0fQzM4/
+Px3jF5viw7zqcfvY5M+8eNvHOJiS+cz/MNU7a98+lf/7M///P/T/zvc+fXP
fX6RTdp0h29ffPGfGowtIN202DTZsGP03dST5Yebh6++8tWvOicXp4tZOjzy
yU99ajDmeDJ8nAd8/tDzzw9f/dTHPm5kEIRHPE+fD2u5MUqG0Zj5/zustaTZ
DrBMjTws9MXf/M2n3/VuEGDT4UNkY+t2HuZ86aWXcggOCBggPAkYdRiQY3eY
6mDG8TTeoTgNPsA4xm6Dm5FLp58U4hbfkj585GMfH1AN//d7X/rS08+8Wx3P
KXBE4ODyn/1ZYfnh/uk9AokVlm4/9Nwx7ocxo0ZtxWz6aWq2ac2AkagkC+Pg
Vds/8ub73v721+0e2IF+TEie/GR/e//+6adf++a33L/uaFFeXfiMOd/xna/9
D//Cg+39uzjnNpDk+Br3dQ9ff+fTr/2O73hte98urmITLmJRiPMoMu3sPK3Q
lWHEmUOFT3CWEdjwWi2vuKxiQcMm1kqxoIWSdzEWdxk+dzkmYvwCAi5rLRgK
eDdka3AtjkzS2lG5McQkQORggGujyEtTNA2R4A+RYaAWYfU0odY+GrxpIfti
rTdpAUkK/YCeCKDELtCAHKciTlV1wdhGbvNPuQKeRMhWWBqQRJpwI4oqYPEl
DgBPjfjGUUqEEU8H71CRtYULtKmymAEEeoIJoZewAhPAAW6xyIAKN9S7ENY2
WZUTeU6yFpwdwC3wrWWVEC6xwVSFC4akHFmMNOYQIyJOY3QpmqQLZlSWiJyb
UWQ8dwKr24WsWwpyKzgUF6ekTaJ54e0udWuVbhcGnFwT0c4aK6u4zgyKt0DL
JOixVo8PMhkkfK3uHbQIboK1BMWmTbipgxsjm7LRw7cIKwoDQwpYYRKFMR3g
chyFmu6f7FlwxRme9WhCfsfgah0M4eP7qh4Vh4Mxi62GuyC2pJIq0mgbJQWF
Y6MWctA3McvStrEqf7Czndr8pnKTg95WqdHShUcWQv6QgLYJLfJdTRq53Zq8
hHVD7TDvEGUtOikXMhkWrkKx1nfioK0l+wLiieyVkioWlTq0CmWZjhWBiqbU
eqWZnGCUgHP6BBa1o/gkni8AcugEOlEqYMIKn+JI6C2IbzWHKc2dRdhib7RV
c9DY96CWhIyV4DY+Lg/mdE5Rxq+5hfDEpzCJLIM5KC5BbKnyWlkpOIauXgof
iUkIt2PFLV9oNqS3ISg2idhyWpUzyCnaYbmIVQtmBrRJgRchvltrCXhaWMgV
jfWzFR/9xENWF0IuBFtVZkOGI0ip0SYcurwBieKp6ZN7nnxmm3jLILeWcVoE
LaGIeK51JD4+yYa1JWlsFDQKih4zLqKFpexDLRecERvclwaAzsNjYlYntJoF
nHTiheO28FqGwLWwWaQsHFO3JuBjP7PYED1O8/zxF5/yM/nPfvLNvMph2Puf
fdC//VcvPLMgrThVzPaf/87bfcBTj7+GFP748xd/+pFw7J/fArzvPQ84T6gF
bQ/GwLCfe7PICykGjiy2HT8ycx2GjTVr073/2def88hvf+ZtD75hh0p38n1h
qnKYh3EY/JJweAhO1jLmh+u973ntctNJzlq7/gsK4AmHvAWjlNm0v/elL/mJ
8Yeee/5Dz3/48PPweTib/cpXv3o6RpacPdz/8vEMuaUq3HKRGgg/HrmzYpyY
70fuT7/r3TaJzcC99Kb7oxdeGE/gn3vemTzsUPz8/zBm4VukDQFiGX1YZRhp
5//SXw3GDH/BPnWNB9rm3XD+f8AtDDtY4kfxx3N7i7Vt6+S8emFn0YefQwgO
gJ/+iv75g7M/9bGPH0IwvBE4WDiehxvCw7MPPfKYI3mY4fDIMXzPHf8Fgcfu
+37ghxzVwwzD+f+Xj0EZJ6Fa2Xq+Hz54iFl2PDSDwcO6Hzmu++Fh3eGNwMHs
wf2F6wnq2vHzQ48+5iMPbh4tP7Du+eePbwROAB7sH/75A6M0WOLn/wuivRs/
oO3q6n55gVh4PTrB+My7Xvf7f/fJf/lHeNv4lb//zo/+5Uf+g/0OFdYrzqZr
uu5jf/nRP/ndd/j4f/2P3/3Cf/v0e555vWmmX5Lvw7qvfej6pX9yfOptjz/g
c47lgA5SVtvuJ5974z/7nXdwLv+jLz793e95/VKXGJsx05YwD3ekC2/OqZHL
86Bmea5xuSRfIj6BKtK604EJWhdnID67FNyw1lj6+YTB2esqUcTibsTnbsZE
GlfqJ1t5auspQD2JfPbLHLFHcFpl41nuFnhcfYkj2Z2xt1z6vnvQFjSBJsIb
Uhhq7UbM/RE/VcaKZPmWj9raJRSs5XD4VsJbqWURNbNHGx7rdqx1BJfMa+0A
qSG0Lmvjv47gi2tmmHeMC/SNzgqjH6/CGeGw4ChyPGNZWCAWhOGCjLeq6rO1
3m2CQog+IWmZYv2D04bQ2/iiIxoe+jSzc7Ljdb1j8WRxB411tqfwJmFj9tN9
KqBCb7DFrBV+ao0g27BdQquPnSbY7sZQOYOdfmdACXe2wGe5oXCAtyYXnMvc
mm5bZt0yQmc7C3DAGI7dAQHuiUM7Dk/DpTOWGuOlxkUjzjuy1oPFgIi1Hkrn
CbfikBc0YPard92tSRPnSCd4mrWWHeOElL9WEVyNDXY+s/LHneekhHx0YKRi
PqMMcbq5160Gi04htLJwiUR3ilJC9YKUVkNmjsMF57wDSzCyDf64SI0VVg86
KbCcEJK2eIFzNxdOSDPMd9mop0w547C8j5AiReq3pcDR69qFxzrI/oahE0d8
gBPPhcU4QyEGklADCgRnkJ9UjLHDsYmvZRrufGY3Rzs1jlaOQUJOWO1GWmtU
OmhFSFs/BeJC7IXGk8gCREeaXi5bVict1h2ybxuC4qoomeuysLCnlsIBXsga
qi0RmF1AXFhVXL2dxtwxUk1Bb9lZ6rH4kHLa6gQvEOCiyflCtUyzmOUO4DPz
O88Ib6etHRJ5UT2BGJKqhC7LQCZkUAi8xjH/KZTqTueOoL5viDxbawCCyG/J
zkAnaSe8i3AhoqIPbfGyBZGh7ZgHjtsYlqNW/eo8FguGSxQgMIpq8bg6Z4p7
4S0BN65meYo+9TAtqLJVwiBq4pqmj4mY1iYfw+77mAWhuuCQUS0Ako7PRnXJ
K4WIG4fbm0NWXaqMLDLGc784lVD6I6m4iql0bGCDVDpLajuxkQLEamAVkLYV
W444n42TXhlcca8XcODk8mSXiIM2QBux8PJBBKNC7C23Fj5XgJZVF5tfLyhA
z+sIGzAqqod7Qcq88EZ3Y62XbAd0q06qznDxeYs4q0s48r7bcqnkM/Pf/szb
0NGlb08n1Q9QdTte/HbAlxgmOcx2ztH64cHjKwB99mChnP8fT+x1/+7NJwXo
Fs7/bbkzz/+HI/0Fmj2kzwHJJx9/TR5/uAlZFpXuwvn/b33mbWO6UWIOroXX
CoPlVulIYC15P/Kxj/shv4MzDH7okTd/8Td/8/Dtr3z6V+3Z8SfO/ylrFuTg
cMf/1Jxq4nGJw83hgPp0ikvPaqP10COPDbYN5/8ByQ899+HhoPjw86FHH0Ni
bmHnwPPhuP4w0o1BOdiM5/9kP2pT7G91woMBllAtG/azP/+p4dz+9M6iXWiA
WMSGr4Z/43AMwSNvliKyaQ9+DSftHzn+GwfixmmM/6OGp595t0/oOB+idvj2
EEGUAAPty8M/yqCGeaEXxQ5e+7qDSceXCz/4g14FPDru/sFmUicf1h7COlj+
Ry+8cPgcVPfwYWDdYZLh9ZBXwGF+/P2/S6V5J1AHqg9uXmE30bTdz330sf/3
f5lI3v/hO1/38PVIAxPG/QO7/+nvPTWV73/jP38zKxLnrxv21z7y6DD4rY8/
wPeXWOj481f+6lumVvnJ594Ysj7mNc0jh1osF1ugXc7jpz2s/MEXz1lZyHuD
rbNRssMeSVbR7ubMtUKgIey2hcyxuOvwuasxgS8acV2XQUClYMVgWRt1OKmW
W6UfuK8TiXCnRMEAMnZADCy0yJ4NyFehSUHhn9vwwfu6Tn0xgQ0HawiW9Z9u
27ZV9HxDgceDBDGSGCAIeOyspaRjCk4Eo67uy+IkIXzxPtMDX9n2x+GKkE6U
Nhnmx25GuYIhqCldsNbrOH2FnULmpBnsYeVFaZi+4MCpJm9ONy2SCyHg7ZjP
VmSHJj4BTkc99FS33EqCM+WCApBGEZJbumMbWDbYnbVDg5bFine1mXgaSt7t
EieJ564w2GnidKKNma44LOi8YqFR5pMWdra6z4ITcJYs8Jmxe5WNZ6daQdmd
+ls6mugIH9oSbuiwwo9osBln+dKo8XEEDdDPcaesE7qPpmAIN+8aOiGzFrKk
FZJifHGAJCPCTdENFAKNmp9mOLs0d8jIMY+2kfMTtnk3C69z0lEqiSNIijQg
7NT8yJ3EUKxaSmNjDcDWnYrrjouixHdhEsxDjF0IJajP2Yqpfm4DBER4/dyJ
1HUrkpW0pV1uWAyR6ZKndtBHqtsRmGPh8+QNm3099bKivO3YKhjjuHmL6GU0
OS5xjPAKOHKyKpyPpxMhp+xb2lMLVcw76e6MaVtyX7dCwknLd/rMXO3I/agn
6jjJIJ38yFGAWE55KoWyaE4WCZ/cfy6EY8KuRVpaOlK2Vo03BDglWc/Fr2CA
lL+oXcWletIpSoaJhUlJG9juPM/fAmSAryngN3lfs4A9UdW1w291sItVhMtH
ihfUqyyjwSYd2drknUZT1qKcqtTVHaEOTRxJjSifVBMNHDQ+c25ZVOWn6bbk
yBaPF25qHV+aX75DWaSRwezCR40FW7Lg8SSJLAKs2wsdyULhI3mhEE1Hknub
pRGJqI7PAY0Q3LGsyJZfqCirk4oGeMPGQfHXjIhJUYycv6Ye/IkPPOyHUX/8
hafCEoc7fFr1Cz/9yPIKj7/3PQ/ws5j5qv1PaVo/5f7Ej7/x/c++/rOffPOf
/v4709H6acWrrS29/ewnH+Nzb7J5u4xebIeLz/8P9hx+ra7HDjYc3Tw5wuf/
B6t45G+l/2zR8T+/4+AQDv7PHHj84eYyRXZ4JKB6+ocV4tfw61PptcKAQxnH
4cPwB/bj3+FXSxeH2PbH4VXK0HXV8msCI+0xXi+++E8P97/y1a/+2Z/9OX1l
Hwyon/35Tw1/YW7n/+Pjw+XnwIefh5Gld8OHwyqHtQ4rvkjGOGhffvHF0/n/
li3hK7tm5//Ph+X85/BW5fgPE87Iu+Ew/HgSPg7bBjH8pHo3/BwOyQ9LyNJX
PMN2tPAKqw+gvRiDUhSvEDu/8MLokcemqDWMeemllx565NEQXLZ8QZjjw8na
AeFEHol7iONCECiCsqSDo8Mqz//oG4Yc+RdfeueP/dDDr3v4evfA7nve87o/
tBP+v/+5J9etbLs++9ffOnz1P3/h6fd9z+sP49/4yGs+/P5v9X8+8L3f8+AU
Zw4E++hfepMn5tsevz+jNzz4c//ZqGO//befeP7HvvW1D+/ve/3+Qz/8hv/j
H77r35z+ucFbH7+/qBppnkFw5hk4MQ8Ly7Z6apsfL+cM3+Irtu2qGHkbay31
kYEJec67C5+7GpOlzj9jLT5fFWaU47kWLNO6payxqdmYyTyaNj4MnpktenQV
ZkYbM+V4xn8ZJ4kzZPv12uZpGcylA3UlA8rPM1SZmP8seJfRSPsVvm/nYJ8w
IKdYGb5Zw1BYZ6I/DjBWe7gzY6s2Na44t8SsI1M0mIErPRWZOaNg7ixHKmJ7
JTZPgjydmFMuL2h+urOdB2fq5kQSxWDdBOxMydgqCFtPN2dFTaebQjmlcssJ
ka/BuQpjtuVClV9Djkzk79lX7ugWMbIR6ikc5uNePhssKSO+nPLrKkFNv+bE
xLRFdxR0L5YwCtY219/wSOHajTE6oyLPf8saMp8yEY0AKfmShTdOqCKzFKBu
WksNKx2pfBwxnApoclN16So2acFC+ZDq8lRQOHFqmiVtieJphi1yPiag5P5s
KzsPI01SUrrQK7KhaITqLScp2HIC0hD9WlKuIjFyuHNMM9TJkZI2gDf1SHlF
NnjSwkV6EGuNsBRiTuYVpYE5kBWPlwiJmVNmOZDzquX0HwdMJcLEacDUnRAm
7hkYitlYVGpT+R6fvelauuNXYnk1g5SAMhnHYdUOIk2I0rNUQBb5qatYvJZK
uRCysMQMGsuEYRaWGTU4GTNXfXhap1PkZADkpqnmgnuVRs5ssiZa6NwIVZ1h
FoftAAWl81b5sMVnD+jxw1EewyEzxe74IZ/h22zHb/ndwfFo2iLy4MM7Pgk/
fH7vdz0Qep7f0n8dcHrcbD4xM/z9P5wi844uANX8iIEzGJbBvNry+b+9wtg6
uw6O8F/gjwOuYiv4B59/Yhhw+ODjh/8EkBkgq4fz/8N1QJLjMpjxG78U/2yY
cODoY/LhD+Mn2AK/wv3xbPbKV+cx9hTO/ykEJxxefPHFL7/44q98+tOHAd/3
Az8ok5PvXz79M4Ff/9zn7Px/O4bvFPfhHPjw8zDmZMyWk2hpsBzmH14Q4D9o
ozk1nP8b4VHR3JglJ8VpgJ//M520NGyHf5jgzDenAI6nWECJMVz6g36dFhr+
i0anA/bHaEIP7nZJrDCeHH8dQBvgSodOzvzjuvqKZ7Dk+O3g1zFqV2StmWfD
xkP+Q+xUWNjyR5UwUbKGuPibnQH8pZz/j4+jFhyDtTWebL1rJWkd/txou9n3
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
HCaBsp34AK/GUX4NulqSJNI4iHNmZjjxwLPju0W3xI4X2rAQ5g8wRniLWgAb
mFTFACRg+qCr4BS6WMuPHS50cg5iBhOHISUtJRzYcSwMQ+z9yU7oSdVLsCDT
riquuEiJQCCIOyQ1QJs+jDZLSYpoRFTr5KWNgJI8MvbC3v3J+Sf+rILn17+1
CJpGiXkxzfbK/nbh5WMjK5YFl1mBP3LQYhGYA8w3YeacC1VPOFGRWceqHAfU
ZV2GnWJVe5HiWKY5/tIDFUF2qV5VWYK0tStAjilQdoBVS+B55+FG7qSnSigu
YHwoaoISMWp8I1zoXpF04k7A84KeyrXygvSKdS86679uCrYstJMMOKgyoFZK
yIiZTHiSDnWWmswojFgXtKH8lWEXhJ5mGdQvMz+KfNpnBfynvirvs3gSDqqc
xBNJ4U3LyIB+8icZU0tDbdAbeJio/ZhSLRBV+ByK/tYL/QQ+041H3IZIhQqK
HVrZasI2zj8bOMS97sQm4eW/YNQB9tc4E8S4KH9uiA9jv1rWBYGiinhb1bIK
9quN2ra5uNwer8OH43W6eWkDLmHDr+lJ+/js1caPqX+GjrgPn30tP5o+/hfs
T5MPC/GB+enfBQxfDdO6zcfPerj9GCvAr1Xn/+Plxl8Og8dpP6vn/yqhG4f9
4hJg/pie/1/QyGFAeEmxsBncBn8JcgBheMoHH7y7MPP4gwN7+OCPH18WgBgb
/+8jHe4LRJejhSEFhmv4i+6XXnppOH9ejJEKxBih86foDNl93yxo5PA5HDW7
R37k/rM///N8njzQbAj0V77y1dM7Av5j+41BvTks4ef/PHiMrxlwmPn01+Y/
f7gjB9pEfjuo1yQlZ+Hg5Tizm4QxxJDDyAff9OiAaqGol3bZs8NsB/ufetcz
zvMkOBv/OfzLCAfW0+SCYse8ZS/kj+qHkZebYCSHmJ+9OL1MMaw83JsLCv0F
gT9Q6/SPFMY7bjmp2QbzX4rXh1+Hfyww/tOPkzotriTueIrwv4jQWaw33SiP
l5u/9cnjP7r5l3/0zMWleD18brr2//njY/r89595Ynh2uWmH/8LPb332CZeU
BSF/dd29dPqfEv6NX37bFKSH64N/8Q1+/j+iBwM2P/oD479KeOKJ+6Eqmr88
myfa4pKCzgRgdbrVeS4FxsCEnEeDLxV14wyLS6om9LmMxTlrhVhc0M0qFncT
Pt8EmAzzj3Ze4pHKl+NX0bbTHcZB0zxYDpeTCORnbYZLoHehT5Eab4YmB1Lj
pg4oXYr742z0c5Gsopl9DOLFscj2W1nfXOgjwETkdONWjT/tQ7AtxzpCSnpl
M2+47owETnQtk2UE83IbiRrMuOQoQO0vop3FryELwhIOMt3k7kuWU/Apyjw/
c6CwZ0MzoPYtLnmVGorcYhVoi27ELq74fImnpoIFyy9lkjQsZ2LKblpUB2y8
u6strDI3wBJXD6uojz6gNHhRBhE1q8w4M0PXXVBwnS3DI0HTyhzx8R6Fiyri
pe+Kw+aUREjSC6TemMXBZdIWbSnhC7KDyb9wsy8Lv5zhTBgoDKt9aghTpigN
vKwkTauIHTWhjsIlla06L2R7aGqwCaCFrp5207F/ZkqzqWqVLxStmkpkGsDb
VS491U+Lcq4mF2GtS7Y/QBQ2CBublgkgboakS/jAjEytOMMV14uN5J0lckCb
6MEIS4IEexah+2L3NSk4f8kqDmv0OkZWJqwDjdQOucDPkvuSfRq7ixQX2HO5
Kch5teVeqAxlhaToP2qE6P+m6u42NB4tmedd5sPFZdKWBOOC57kqeVJ84MTJ
jEXfldPHCXbpnsacSqGJRNJYb4ST6SiAwiFFAc0YkM+sgM0MJhNsQQMUFunw
w4SL5O8FzUxpgl2PnwzIsyV0UaM2XjX82DNrLyzJbSfVqZSMm2A5fyXJHoWC
CpnW34VMIqHRHPfOvMAkRHxBO5o0eQifQ5G65djA+15pEykKdzaMUtCBfH9B
/WfgXiRMpTPudRSQy6SQGkr1dKNTpcBNC8ICwRV6TCKfqwZs9p5ks4gWaqb4
0sdA8FbRytAlonBhu2Bvz043N1Y0EUr+k/U/+PwTvnfmv8z3g/rf+sxbPVPo
5PzJEfnLTfgP5jz4YO+k8j7BvN7wfy3ntLRZeLn5teIw3zL6Eg6Oten0M/yT
ASkilwg31xE9/39yRGwsN8fPbMbxf6cYgB+nff2D+I//jMhcbcI/i2B6DzPz
3/9/4sffgJcF7svV1v+jTD9jA+wVycab2DHclxuWst89/Z32cKb64JseFXW6
lOMXbw/sFHcju0LMvx22G+Ow8cR7Y1Nt/Pz/oTcd/ysxv/elLxn3RlOfOh0U
//KnP3341f7Y/rnASZwDX25/+W8e/7HA9/7ADzAghzEH146H8KfxOPe+dL3C
ywjagHDRRxNIgsMm2ZhL08nTzAOkR7+kWFCzjRdtx8/D+IOph5kfeuRRis7G
F7XAjY4f/7tJlwjlhWu+V3A9RRxGftDP/71qmxnjeKutCLHbSTcHYUczMz67
WZAx33v6dxk2/kiAA2KD5WFFZNklouBhPb1BQEoOk9hrhbgTxzyYyhL5+L//
Oxr8lrfc9xfe/bp3vv2BC17RJOJtT4z//Z//8uNj+rzuod1w52/+1beEKuMM
+d//wfF/n/cP/95TC48a6+ppiQ/+xfGE/61vvW+B2I32/42fPv7nyP6vP3zm
+J96u9x865uuf+TZh/+rn/m2v/XJt/ylD7zhye+431ud0Dzg7NePJrxGXGo6
j2pwC/N4mgdf4ONQXC4DLLYFvpRhTpiFhzvog8bixrXKWHjCVrEwrt4V+NzN
mKBDc8n1Ra8Kg7nEuNzxFmwRx7sv/KcL3Bd5/+xdhG4fQl/k9c6hu9zAQfRs
hKeZJ/2wbyuuxJ0FWcKyPLrAc7rXFI6FfOX4uPJbw0BveSgiI2fwdunS/d1Q
aAxP/jw+WAM1hl7pCtZdks32wc4N6EzS36GAory/oLp25Tb7bgJF0DfOcc+F
x9HiemskddxrzSUt7f32mCbETI4IVvSwuvHUVF9ZrnmDGhJq3CkA+XBAiv5h
FArvZ8BzGymvZshgPdaztkQ2dApjYNTC5UsSjaXJU1KEbsH3nVTUflzgWIl4
CInYyirecgClDQGyNSLxihwsP40fAKdcI+FFQ+XZig//P3fv/2zdXZ2H/Sc6
3+65+8s5574CgSSkV7ZBEAzii2SQhDxJ/IUYXLfTgBxEOnVN/QXcNJ6xIhq3
uGVwQkhHBWfGjUF2BzfG2JCOARtn0tAW/xCl9rRTNc04E7W/ueecvdd6nmet
tc+995WEJb+z5845++z9+az1rGc9a30++7z3XjhJzkjAhd4OQvxI88VYMfZX
Jgsq40Razv1d4PwFXU86Y+fXciXpAEs3XzkOkp1SVljWQLe3/paT/cZaoKAc
3DHOHD4pN1T+aPXhumRJahnkCQhd4lJLDUmwHIkZ5HeM1M5uYXqYp77c8PBB
nbbU2DtzEFkEEblgJ7WWkZJrBgGNndxIUMuWyBkWy4GWNhe1/aGLoCSChsR0
Q6qyywmlbajLvN1xYQu0ixCgkZbONCsxrG9QtiDUPh25luXRLwNhxmhyHeHn
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
50HG20TaSqI9ypFOHchp1p5ajIj7bSXaOWvaakytQTEcrXmaW4sKnPKjdHJR
XKDFaOjEysqlVy4kB0+g1E4Y2daGlc0eI3A+xU+9PV5TZdypueLIqa+LarBg
0M7JBm4wtNlesDEB4as0A1NxL+89159RV1vYJhheAstJd5J3TR459ELxrpS8
nheEc7DhvEy3zoRCu7UqlCIIJ/Io8D8VboHXhz3P508eV2VCGxyZ3oeJk1Yb
I4whraEYogi+1WXxK1qVC9Ol3deCp5uu0YswuGffYf/hVFIsYNhUDapmHMQ5
5X7WeZaOuBsj4TihaRMnb40zueKnOE4mSMmlslLUt5d8aC/xvbGqVPMqtzp8
Pvc201Cz4ye6mjBFviwqzOlJS0cqYB0uimBV07vUFE0zIVZMbjPGjTvdQKga
yys2IQJ+W4SjydMdfUw4YDv3PGzRxBpaL6uD7FCsF7YnEHe6TrC0MKxwfDFJ
4Mugq/vDKdgnSUtCN3l9XAfxW2rRF1m3J7qyRThZ51fW9nZRnA89m3ZN11LI
srgXbNTrmfzn4Yw2eOftzK0d3h4/mjEIVElndGZ2zlEOzcN+2E46Gbt+dt6O
s/DgulU44wcT41vanT63oJwTPqGVbdq5DqKOjJOSCzBjf3IGNg6AsAK08qKw
zX76p8ePMCbXHd7ZO2/TaBrHKOkt3JQIMo3bI+aAS+LS0PUY7UCJmc94nG7W
KHTNcFcrODQ+UTu+kNwnNTgn1wiK2TDROc1I2TeL7G2BJOMW9hk4PUE284sf
eXguDDTwSQtpJXaN1/jbFiBzUgRBEClgogKWIxo2oLJoBvf9I8uawDcydUzt
RhlCLicZCTojXnOVn51TpIiQGkQij6DqWZ8QbsKBu2bn7iBHP61MCVLkdeBS
EIHwUaMDDv6yIERSMQlbvWV0fNYQ2hSyAupzbDPOHKWofim/KKwzjkswPmZK
K6CBTgS1VMm2cr+L1jadfkTZ51kZoubuRL4ZmKKxnbjAs5ieYxbPGriZbON6
wZ/K5kPFDSYwm3c+bTNHGd6FcbSuXWv8lwUmGR/lm+cmSTpStS6ClZvG1VTj
Ij9nXG2Fn+0swM55Ld6xRIT60kXbzr2h4itbGT8gPPpC6hdxjvVCBMQ+mnmB
CBeULJIEh6mzMQosszqRn6dhiWOGKso6tZ0sYoJMRxOR9Lk4SKUgegS/hKtE
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
                 
                 "], {{0, 69}, {2048, 0}}, {0, 255}, ColorFunction -> 
                 RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 MetaInformation -> 
                 Association[
                  "XMP" -> Association[
                    "BasicSchema" -> 
                    Association[
                    "CreatorTool" -> "Pixelmator 3.5", "ModifyDate" -> 
                    DateObject[{2016, 6, 27}, 
                    TimeObject[{9, 6, 41.}, TimeZone -> -4.], 
                    TimeZone -> -4.]]], "Comments" -> 
                   Association[
                    "XML:com.adobe.xmp" -> 
                    "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core \
5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:tiff=http://ns.adobe.com/tiff/1.0/xmlns:exif=http://ns.adobe.\
com/exif/1.0/xmlns:dc=http://purl.org/dc/elements/1.1/xmlns:xmp=http://ns.\
adobe.com/xap/1.0/> <tiff:ResolutionUnit>2</tiff:ResolutionUnit> \
<tiff:Compression>5</tiff:Compression> \
<tiff:XResolution>72</tiff:XResolution> \
<tiff:Orientation>1</tiff:Orientation> \
<tiff:YResolution>72</tiff:YResolution> \
<exif:PixelXDimension>2048</exif:PixelXDimension> \
<exif:ColorSpace>1</exif:ColorSpace> \
<exif:PixelYDimension>69</exif:PixelYDimension> <dc:subject><rdf:Seq/> \
</dc:subject> <xmp:ModifyDate>2016:06:27 09:06:41</xmp:ModifyDate> \
<xmp:CreatorTool>Pixelmator 3.5</xmp:CreatorTool></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]], Selectable -> False], DefaultBaseStyle -> 
               "ImageGraphics", ImageSize -> Magnification[1], 
               ImageSizeRaw -> {2048, 69}, 
               PlotRange -> {{0, 2048}, {0, 69}}]], "", PageWidth -> 
             DirectedInfinity[1], CellMargins -> 0, CellFrameMargins -> 0, 
             CellChangeTimes -> {{3.544379162237352*^9, 3.544379175555642*^9},
                3.574009622854604*^9, 3.5740096771925993`*^9, {
               3.581868126615425*^9, 3.581868137389792*^9}, 
               3.6119448864400587`*^9, 3.644332879574626*^9, 
               3.67602184800485*^9, 3.6760221842131643`*^9, {
               3.676022245795371*^9, 3.6760222459531*^9}}, Magnification -> 
             1.]}], 
         Cell[
          StyleData[All, "Presentation"], MenuSortingValue -> None], 
         Cell[
          StyleData[All, "Condensed"], MenuSortingValue -> None], 
         Cell[
          StyleData[All, "SlideShow"], DockedCells -> {
            FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
            Cell[
             BoxData[
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzsve+zbOlVHkYlX/Ix/0KqTnfvTs7p3nt3H82MpJkR0swIIc0wM0LSCBkq
EpABXPzQj9SM7CIEEUkkRjYCOWUgYFEWchWWnMKJFKoCJCAbykWY2DgpjV0O
VZZSVFIBOx+cib8l3b33Ws/zrLX2Pn3vjKR7NZfanOqz+93vu9aznvWs9b77
3NG/974fffo/+re+5Vu+5YP/zuHH0+997ls/8IH3fvjt/+7hl3f8yAd/8Nkf
+f7ve8uPfOj7n/3+D9z/vn/7cPPRw/9/y2Ho8fN6d30HXv/+KzRm+nrNN9zH
O/l6edjeu77G1/4bbcDtXnO8umud+jrhc6dd58TrXky/sfjfu+5dt3q9unl1
swLP4nM3Cfi969517/rmuV41W9qXWaFe3QXuVXV9E5XjV01237vOu76JuH3v
ehVf37hyfC+DvnmvO6Ncns3trxkV7wwc7hQz7l1323Vvs3bvukOus6h4T+he
Rdc3fQN5Gw5+02Nyh1z3cL533THXHVz1vukbyNtw8BuAyR3MkFu5bk11v+m5
d2vXNwkHXs3Xva7j3vWNvm6SkTtJdV/d+RIjdceicccadjsW3kn8v3fdu6av
O6MhvClf7lhxmDfsNs2+Y9XjZsO+hnQ6C8w7Frp716viujPk9Bty3bGpN2/Y
HWv23XjdA/MOvV5xXXoVC929695177p33bvuXS/voi3t/viznxm8b3zYcPX6
6+66oXmaPENPCx1+Ysw+jGzUkiZ/e/N1ozvF0s3xV7tzME+8iEaqUzSsv1ag
9uviV7kfPTrNYJPs4yO9PtUnw3r6YN82Yf5+4pGA/yyADU07EZTknXMgzcyg
nRdinzA8pYD3AWeGS8icvp2jCj1YsXd2wOT8gsk+ZEE0oB/WCvlYolr9WufX
PhJjYt2zrwJt4cxZsyElyYAa1YZH+k3OiDDb1FV+G9jbJw3EU3tJvRjHGTGh
ZJ+Jfj1bkVZTfpFV+zThaEnDnhq2jfiOaZlpN8tLFbWmfDZIdJ9+LfJrPuP2
BtStPNgn2/pMyCTys/XUPxBpmUs5LhPf9qHYKSH7qQnJQorvZKT6obTtQ4ql
p/asJ3Gq3ok3Af40Ys7YG+y8Ae0b4+Jzch3ZN2m5Sfnq1evA2GxSSPNJ5aHO
RFRUdJWqGJkxmYDxWQ3uVJqUqNKi082b+xJtmKYT3Swt2acZ9nGSG7yQTo+b
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
H77r35z+ucFbH7+/qBppnkFw5hk4MQ8Ly7Z6apsfL+cM3+Irtu2qGHkbay31
kYEJec67C5+7GpOlzj9jLT5fFWaU47kWLNO6payxqdmYyTyaNj4MnpktenQV
ZkYbM+V4xn8ZJ4kzZPv12uZpGcylA3UlA8rPM1SZmP8seJfRSPsVvm/nYJ8w
IKdYGb5Zw1BYZ6I/DjBWe7gzY6s2Na44t8SsI1M0mIErPRWZOaNg7ixHKmJ7
JTZPgjydmFMuL2h+urOdB2fq5kQSxWDdBOxMydgqCFtPN2dFTaebQjmlcssJ
ka/BuQpjtuVClV9Djkzk79lX7ugWMbIR6ikc5uNePhssKSO+nPLrKkFNv+bE
xLRFdxR0L5YwCtY219/wSOHajTE6oyLPf8saMp8yEY0AKfmShTdOqCKzFKBu
WksNKx2pfBwxnApoclN16So2acFC+ZDq8lRQOHFqmiVtieJphi1yPiag5P5s
KzsPI01SUrrQK7KhaITqLScp2HIC0hD9WlKuIjFyuHNMM9TJkZI2gDf1SHlF
NnjSwkV6EGuNsBRiTuYVpYE5kBWPlwiJmVNmOZDzquX0HwdMJcLEacDUnRAm
7hkYitlYVGpT+R6fvelauuNXYnk1g5SAMhnHYdUOIk2I0rNUQBb5qatYvJZK
uRCysMQMGsuEYRaWGTU4GTNXfXhap1PkZADkpqnmgnuVRs5ssiZa6NwIVZ1h
FoftAAWl81b5sMVnD+jxw1EewyEzxe74IZ/h22zHb/ndwfFo2iLy4MM7Pgk/
fH7vdz0Qep7f0n8dcHrcbD4xM/z9P5wi844uANX8iIEzGJbBvNry+b+9wtg6
uw6O8F/gjwOuYiv4B59/Yhhw+ODjh/8EkBkgq4fz/8N1QJLjMpjxG78U/2yY
cODoY/LhD+Mn2AK/wv3xbPbKV+cx9hTO/ykEJxxefPHFL7/44q98+tOHAd/3
Az8ok5PvXz79M4Ff/9zn7Px/O4bvFPfhHPjw8zDmZMyWk2hpsBzmH14Q4D9o
ozk1nP8b4VHR3JglJ8VpgJ//M520NGyHf5jgzDenAI6nWECJMVz6g36dFhr+
i0anA/bHaEIP7nZJrDCeHH8dQBvgSodOzvzjuvqKZ7Dk+O3g1zFqV2StmWfD
xkP+Q+xUWNjyR5UwUbKGuPibnQH8pZz/j4+jFhyDtTWebL1rJWkd/txou9n3
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
HCaBsp34AK/GUX4NulqSJNI4iHNmZjjxwLPju0W3xI4X2rAQ5g8wRniLWgAb
mFTFACRg+qCr4BS6WMuPHS50cg5iBhOHISUtJRzYcSwMQ+z9yU7oSdVLsCDT
riquuEiJQCCIOyQ1QJs+jDZLSYpoRFTr5KWNgJI8MvbC3v3J+Sf+rILn17+1
CJpGiXkxzfbK/nbh5WMjK5YFl1mBP3LQYhGYA8w3YeacC1VPOFGRWceqHAfU
ZV2GnWJVe5HiWKY5/tIDFUF2qV5VWYK0tStAjilQdoBVS+B55+FG7qSnSigu
YHwoaoISMWp8I1zoXpF04k7A84KeyrXygvSKdS86679uCrYstJMMOKgyoFZK
yIiZTHiSDnWWmswojFgXtKH8lWEXhJ5mGdQvMz+KfNpnBfynvirvs3gSDqqc
xBNJ4U3LyIB+8icZU0tDbdAbeJio/ZhSLRBV+ByK/tYL/QQ+041H3IZIhQqK
HVrZasI2zj8bOMS97sQm4eW/YNQB9tc4E8S4KH9uiA9jv1rWBYGiinhb1bIK
9quN2ra5uNwer8OH43W6eWkDLmHDr+lJ+/js1caPqX+GjrgPn30tP5o+/hfs
T5MPC/GB+enfBQxfDdO6zcfPerj9GCvAr1Xn/+Plxl8Og8dpP6vn/yqhG4f9
4hJg/pie/1/QyGFAeEmxsBncBn8JcgBheMoHH7y7MPP4gwN7+OCPH18WgBgb
/+8jHe4LRJejhSEFhmv4i+6XXnppOH9ejJEKxBih86foDNl93yxo5PA5HDW7
R37k/rM///N8njzQbAj0V77y1dM7Av5j+41BvTks4ef/PHiMrxlwmPn01+Y/
f7gjB9pEfjuo1yQlZ+Hg5Tizm4QxxJDDyAff9OiAaqGol3bZs8NsB/ufetcz
zvMkOBv/OfzLCAfW0+SCYse8ZS/kj+qHkZebYCSHmJ+9OL1MMaw83JsLCv0F
gT9Q6/SPFMY7bjmp2QbzX4rXh1+Hfyww/tOPkzotriTueIrwv4jQWaw33SiP
l5u/9cnjP7r5l3/0zMWleD18brr2//njY/r89595Ynh2uWmH/8LPb332CZeU
BSF/dd29dPqfEv6NX37bFKSH64N/8Q1+/j+iBwM2P/oD479KeOKJ+6Eqmr88
myfa4pKCzgRgdbrVeS4FxsCEnEeDLxV14wyLS6om9LmMxTlrhVhc0M0qFncT
Pt8EmAzzj3Ze4pHKl+NX0bbTHcZB0zxYDpeTCORnbYZLoHehT5Eab4YmB1Lj
pg4oXYr742z0c5Gsopl9DOLFscj2W1nfXOgjwETkdONWjT/tQ7AtxzpCSnpl
M2+47owETnQtk2UE83IbiRrMuOQoQO0vop3FryELwhIOMt3k7kuWU/Apyjw/
c6CwZ0MzoPYtLnmVGorcYhVoi27ELq74fImnpoIFyy9lkjQsZ2LKblpUB2y8
u6strDI3wBJXD6uojz6gNHhRBhE1q8w4M0PXXVBwnS3DI0HTyhzx8R6Fiyri
pe+Kw+aUREjSC6TemMXBZdIWbSnhC7KDyb9wsy8Lv5zhTBgoDKt9aghTpigN
vKwkTauIHTWhjsIlla06L2R7aGqwCaCFrp5207F/ZkqzqWqVLxStmkpkGsDb
VS491U+Lcq4mF2GtS7Y/QBQ2CBublgkgboakS/jAjEytOMMV14uN5J0lckCb
6MEIS4IEexah+2L3NSk4f8kqDmv0OkZWJqwDjdQOucDPkvuSfRq7ixQX2HO5
Kch5teVeqAxlhaToP2qE6P+m6u42NB4tmedd5sPFZdKWBOOC57kqeVJ84MTJ
jEXfldPHCXbpnsacSqGJRNJYb4ST6SiAwiFFAc0YkM+sgM0MJhNsQQMUFunw
w4SL5O8FzUxpgl2PnwzIsyV0UaM2XjX82DNrLyzJbSfVqZSMm2A5fyXJHoWC
CpnW34VMIqHRHPfOvMAkRHxBO5o0eQifQ5G65djA+15pEykKdzaMUtCBfH9B
/WfgXiRMpTPudRSQy6SQGkr1dKNTpcBNC8ICwRV6TCKfqwZs9p5ks4gWaqb4
0sdA8FbRytAlonBhu2Bvz043N1Y0EUr+k/U/+PwTvnfmv8z3g/rf+sxbPVPo
5PzJEfnLTfgP5jz4YO+k8j7BvN7wfy3ntLRZeLn5teIw3zL6Eg6Oten0M/yT
ASkilwg31xE9/39yRGwsN8fPbMbxf6cYgB+nff2D+I//jMhcbcI/i2B6DzPz
3/9/4sffgJcF7svV1v+jTD9jA+wVycab2DHclxuWst89/Z32cKb64JseFXW6
lOMXbw/sFHcju0LMvx22G+Ow8cR7Y1Nt/Pz/oTcd/ysxv/elLxn3RlOfOh0U
//KnP3341f7Y/rnASZwDX25/+W8e/7HA9/7ADzAghzEH146H8KfxOPe+dL3C
ywjagHDRRxNIgsMm2ZhL08nTzAOkR7+kWFCzjRdtx8/D+IOph5kfeuRRis7G
F7XAjY4f/7tJlwjlhWu+V3A9RRxGftDP/71qmxnjeKutCLHbSTcHYUczMz67
WZAx33v6dxk2/kiAA2KD5WFFZNklouBhPb1BQEoOk9hrhbgTxzyYyhL5+L//
Oxr8lrfc9xfe/bp3vv2BC17RJOJtT4z//Z//8uNj+rzuod1w52/+1beEKuMM
+d//wfF/n/cP/95TC48a6+ppiQ/+xfGE/61vvW+B2I32/42fPv7nyP6vP3zm
+J96u9x865uuf+TZh/+rn/m2v/XJt/ylD7zhye+431ud0Dzg7NePJrxGXGo6
j2pwC/N4mgdf4ONQXC4DLLYFvpRhTpiFhzvog8bixrXKWHjCVrEwrt4V+NzN
mKBDc8n1Ra8Kg7nEuNzxFmwRx7sv/KcL3Bd5/+xdhG4fQl/k9c6hu9zAQfRs
hKeZJ/2wbyuuxJ0FWcKyPLrAc7rXFI6FfOX4uPJbw0BveSgiI2fwdunS/d1Q
aAxP/jw+WAM1hl7pCtZdks32wc4N6EzS36GAory/oLp25Tb7bgJF0DfOcc+F
x9HiemskddxrzSUt7f32mCbETI4IVvSwuvHUVF9ZrnmDGhJq3CkA+XBAiv5h
FArvZ8BzGymvZshgPdaztkQ2dApjYNTC5UsSjaXJU1KEbsH3nVTUflzgWIl4
CInYyirecgClDQGyNSLxihwsP40fAKdcI+FFQ+XZig//P3fv/2zdXZ2H/Sc6
3+65+8s5574CgSSkV7ZBEAzii2SQhDxJ/IUYXLfTgBxEOnVN/QXcNJ6xIhq3
uGVwQkhHBWfGjUF2BzfG2JCOARtn0tAW/xCl9rRTNc04E7W/ueecvdd6nmet
tc+995WEJb+z5845++z9+az1rGc9a30++7z3XjhJzkjAhd4OQvxI88VYMfZX
Jgsq40Razv1d4PwFXU86Y+fXciXpAEs3XzkOkp1SVljWQLe3/paT/cZaoKAc
3DHOHD4pN1T+aPXhumRJahnkCQhd4lJLDUmwHIkZ5HeM1M5uYXqYp77c8PBB
nbbU2DtzEFkEEblgJ7WWkZJrBgGNndxIUMuWyBkWy4GWNhe1/aGLoCSChsR0
Q6qyywmlbajLvN1xYQu0ixCgkZbONCsxrG9QtiDUPh25luXRLwNhxmhyHeHn
U/ptAQsHsBJpogYmkX9N4UBnIorECQWQPRwE2gX5Dg0ndqnQUUkiPffQUEvD
RdNWXl6hziQQ3F2gGeN0QOfD+mliixSzSRlhKUCyxUfGRzEXieNvdyC/dnQ9
GtoboESQL0MMXvCCHamBSs0AWgQFcP7I5IvJozKugFjHqzCi2YObyGL4yOxy
97lM01yeVmTq2qsDOoeLGB2kAOWg9BLe3l8AcLB3nMWkT1oL66lw45oc8Z6B
v55EsoAujkuPaaYWJrITCkNpSIp3YYZRKGNlRPlbu49eSrRGeyaaKBFFWUxQ
xInJWGJQf4uSgRu5lml1Cx0URExIy0UzFFApUh4C5y0lPmQfF4vBImKohqik
LNo46XRVvdomKMA9Z7L/vFjDAK8FVBbZWu8EWBNEk40/HLUd84fW7A4jqRkE
x0WSRW93QZ/SNTsYQ9sRFw++7bW8xT1c8IH3YWN8/9a/jn78EwCHAfmCX/2l
t7ja8I764SvxbAbKymgPf7n9sP0+In+ALv4yHxHh2kG+5Q8//9D+7f74h8fj
M3bsnfVZ9j/j/j9Gu7G/cu8XP8s4PIaghmR/8Ob8/vXg3Sd+7n4/uXcwG7yf
yC+4ed+r5GHB8QJ/IrO/knEeDID+kPu08jpsaA9f7d7/+9KXv/zQI++RguKU
NkdoczhQS8jj+/+h1vj+/37YYYv+vje+0Ve7++MLzxy++P3Qo4+ehc12ojTt
/1889Mijh43lZ359rfbsR/7SYROebAavxmMwZj9OeQz/dyDUbphkofcx95YM
vyTn4NT9b6JCr3mHKjyk6ujmcOMxBI+e8SrPe5LtxfCbkQbH8SkXXGo8mLpn
9p8mnnvuuSl//bDHBBjBnx0kd+g1JIh5MlrySbec1MkrLHTPkPGtfmZXdZJA
thK/9k9NZ/wv6DFp1xjBZfzif/j0+Dzur7znngFSfyLwCz/1JoUUjdY/+/XD
E88/+q2HKdFuBOHF/v/w+38Yyd2Np3/xgf1H//w33nXH3a/+/KfezkoyyuZ/
87ZX3/Wq0fKdeK2pdyPIphtjrQ6R6tJxdhdpKIl+6JSokeAQqFBUr8tYXDZX
HQunUBELr+mvBHxe4ZioGaSTtEEqvvBda9hM42xlnDPu6nduXrCNfJRiFATn
wivdGX9xBRHBa8yII3iRp1MXooRONWk0mtfiKPsePqosIQoikhHwtVzgDPEe
YKJL9AaAel3gLIuF6IgsQmUQjz6T8KIYyl8zvXc+eGqwhXIx72iFfoPGhEm8
wUhbizdopSlA+QMOoYp1OOtthoV+FhVEE8EOlHveo3YDwiBlBBnD3Ymg3LDa
Std4xoWsrEKZ6jITjJIOfAYH1hGoiQyi0da7HD7O5YQ57VEX4w9LWmHRjWJe
Di54i+vX4nvAWfZ+C+kLJymd/YEaqbRvP1I12dFc0RKdt1Azd434ucvGXMjt
vI4IVYOXqzw4+ZWiUEY8SbR03ZnhWuBK+7OdvhgP15cgMK9oi7KOoAhOFd9o
jFq+C04N2wshVYnz2WapFDz+jcI8oa4kY8Woi3W8l3NTs5tE1QhM6Qz51SQN
ceetEokCxVGEMV1GNkAQXGPTXeMDViewTCHk5OfUkfZS41T9ZLOUmZD4tmNk
fMemkuvQaaR0pkykDGWpnCxeyR6mDbe1OyVGCKgkmuqGcgy7ymmWENOIc/A9
UVc4HN0Mmklq5knK4RAJ0iDuGF7O4qHihNlzFbhRuBNVzhCIzgqN+YyqnKBk
e7waEVWDtdx4g8IdtqEIc1nFQL60fSrW9Ul+UzHF1wnKyiXSdLa7iBIBDtyg
LuIGN3jrrVqug8uTKQ69Tyd8u6GTKl2FBhnJVMJw5kbxacg7odlF9lTn5dp9
I44ZkkIsNxrseECXL9+BHy+Oz9Y56ErvM9lrpRpU+Yjvt2x1PSIp6fSQp+RO
V60FSdtFi25I3L0Zk9iFScVZ3rAleVQ0aJEbNg9f4LFSnPlPAA9Tf4Z++f/+
Gt7THrbQ49a3ucn71bylv59xlewvLrYj7P+vyNqpg2+ZOvYzThmwB2Fvw3Dk
G//kKw/fvO9VYUb+qr9/Gp6nrPiWIwI8Pg9yeIxyAOrGF//BAw5stf9/+XHf
/W/kpwD/4lvfsv3t4pC9dOeGBmuVLvNj3P8/vqZf0YMLnnvuua9/4xvDa91s
x/HjtP+/P/bX7+/yqfeH/3Khqxgz9W//aSbhYNKXvvxl3y3/wjO/PvxRg+Gu
wy/zOW7g51CeOPa3DE9DhkH2HpUhGGYPu+J05GqChBo2z6/4L8A13FtieEWe
uOWrE3ft4oyDp6uTJyVG0kni/Dmefe9qWTiK89/6T0bh+vW/93a//aGHXjec
/M9+4v4py7/23x/+QMCzv/PICUD4+//Zhi/+w0Ne/+6vPPjlzx7y/d9+87Hf
+9WHnv7FB77yjx78N7//2HDj4U8D33l7Lnx+lNiuCmJkTl42TtlaXNkGPVIH
e6tz3cqRMvHljc8rGZPLjqlbwuyryfOHJicPcl1LprImtD1y/e5K061uFRlF
OzSW1wOzOk6Mc6JvvJRmYRMgO1JaK0HMLybxLFYBk9MNE8Vw7PJcBeuK85NT
16u5K6V86qBuNbiTx+rUgLoGrI25xJepfLlygPJopQSl5SqIMbEujjl74/JZ
rurLqVp2rfSPa5ZK2fzTYuS08p0I9CVROGlthuJGuMsNmx6nxjN32idFY2LA
nYx2KfKBsde1+QUecTqOeFKYfHFp3q1WwxtnNWIxvi/IwfKIPL861Feh+uRo
l3PpajdeC/CJonYFkCdStVSYSW2frJVkQFETMUisIBVnTojwCe/MF1mxTo15
tTzNt5ib0kvfWE3Mcmq6Yic5znja8bo07C5O5/KlLfc1m8BLuo7JGydXItP2
q6BdkvLXaep4ulORunWgTs1Yjlk3QsyZaJVnaFXLJhy5leifyMR9DpbP/U/P
UgU0u3+ZYVdtWk4sCibwfKEQXXe1Xl+vgnO1YU8jcKU6tdpcnNmxOmx8jWcO
r+kkLh7f7sZU2hwv80k3w8g73pH+we+/m8/86i99736cH/r+u/yCjzx+3/4M
b7YfbxmNPLGlbzaMVu1NDRcPFh5d2MXf/+PW7i+wF2b/eFxv/3+zC9aeOP7k
Kw/vEViNLowI81f3v/2b7zKoD3byH/Z98G2vlbK+ufgmob0/85EPfpfPsh98
P+zwOGb/8977bi/3/weIyHcE3YFaHZ8CPPnxjz/33HO+A7w/w1eujoQZN8bt
DDmyI5Jc2GU074Fyu2HLfXUM3P4n7/bv3773/T86PBEYfOf9/+Ps41DjPvBn
PzecfPKpj/Njgv3IX//68ERgp8YokzfyMIKgOBg2vt7s3E026dlnn93fOxzD
zv/zzz//hWd+/ac/+rGV3TXeQoAT/mMCCrx7khwfxHgI9sh4CIaDd9GZXcga
S9JDdivh8x7+yoxxbI+++9b9rrgXyIyzOHSrmgDjLPtg8ZOLIwGQ5kddOuay
nQ9f9S9PGsg7T5bBl4z2YfP/AmscSrHRx82rbvy3f3f8/zv/2//47pvf/eqV
RfyRd42/o+xj//H9CjJe/96vHn5J15989VGn1mq0xPlz8eP//pi5D7z1rjNj
lF/z+792eILw/x7/jsA3fu2hN7zxtU65u+559Zeefudw73/1t97sIdYisnMk
jwd/Oo7jkhiocqVxNjvXYYedht0lSO0yryAbIxvw35WxuPpcZSzGqeFvEQsU
x5c1Pq9gTJCV9NOCPk5qXl+chRcbOrORT8XNQUaoBrmguctjgMx+Qn4AIYqk
ifMuCcVYv2iWYEkYeUdQS6NF7uzMMNi8CuEg21gzdd4LK1iF7HOl0C59V5QP
qk0eHQtoPSafjK9BntKwnSn2zotmGtP8CrFznDfSGKDgjs3tDh2vIsbRMQu1
LnMlZa8TbZDCdLFlnLZeG4xzFo8Yi5hl3pxYLjM/I8MpBx2EM7I/TiGtyE7F
OVK9MJt1A2lirUVIMfRUaCwVBOnV2d/x9g2Sd4WPZLWyEgelE1sZ5coQhEwn
hNP1SF6IG3FAezyhMaFqsh9okECTAPH16Qw5kuLFLCVMdmdQA2+oWJF2NBEX
ozAypUmy3BZrzhMUApFWZN8uK56vZ1HyyJdV5ebYUtIsHJSVi0Mk4YVJFshT
abJk0xljyFd6em6gSMwBKo6uuiPswJx0ZsXSx004GGUmuazBC0NVTiJ27pcM
Hi5gl1nWWAyLBOe35B0HDphzp0ShlBEEhJiq0o3srLplQbbypKuSMw6u19lC
qMkkYntKh11iWkofrzWouawMO1VjURiFi7HdMaqxpohG7QAI0bjWfFOGIjep
HMgtYiqInarYrvLIYdl5BUltSe4DZYkKQgpPdkNyhUqKRNhY4ofeOLQTzEBl
vlQuUTN2LRNj51Mou7jiIN+p9w7aHtuqjCqNLN0C8kuccibvglWKdgxf+sga
DG2eKYIXsVp5xU+Z6LEwzHfeHxagjcbvlD9ed7wNoEnFJO5JqDgyjGE6vwCq
vov1a4O5cuOxGikkAaUcFKE4q/xK4eZwWFsFCnkXrVdWPC85lnLNLGcdcAqV
/FcWVfhQi8vuM2k3fCXlLBmWg4USttmtCAeszgKwbKqKrf3UcXLTUncy0n5w
juhPb3KswdgQepthS9MUe4zjbjRplNMd32X9ie2F0gKTd84/8L579yP4/wj4
yAfvGybyM8evqe/4q+9nKKO7sKOOmrLh3m/MFJ73m8eHBatxHyPu/9t5SPdq
6wvMkWl8y5985eH9gPn4oe+/2zcQ9i8u3f/fe70f9t7Dd/sd8DEZ+X9AfPHT
D+yHOh737A8G5xM/dz92QY+Ah/3//Uf+vOCHHrvr539iHPbwBwUOTyjuURzG
hgfRHxPQnJJCPMblyafGpwDPP//88avsLFM7bOw78YbxkRGHt7T/763+4Rj3
/y1Nht/2c98b3jgI9fgbgY5vz2zT+Mef+LC3cIPNvg88hPjm/W8cvpM/2HDz
DYe3+5HdHt/3HhcyRptx/9/wGU1FmrhemZ5vLkaTPvzhM8uX/ezD9/b3WIXd
ORPnHYQr9IeWa6PSWiZ6CJ599l8d0Bilb/fTH/2oP/jwFY0HF7WSNgcsEbCH
7/nlCkDicxjHt/ptqN1DDz/qAZVUwj7kjuVrCMFxkNHx0XL//v8G1ZkXMuPD
l32Inxgf8Zi8H2b05z5OXdoPkV2LERmTYvyuSCzN0Os+8vDrvvXFd48PFp/5
vrtv3uE5sjp8/398mvm3P/JGQwyFfjD+Dz5/2L3/V7/zCBxxCbKMeNz2/9/6
wF2j2a7A24t//hvj30z5v37vPa953atWMP4wVHf77f/yy4/sP/13f/j9d993
x4rkGowFUE7yi5HYWFFe2O4H+Hn1cVZgl+iJU5c9YlraphByylMjxOL6c8VY
IGGnY3EG7wTnlwM+fzEwcXu8qWCNJaXyQSAj1na64FvzQ80/VqawHMtDttkr
lw9I6z5Zy6ywDGSnLshU0VUeEK0U96j29QO+JQLoomRxceHyGgT3R3x4A5Mp
JO2f5T4bRuUPCz0tVdYwICJbI5VRywdcbXlY7DWZ2cycHbxGCfACtCPEvE/e
CR+YoraUwPpaCp8821oZArzPgxkjIXE9E0wU243xVsGlwBZowVQs/ehiv2wF
9lo6e21F/8lLA2vqfF2zwXlqPi8UYSiDBg5Uh20bLqk7BfZCxrfVgfck3mWd
0cgecW02zH3fc9iAim4D0/7MQw+bXTGIV6oAlIyAC/lIOsNLS56UwHENsYh7
86yLWa0RFs0NvfU0tAaPpJtvIfScRUZaBgEZ6iQRIUXUcKD59LuwQEa99kJA
Tb6kgwcFHHPeUihdn81OqAEDTkpiKeAo+T6AD3VBfnlBhPEI4pajGVtoV7YV
28Mi70kHAJn8O/CQqI5xiJYe8TOhsTMq6SFrEbEaerJNtnlR9vTxwG0zbRxb
qgtWnX00SxOIADYZwGeItgXUMsJqn6NHSk7th98OKXP8DSiJkYzgRXblIAMB
KhmmP+CAUQIdmq8mvNoi0JYvWOXBeI4CF1OMY2T2vRdPGar4pr3UaLkLvjdy
xmlFGWqhsSQlG7zJ9C4CImmfchLZWpUKOtkJrkrpSVS03hUaSPqAIk69BNpX
LXPeOFHKgDPaKXFr51oqtW8F21h7XfHIL+EYenXPL6+PLGKWLxdkpJ/x3tUZ
a0JkFU1oBiqijUcn5gLOgSbdQ6qaIlnNpVRC0J1ddjEaS2eCmRG7O+Ke6Yms
BZjeRD8LtEsZHKR70UWIVFKHY+IsxngUSMQIMcpK4E+dtmg4StIOZLN2gkjr
hd6DIsZr8nKPR2rDlVSXEmcUGjQb1DD7sGh+XNk86SwdkCkQHLCRWh2qGt6v
SuOHusP1lDhJlZEy3fso6lW4sFLJQL1GjFztuccAnk5XcCkqpF9PhQYl2D7i
FsIAR7mXVsf62x29vUAKcCsOhXEVAqm8jKJOcS3zvLAul+oRiriF1d0hWZMi
C2zdu5V1Gh/54H28yfzg217jb9/5ttcMg/uu9WGjfrP79m++i9+6Se+ke4/f
fn8NGXzBr/d3ffHTD2AL/R88wE6l/X94ekaOk1JN3kIttHNyDDfvrv/JVx4e
/kZA+LX/xwciAfnDIF/93Dv4sqnjq7/yDk7As/D9/6NVv/pL3+vPVnzYvW2r
w/OUuP/PXrvvQoaNQORpO/xd2uF74Cj62x2+HE6jgWzGQOwhy8gX+P7/8d7h
C/+f/NQvD2+HX4Dvw/pmu5Xj0Qb6/v84sv+139Vx83z/6X5k98v3oq3MjWy3
7//TEonaToeCc3z8LwlPfNgH8RnHrXUzFZkIWEBsL7taTJ3thy30IQQDIMMx
7IofzmxpKA4o+l6k+TDFcO9gZOYAuXMRLhuG+rPj3w5A97uJBjAZ3E5fnvAZ
6wk5K3eExs5x3hPjjLjnDwWyshW+0Av8ok5Zqu+2r7n9kz//Zk+Z/evtq26s
XEiPlr/tbeP+/9/5mTfZXoTXptG2//k3xt//r6BdWOgPUXj8x+z7/w/c6esL
v+YrvzKm+S/81BtXmwv14vD2p//mG4YLfvAv3+sVlkTSV8RY+KMdisSjEnDN
cdADGz7wxdtO5xK6I1JXWRAhFkTaq85VxoJXTFOxWKnXLx98/sJggp7NU5vt
sRekJDtCxhHg5QY3Y5rjtECzNYh4zWPCKZVBCiX3eDQFu8wjB/Hx9Y5by9tl
0tXoFLQs0gHH4GL9zghIqSIjpZdjHHZxhOyCAkUM3KEabsM1tMuHZiM3ouYL
RZzQuEgGMFu8EwOrz/he7Xi1pfG9AhQpY0XKC6uYRkJzn0r5GXKHLN9eBJvP
AJpcwLrhc9FoXh+1xYK1F0Ik2bXYrUgoOPFjMx+r8E5jeqEIY7uAdS+yThgr
AS3jouZF1hG9vevQYKWuSSEVSpw5sDyjb3doRFYbyU0o7SZ5ZDhE5suAkC/f
BSUhpdCjXvMSXjzVVKWdT7PZ1oag1pkS8iyQCq75a+MtJf7KNzQ0yiGUHCmR
msCWCDXtpURqSS3g4GJjhGCkipMiteGTSHOeV6K8rUXpTF2QnbQwXXyL1OBC
THtlRCSHFJ1ApDSZLYU1GaxAbSbUkoZCJfUYUTLSysKLZqQf+pyQaIR/MOCM
NBAk5A7HEUtZcKYzrmy/+sxIfkYA0rJCE03Nww4VEIBWj1RnZ23zkN56yQBF
I/hbTpYLniJaS+Zxd0Rb0Ew5LtPulLQHgliu1FFwipAxUSnL+PlRCH3MEe5P
RO5ASC58zCjS7WB80XWQBGnmrgIURdmSZe/ZJiCDjMhLYxCAsl65iqaaqI5h
zwQ6Lc1Oqskuy5MxlX6OAnBAvaAmNifvjqGosoB4m/V5bGUDzvEMbz2daeKc
EeWyVXavCtQmGmPNUuwryoyQWiYOcq25EJpNpExs7SoOM5G4sQmjjZqm2cT7
ut4QioXCaj5/YZ1eFIoi7hu1GdLKYGZADDEZ6uLMF01sM7UiGRl4gX1yGdNp
dibXu6pfkKQHeZEM4g29wArq5UI7l7o7SVJkVuhhVKAIqLB+IWK4mNTpOXHm
7LIrpw7etP/ipx/wxwGH30hj1/Du+v6tvz7+giCZjv+awM//xPecMIZ/T84n
fu5+RqPczD/t0eQjAz56ecu769/8/IN+nrfocb7HIPfevP0qm//Dsb+YJ9X9
/91ZD/wdEEe+3P8P7jAs9npLP3HB8BX0hx5+lM+H75DzjcNruUwBXPHv/6FZ
nn322f2Ln/7Zw1fEf/qjH/WP8P1/NZj2gbfDyeHr5cO9x9/J8yxPUT6MKI3h
o+SPmrQNQ7Hx6dhm/MNE4aP73jD+z4Kbh/8QcTgzfK/+uA8/aecU7XX/f1tc
OZjXxxAPl+0hZUvOps3ej/PJT/2yP9Y5YfmJ42tf/0YIvcb9xL1bN8NPHv/C
S1TIR9599x/91sP+tf/923LA+77njuGaX37ye6fm+uOvHL6c/41//JBNDWL4
jL7//9a33pkJ8IVfHv9m+nt/ID1APDry2CPjryH6mf/oDSeiPF7fx9mjzacu
uOI49aGScivH1eeq466Wl7GY9Pflis8rERNKwFhZMgJl9xJBSNVEZik/nZ5R
7AmmXj5U6VeO6a1nwZWio/ZfBcPg7K3y6jDI2UQ5u5o7gO6aNkxCGpv8ifPh
lsnq2e9K3ubR6hGupgwVA6+LZJzxlFVXGnObMYxKkgJxpier1mJ7XR+vbnk8
rgD+WVSna6aqkt9DcGpG67sIihquKa4W45+CtOrxoj0vAfhXuPfsEsv99on6
deqYiqOePxGpPEs/kQjXmL2G5VQI+nq0E9zIxjOGtyA1V/Z6Wg8vrxGXIca5
3F992GKQdP11q/N2CsNrlGkk/lVmP3XN2bSivpC0PTljYd50ecVCrCbtLZWD
k/iUcJ2Wwe0JC1fEutTjXdKHXIKJIVO+LUZIWJ2dQv7UeXyUOHx2/aBEla5m
j3ZWSnVyBMH8clRP7rHEo/eifC2Xdeq+RGBbBChF/NLSX1t+pcSPyl+W3Qm6
bl2srmphbdLlaSKmnuygrnBco05d8+L6euH5FfqEs6j81Zi14NhR9CcF05Zo
a21J21u96FE4llyS+kDm7XEc795x3jftv/n5B30j/aufe4fNsv3A+17nG9E/
Sf9f4BMfu5/qwuFK/mL8YfO83y6Pxi/F/e0HfgQDHr4E+9hdGKTczO+Prg32
E1BL8/QzTxa3aJN5QMncjzYMpg7n3/GA/C+G8SkGljxb/y09VzmG25cWO9n/
t/D5/6fwpyHDjHH/3wI6Rpnj2w8McTbSleY79rp7gPP88R/IIwI48mrY7P3a
179xPC89/LjlTlAPe8UPPfzol3778B3+EfPjQZvtW5jdb4d94KfHfeDDFPuT
+3v3Mw6/qeaw80xx1A3t0dS9+7b/n7oIjrv83PL+/9Jd7set6eeee+7eww75
dqBfHAQ4ezgYnG2cbrMbfj/S42MIDhcM+/APPfxIvPEQDguohGM7OIv9/94X
F9tjxLcSRN7/hzHbLzzzzOFPMzz18dHsfusis/TRbMbByPe+7/1jGh5vMcsf
DWaTGuycP6DZIWfHKx/nuLuzrlEiU+ba8eTZ8U+oQz/77Xt/4N5/+83D39X9
0z947Gf+5uvPd+MgSwnEYfz17uL5f3ZIqN/93IMG8o4u2N1x9/inPX7tU2/T
8G15Rtr/f22+5u8/Of6nnofeeVcU+aNrb37z+IfCP/7RNyJ8dCWUXDJ9W/iV
6HGL42xwnnMkgTBEdpvCNHn+inPlWEAQNtmM7FSB83cUn1jK/yJhgkGWbBtP
HSZyUx0oAEJDQWeSLzwp9MF6CYZxKH895GXpnnJEpBcy3Qu6XaAdRrCCEhbs
PWnO6B3VYtzljtPFjLbonkEtKG0F1cgQwYGEnUemiPfkbJ8u69lUR2xAm72D
/TyXeEe3GyAl7DJmwNmbnCUuo/AZgNTmkdlgO2coZ3HkZ3RQz2jykiCENGSv
mWxjiUyclC4XtPdZqBOmNAcOHBGKfk7SKCBcNMcLlowtKD0Sb9lv+a5pk8Kk
Od8zwo4D02a7zHD1E1R0klS5vBTR3tJJXL/kWTg9OYM2IYI8QmI40N6uEMTE
yaKOhJQZw7qM95ogQMA1B3vTxlwsgp09ex0MS/OqwUsdZ+mgYV5Ec8nhsxdL
n5pzjdPNdb60oSRVAL8P4dsSXFxllAPhtap0CuVAqphlCa4gocHCMZrLdGPh
qUiQa/UOoRQXxpOjjnF0JHO34su0HhK8CR8ftodhmizhGlmOKZ6ctttI+LB8
CKEJYarREz2PGcosEpdh89KjECoCM1xqvXdcWyqsvtTKZKYSrB4tgfAwGifI
NmQW6cB2WTLZc9NNYuh6zkq6LEeWuiyQTQolhQ/oUducytYSKImFrHtayCQ1
Yps9GdmQNTsgL7IMR5Zyy1AWq8obaop4x1U7KJtCTfAu0Q8bGy1ASx8hwR71
M0kxG7B0A0iBC9psBnsU/J5qLqXt0j3tafxooY8WBIEbCSaMGSC28b3cEJLv
EbGtQCGIKT6AqOwNggxqOktZpNxnnshoXCY079i73u3ReV0tWYuyPVx8hXVb
ZSbltdfQ3PYI7CkWrkXSumjua6Z4FKTnlFKi9FBLlvKWqyE3FZwFvIPN0+0U
ipKZhd7Kp6Hz5Oa5pwu4jzKGLyGAXPJIQIaQYTXH2jIaHL7xjr19F5Ye3/nn
39vzgR+5RwK32X7kgzd19/u7aZdg5Ma9N2/nHe/D1917F43DxZ/5O2/SzXzr
EskX36Ucb+H9/yf/0tIR6F1StjrLdm98/J6/XcA+7s07focfNnz1c29nB6kD
GQP3iY+9wS/YX8zk0f3/sfTvB2HQ3vm2OwYj2cK9U6P+DHHvtZL2Ow7Ecmyt
Kbn63dPY/0f9GvbMD/vPPqZn/WZUVPyaektPn9r3//3MsGO/v/j4J3SfQRG0
zfbHhy+B92NjvOzxPXDewxm2ygebH3z4Ed923t81bGgL+Y+mDsbY/g9aLH9I
tApdU791TJbOK6PK8Ot6hm+n+zqFSr+VaQJ8RUYGXSpCcJzrk5/61PCLdEJD
SOUMD7kgsLZ5fsSB26rBJJeLwy32mIAfG21/+H0/OjzgEPXoYbkBtX3cHoUg
+sfDLXfF46Xc0kZb2e9T+tJvfxlKeLzlcf/+v0JqCUUDjqONtBz/A5pp2l99
7J5/94eHHPnWF9/9l978mpFdovlb1r3hrwP8n//To6aryKP9jO95ePxm/n/x
s28a4m7RJ+N7fP//LW95bb7mR987yuBff/9NylDzsd/+tR8Y//jI3/gPvov3
UZ1Fjv+o84ZDsbhmPff6eN1xNmkcI6393C6xB8jtYlXT+fzV5ipjEXNqIhZa
FgVnT1vceGs4T9psIbgWVq84TLy1lv7HRjvKxdLbJG7+SZ8hSl7HXbIwo5cG
W8sAk232hQaUwuRK4kPJ3gU9GU+tF1VzpBhsWEpfwU0X2lErnfDIWGGYe6ry
AmejsMSWjxpR2XqlcpNulNWxhdsBXKZ7wX8fn+rRSmrrLhc+8jeKuRcOjdrW
+hl/ngUHgYk/7RLyowSApT4sxVGfa++M1V5wx5D5IIjphg3Wt1QiwQ1GWJi8
ddD8KTZnxJLfbjxx0LyNadK7VVtm3UoI6ROJteCPT+ErAnecOnnYxj5udoh1
XKRsV2HkPuAjZPBAYyhOFjq5JIQtB5FBrrS0qBESxocpUYJ2xOotwoEswKYc
BXdkHSes72/Qzrw4TqmdVjSghFHINgGWcMeoC75JDWIlhODQ+Pw8RVeU8nYJ
7bWKZlmmQWRJp81Ac1BEyVYB5AvvCDln0EgsKfre5yNDe6QtyKlFKkoTcQwL
qI1BzcWOq0/PoJEjG3/LUZYlCZGNNEo47AK4MwliVfcsc1NZ0mXelczr2U1y
BxA0Yb0GoTI6mYfSqcLYw7uluLmjXBDcVvZ80NykqgF60BROfkmWHZMfxkiV
l01p3Q/0dNtJNZGaC21x8F0ZoJwMIyvDZsfgiCMbjpoXOLYwxI4ZtfNajzBZ
Xnt1C4rt3SwIyQnIyWLFAtfTC6gZJQ43EngOvlFe8TKcFyyUv6gUTn5ol6zW
lzzCxqziJmRjbZ71e0s3XsQWQkqJAyXhWJO2uBgyS6FsesaaYbTNrtLbJbvs
edQ7VmZeZBG9VZ1xPaFyz9kddBiiEZILVPHZeYViwLJVlAVaR7ykcrfcwyQT
zy2oiAaeETCd966GlirLDazSDsoxsSqjsOhKhNZiyE2itBRW1lspdqQwDIXf
zg90LOKUgDQmNHYJg00HksjIJieoq1YhYVHNjRiqG1r3ud+jlUvIbm9HYxWA
3lK9W1GnJM6aHmLvyAWnoKUvCjSaxvYk2l6SdhSL8d4ltux8JSIwQjRoXu46
tEnTJwgQBF9V+WJ5a1qH/F2GaPJmDsWXewnBmY4QkdB/+vGZJ7Hf7v8X4Acf
u5Mx5I1rP8ph/5h+sc9+tMMOObHxnpu38/45PSOAs2zP/nWwNqj0AF2+xT9d
eSvlgT4e4fv/Liar4xMK/kVG44CmnGz83h2F9GD/Ox+4I1zj2ccwum330HR7
cKxqiIVHG0JDu/MZb77+jTffcD8FYie+H48v/faXx71uoD3uPz993IOVlKGf
w776Dx+//k3FGh/xLCv7Hv7xlh/lwNH+v8zF+8AeoPe+7/3DIMP/O1iSU7Sh
jSwIxjA3lkIG5MiKTeqhQkOkbr7+/uFb68enDzFlSOHHuD/08CP3vv7+ZYG8
S+52+DU4Dx6etowXDLMMWK3InbB8WCpivP/v6c8ouWKvCK6VWD7CtSfAMq4U
tvxiuOzJpz5Ovh+Autcs30dq6cKIWXbBweMzJtEK/L8PRcwbJ5Y4CiUahv3b
5mL3vxz38/c/77731e4IJJRSfrDqv/7Px2eFf+0H7iX+jNM9/YtvHT599F13
c2qHiH/Qv///ltfma7avvvjTPzj8f4T/7r986zINsj/+nv0HgXe+484lqbRy
VYy/1K+Kny/aOCwsSsux3k2dv/pcORYk9bHX0uybstZfo6y/FDjzEvIqWL3y
MBHZ9NXuVueiNgMde0HIZU/rPp03oMqjmRTs+EabRbZo4oybncRCm0ayh7rc
AAXHgl5oH+IQjcB6d6p7y9BJ3wcIoaxgiUjGDj9MnUaI46fbCa7C09Bj00af
wAhMuLN1wgTMCRAPayCweCHdeLzA+iJey2BxxHet1F9JH4VlCUBkFUy8YmYW
ZntWLtVOUE6ZUHFv57XVoyMTbUgZaujI8s3Ep5tg7W5ZMSRkAVOXDOO8pi2g
RMK4YbXJg3v6GBSZbMQKTcOcINkwt38XAKGlE7eFW9485InymaWFJuQXOSKq
u5IQeLh3/tMZHhzR4lUTkuctU6CYWj4qUEVwo2xK0MWqMAt2eIIy7Jb5YssU
j0IV1kkfmTPWYRbjI002oqUxo9XgJZUP2YfhCyiLV0kJs80rtZCzRjJls9Uc
ASAoK7Q6WPXBd5a1mPXL6LhsjywdRmr/ohnqslJrl+baiaiKDb6N5ltzcG1F
/gptVC1jH9Vvw3REmHg+k8FjUZIcW5EWygk+K9TyMAK5zxcHSnAmqqchH8F8
vT1HoZCF1fR53FI0tDXb2dNyaicPZxCT07zWxnWiA5RWc1ztRnqXaShgWkUI
BAhTpyxgEHKpLUxNORuZw5aEtjO7o2YQXFTUVnr7MhlGxKsvC0pVcCOgSlQk
BqqyhdHiDp4uo/ISxvt8USfPlN1K9J932tXgJMIrnj1HMPEf9Ijb8gUNeIRc
y/iuo2268FFJjOkwIUH5tY+WryH3dZ9/gnKZBinR0LcHKuas5NyRHOSHX8mq
wk7ZNg8cpqWN7s9n+5fqdWF2IhU/cah8EY5JinXHg98Ol3X283Bmk/J3A2No
hBUNEr60T7vTGM3/TK0f3/7Nd9kgGxp/E363z7C7/pkn37Q/9oPwvvq48W6G
OQi8mf/HX3l4f015/OBjd666cd6w/0/4bByTlUC3yb//h4ENz0Te+cAdw6cf
+cDNAoHx2PgI/NcNhgccwyH7/x3g9f9xMPyHgmzhcf9/o5QeI7sH4dnjv2En
1i7YsG0PPvzwsJvN6bC/Zn/+z/7sz/bnj9v7h/B5IIafjz/xBL4o7uSxF+NX
7tX94fvewzfGebqnP/tZfwDBTPbfAxOoO/zBgiefeopJvvTv/xPtV2wMjRzy
FMbYNYNJj/MzETqGhyNf+/o3BLRuyxcPP4dd7n0Ibh4eAVBuOlzd9oePTzQG
JB3D/TU/dfxDCYffNbS/t0sGdyOk+8HvHQanuAzf/xfu7eOuKmGXSRbsyTPY
M4ReP7LE78ZnRvK0hQYfLIdhXUix7b2vf8Pwa4K+8Mwzy5G9G2fmVNyXNvuK
bR4HH/jpS4nNf/rE64cEefhddy/tghBuiUW/feRd458A/vY/ebi7/YI9+r4H
7zLZeWS98+I7aMhmSNiBbx/89+T7//ma3/j7458AePf33aUB2u5vGX4H0T/9
Rw/qFONlVhQ2Yvxlfi37LSv2qttccZyi+gySflShqSSSeHWXnL/c5i6yK+aC
6LnEQitjrIA81EuH8y1g9QrCZMzcjtmyyfZoq7NxR4xU0RJMlHUPjm98djI4
YVtZMoVbbrrYnbLNE6/FO3OwC7fXZAjlYwlUHaiN3N55UDZswIpxkECTSSqk
PKD4Zd3XsU5tEjKxb+R4rcI1ep6rhg5bEVLQCIHbrBQ3DkfmgPIwkmrVbeKk
PFQnvF3R1BJTIucE8TbEYTay6kjZ2m6zLC0nF5aUEcI3UQx1U09yJzOSpIsm
CZgpQ70c5yCSL5J6ObMKkcGwm9UVzMhIAvmOUeLEKYYVznRkf8wyQjU1PNGS
MRwbyi/go7q38cRcqfQxYcjsXHQ2SrY6xVYkEaFXXFWStSIfV4nzKyp/Y2tX
1axUj2IcZZYAZldAKlBHbd9wKFedOrV/C0UVwmRuCGLdNrC9VOAVmR3OD+o6
QGQBQuzYWRmZzQgMjB1y0I0N1Y6teM19glmCCohVngLlHA6Yq2JTXdusUvpU
NXEjd4nLW6ITNRIxBcLUdE2YVGmWyxx9upEk6ihn1ZdwSyjT8egyAptQj5yx
EVI/L4NscioxYhQsWiFGmdKWw6ZIVTumQJh0LN+xvE7VfSq7QVhUV0PfSP12
nCXpXu42t2iQoPnJ4G5LeRoH59IpvKWFAE1aVbHK8gB+MGyl4DD5o+ZUaUJZ
qcggnSUNda5RNGrjO3y6YnbxyF1c0cs40ueDdXSklvUknhwaM2ljyhY1LRSm
0FNp1kyEslh6DBXfy3ekBAyb6GfysZpyllqIlZyRBZrKuEah04yDzeSm7gpG
IQpFIU3K3GDLoc/TzVUW6jCmv5bolOvB0LClNmOVlFBIrrlv85qAd8GMTbCW
TI0d/gr26LKauymbxdC2vsvEClHryEHrOuTAUAeivuOBV+cde5WIzU+mZwRf
/PRbl+xpBwvDL7SZOr79m++65+YNSIdpBe+9nzg+8COvM1g29f6/92ysQmZt
/P5/z9ds77n3Bj+q+OKnHxhQ5V8NNE6EAKGQ8eOS8Sv9x6PY/z/+3BszPNRg
cob9fzP+aGS34eAO+7TPP//805/93HEz1ruXw2WPP/GE7aV/HIAYK4ZfSrO/
4LAPLOuOwwbv8OXtYYdconwcR7bc7ee9r3/Dfsz9pKpCm3Gz/UMfphI5mDfs
A3+WObn/uZ99f3I/GpY5R6rQhranWDBmg1YEaRXa5gOGT4/f/38iSL2TYcDt
cIENVZaGpf33ij1cTz71lCby0ccPfXhAcu8UqcpIAL/3gLNk8ebm6+8fPh22
2T3NH//QE/4cxJEcK50BMoxDl21sBToSbHhSs5/38L8A6PzqOO/wvxX2nx5C
AD2hjSl7QLBHaQ8RJj1cc3i+MGz+73+O6Fm2sguH3/tEjCKcnaihLpB4dpvf
+dwhof7llx95z8N3D8djh593+dvhuP9Nd7jN+xf/+JNjFv/Gp9/+Pa+/Y39+
vd39lcde9+1/Mj62+w/ffxOSi8NXSZsPxt//swnXfPf3vOp//93D3xH+0z94
7CN/43ted9/hPwHdcderHv+x+/7110dheeyRu7VCDaWElufcJPcBh61gwm2/
C0vH42SGX34vNX4uVhsIndEJPU95/io2s7yA0nkZFXFWVadlrIlAGOGlw/l6
WL2iMAmyr/OS+4ZG7orJNroxvIBQc5FyhH0Txvjc0Uc+Y7eNIHQbxdClhpdF
QHXlA/ZeQbyOqBxBoDhSm2TD+OnKPl2xYUXItuGjwSSsJhgNPgDXNoaJEFgB
AeUShUwtlO5urCM8Y3CfuTGOplSEIhH+KHzYbVt5W+6BkE34DWLkoYGPW52U
FwVEAAkrEU9aLGUaDyhRkOwuVLdjBxnqZANfjNB478czMgHgoKw9u02ai8pr
ZovMmyjHGdexp+PFK6/yYWSRRwWcs0ASSmLtlq/Cp7CQx3F8GEBWM08uAJI3
ExSWrY6gXO0Iok6D0il6zFWmaB+g07wYVJqup/BxFoQNHxZMBjOJOZm6IhWi
BFQ96T2JoFeSj10AzQQk0iDs8rFoM/04mzhz9QgqJ2wnxztW1IJj4IzOwiEA
8ztm2hSXQpkj6ZDQSHRW8RaJeLUeUbrSFCt2ivU8DbWCUxVnnBsgc0hMj2mK
lLQZA7t4lw+W0OMVIoa4GU7GQrAqBcf3A+2jlYPTGyv4I79L5NSdTUUQWcwh
yFixCIgEgWY8bLcV/gN8soqTBVmv6EXBjxGh9oBTmLKeXyMpWK9igWBrdedz
Q5arbjBQsehsBJOYUEHtMVdkFKWqBIiHFaxUfjtzPOU40qdTHMRIUIv6DUio
NCcG4CrcyHvIHYgtgi8NA2cKAMf+ZKdSxlWM09mHZXZRFeCQafWZEnkSnCBi
IWuiAmAKfe4cOkajdxxEPF2JRzzpVs8HPJ0wW+qNeZ24ibdw1+HXe2pwk1BB
serIVKYKCc5KQkzzosxpXWPvMmM7jQJUC7onUsCUFs2xlWYoB2WPIUkHB4mf
SHMWB9qM2kZWTKmTNGYE0Vgv0oy93g6GUIqNxmwDUNyHr7qteE0iSTpG5knt
CBpCWRmvFyFd+O3HqcPX8g+7zSwa3eaee2+E7fdPfOwNSb5w/OQHboYxw/HV
z739nps3FlzXus3iONp19v/HUMb9fwg4x/0wlzue9v9J6I4/w1OM/fWLbsNO
/eB77lSc94Mfge3i45LhMcf+Av39Pxv2nWm/SBbunVoAXlaPAbftk089Neww
D3859+nPfvZ4fG7Ygx032I9TLJKwD7u4w0bxcOMXnnnGbzxuaDN5UB+x5S4Z
dDSJrD26s8Vmuyjq5vEP2f6/nh+tlbw+vLUNbZXxbjMYs/954jh8EZ2MHE36
0BOEKtm/t83/+4MSNVbA4+tPfupTOQQJSZllCMHCHo4Mc+1vGe7dDzIMuLfc
/nfAxkB7gnCgjoXl6zgF/ptApSG/8NTHhyl03q8Pxuwtf/DdD4tQS8E6zDJg
OFzsI7jLe2odn+CkImIu7Oc9Ea8nn/r4IiA2Jtoh1862u//nG49dRSs+8/G3
OH/2/L/zdbf/r/QnSP71198z/AWB4Xj6776F+oekwMeDvv//GmWFl4DNW9/6
2v/7a5ALfv1vfv+xv/6j9/mYKbU3OacWdn7BDOy37FcC6oXdW8we1X7h9p86
f7V5eYQT+CecF6HGqRDxi5cQ52tj9UrChOQlKADOLPIsXTXUWOipEZV7MbIp
v3drAY0BUi/0R+jCjI58HeituOzX8KTHcumzLOCUoecA9ltFcruU8UsYN3JB
LzIbcmrhlodOry9HGx0Bzt02mcG8EmsXiNSWQHYkiWzBvNBId5mlXGGHZsyq
vEcflmxrxGTBReGTTp7XbjET2eAFxkxhIoYvaGGlH2VryXd4jdq9GH3PoVR8
Yh4hiEeVIMyjd9swY27PlKUJsRhfitGYIEf54gVRv+UbF0zUnvjQbaNHMQvI
Zr4rCtF2IR5tF3KlJmxvbT+GpdALr5ghyh+SSkhTxDnn19bJRndpmhxPLnq2
YSt5Hc/ojHl1H42poh+yvki0QAnyVFVXzKjkF/Htk/HB1FT1FobMIGUelIWt
7Eh5WIGJSPIiQkRVppLKXu1nC8epTWMVHCLnVjST4yWxSEEP17Bt0KJJ4mGB
7yUVBMuUkM0E1X+RQRoq6bOU6a2l5GYZtK6PDFnwLEqGhRCb4xIUYzua3dOM
nacVE0kDRECNksVO0WvRiqyovQC7EGeB2ELbLXJcOWYzqkDpmM75kD70FnHs
06esz5FjpaZ5vmxhuYyzIdzUYNCmrnTKKJ2x3wSdj3kU79LZoXIWbqkX3NsE
JdQzRSaaAoiFlTBKd7SVQGfLzeAFCCn4a+IwsAPxtn4eRccZFYVaR7YALbpL
tGXKnolCw3FhLcLPRT0UJWbnEq1NeD9uBUxCypkbKZRLW5WPfXhdaaYwbcsG
10tjnR3dbzcsNxA4klCmpZeAbXKKLuiDy1rggtD1cheblO51iWNtrIjRE56k
WvXitAsGs7QqSyMOqZhy1vfpU7ati6ZKa9epPXhBUwc6SSnZLERh5HbtVcYz
WBeomwExqmVKYwsHH3ySnSKaHb6vLr9a5z2v5QI6XPPFT79Vr7kzxl3ovbnn
3ts/8+Sb+E/9/n/H36Xz1c+9/bB17474YVb9/E9899Tv/AlG+gh8y9/+ie8W
uHpMxHbub/db9u6XLuxN9Wv2vvAth2/1Tzg+vM6mBpx5NcGxWFQWHn6JkNMj
+TIcxy/eY+t1+Pf8889/6be/bFvc0Vr/+VM/+9Hyxh9+3/sXaX/PDf78M8/8
i299K3Tdi4C24f/kU0/tLz4MqOmwP7M//wtPPbXsC78W6YVv44cpvnA05vTx
eboxmyTwmr+Dj4fv7acQB0/3Lx5898P7EAz/ayAguf9okfziM/sL9pcNu/H+
bx+UvZHEkJHYA2h727xLLCkxwDV4nVg66tWeNnvogs37eX/hOG85po0DY7Ll
X/v614+s2+YIDjYPLpw+nlQbeNL96ze/+TVX2fzH/j8d/e27X/zYm3hPfn/8
0W+9+8d++N4c6CXNO5yR3/+TzFsYhR58x52/9fQ7eYr/458+8sXPvP17v/cO
TxY1TIX6JGFORKfMnVu4dzF9F7flXObC+avPu1CET+MfcF6k27MovdQ4Xx2r
VyQmYWkWsYotTdArcz8vIk4Nu0hwnUSY1gJJbaZuLyU9XzBlhliY+ny5Pi4G
T9k2cWY7Ebh0DTMhDFWQMK6GFhPo1Yc2BkttUWScPo7JVgn45XJ7miQVaJO8
OnFmKjevcqNaEtv18vxVOHD6ltKwCXGYOmTHYBGjGZnD9bf0OjubvJMlW3Ik
LpdOyiMblo4+Grmg8yU4Jdun0iHIqQzYR0uWlgIJNAFhwrBTOFSbJwJ1cWMv
qbokoT6d7LUipU8jMtXaYYLzspR2QqYQhFV/bbyzugxu6enxFqkjmKLcf0vA
5pBdqvCnrUq1I20FVNJdCv7puU5zchKuywQzUKs0ICTpwr3u5fYpbZ+qBbQL
WmwITIXpBFyTUPTFLXX0e7XTHIxQ9NE2v6xUDyNGXMAmG6qELa9U2pwmAB3B
5uqavrAk06Caom4yyzDlrA+YBMIsYlHwfcLLcOj1WXx1TfYrgONCNxWOaG3J
+aB1vUyN7iu1YYE20+kQiZojGE26AlvYa1zjJEn4l9EvJahEJg2C/dKp2E2y
LlfeqkZMZOtVT0aedNCQKaeiyCB2If23i1O3xBEmpyturCX6hKdZik/w0HGo
B5x+aBWk4AQlSstDUHDNBMEWbG1yP/DnBCsWXX943R7Pt3ay9Sv78d422NnT
sD0usyv9ehuqtxl7H3+BoY63t2LbeD3mHW8kNw93feBHXrc/3vHWVw8mHa5v
+/2xMJOGW9w1fuFWHa5pad7xtfs+ONsrAqPj44yKgCAj2JoXrYNzNLWl2+1i
+xRIgmPtxscBPi2B1vbm12BhsA1RMNd6jBk4QKHfH49/6In9cfzyNg8C+xfm
8kLhwo3ELhukl9CHoDPHWgsZZud7nWZudk+0B0RkYT8yYbShtzPuvo3fOhNG
kyhhcZ4oNEzXe5Yt9UpJE+cJhWA58kSTq+UQKFGBQAj6eHJ/y3Av2+8XjFSU
vGbpEB/xaeu3FzcOF9/7+teP8xqYmuyWJu2GY8EiMFg+PE+Bs+0IEYuVwR6V
xHSm9zHH692k0YaeE21MsdZv2SwMTCchpy3L2utu3v6XH737oXfeeeM1F5VU
uo9QYJbW8jyL5/7nnffcvh//B77/dfd91+0cUMJkNJiFlGVk0V7VL8/WF3iv
izN4TkeFeT9x/hqxoOmuhH/AWWn/ncP5+li9wjBZqBd0I2zmOpgUiZWHqrm7
BgWGenO+ky/AbemyRrAvOvFl4VC3jIwXEQGKPmI5MqFWDCmUInEMOCEP1UXP
Y03FEqP5pwKCUKuNJ4VywKoPdykTkqc8VItcjm1S4jlbhfGpN1sIJhupGpxx
Gr6FhV56S/GiOBYqfV5S+UZlJnunSWG0XHTUp0mr4yb1I2ipoVriSmHUkgAH
l9poQPZ0kV4bRP0iuWAa1cfZJ2YhAnC69cwfVwzNR+lyySnOU7JKlASMEg5w
AnJz2zKpenJEOk9mI3QSWEXaMNWZxsvYIvKLwmUyrOc2eJHsTH5B7kL/qS9i
8uKCtg/ZqkxgRTLKqXkwjIPb9mGN40PJ4Fz7jMwLvj4sCgA7u9xbXVA3234h
7jDCSSpL4WVh5BUZks4zBSsLKdyhLBJdR1pq4WaSLCQuWH2Pjmv/EHxxS1Q0
+gXksU9X9kItxk0X0Upsv9fi7qEUiqJ7YSYESDU3lRsITRTDoPAqBR5ZJ39P
i3dZJtiK7FSJjwnYcckgG1qwkfEEYmkjYqEO2lsGKlRGQB2WacTkcQ1Oq+lE
1+SRx1RPSo8RzODLuFuzRbesL+ItJOkQT58r9aXBbC+4Zcl2m0OWQdYIh6Wl
edArTS6Xps2iVabpqpzFTe2JPT9yk1KMpFiKaUXOkLB91CtCjBsPzmIBQd4K
8Vy1IFwokaoYnbCOFuMUo5w7EVJ6KyIAklPGCXpBoqUbiVU76ZiEb+Qwum5i
GmOeJAI0WLT9kgQQ+WU6gKC0cjulCbUHunhZuqTImkhS2870XDpDz7YYl0Wa
quNqS3RbYq0rtciisBh0SpsxFXni2lbWjMhZJEjOCyDg54mxi2K0wHnEsUg0
VeO0SzZKrq/BOZHzOoh0T7NDg6ttOe1kklZ4p2dNSO+rXWsYGPleV/HUUbQb
J8OCkteYM9zoywcS6jFN3OzeUoMaD1+gtagOyPeWVoJSRnufaNEiT7nxGK+h
lSC8aN131pYesTNnl2QJctBUzi3kdbf/9NbU9WT0LiwSkbAsApYsvG8AX7xw
u7+WszSgP9FYtBroTgxb+BkegVp3gOzcwBmD2kho7tuZ1hniWWZTd70Pa2b0
7iBXQE4NeusGu9c9zw5CgpPOIjIeKMleEIxUbgMBr61EGJmU9Nku8LAiiAse
k9oGC7SzXWHHrlQP1hGMphiRKpbpXAp7Rw8a1W44TCYRkkokULGFgAKQJT6v
+eV88IR1lHCj1ylDMuoPL51cdhZIGV7pIK2osKrmSExJeEUrqIq5sLvx+tps
7jEv6dXE+bGUYIfQ/eJunJscWwxaOHj50F/TL2pObvneljgJPYQIB8xfuli8
AnC+JlavPEy0QKNwd26S6LBKHDbPUXAdKGpl09YTmoGlwIgChI4IWHkQqXno
XC5otY6yuyFtNKDwgoZlfabWRfZMUHeMBp1VAdhPo0lv5oXD08oaNjNj7DRa
54P3MCCMbj6gLntpg+Wtj29cRWthU4DVCjXKELpZlXGin5cPqbyAekn4OHW9
yeQY8UpnSTeONPZ4dbbSYdfYVG5uMTsaDOpmsfJd+C3cg3USSspW71XGrsCu
R+O0bIGPc9WYg2InnZK3SaQVvn20JGyRKS4a6MldWJCndMvGPWWeuOws6QWp
AdJwSZgsffyOou8zolG3cfzbQaKitj5yAXHds54hiK0DTkpIgFOecoJ7gnBe
i4V+AVIJerWUWyibSABJ9mXtxhItnZVIh39q4ePFlBLSMoi7KWnP0mLTlNBd
8DQRw1DLSM+RicJGPww9b5IhDragk4UM50gXFc+Fl1dJkps+VCvoLQlzVwaR
tTEQLqq90S/EGhD5BbxiYlMJai6j3EswYeQZGRUIjw6pCm9leDVhX0yTschC
zWWX+6WEFfH1zFq2An7KNfRCXG09d3gVRmzn4uIl1cnjrYLLKVV/3A4+SBvQ
EXO8JEGlqaLBF88ILmG2p8fjuNna7Xi+L1vhM6uuFzVsHXBakfBauLkieEsg
bQZMpS7O3Nl4pCgjLIMgniADqbpo+xLE49aFCqjquVRYVGejHJ9kOaW0XXJG
i9RTkQpV2JWcFBiSwiWD2gZQ0XHoGIQezYkUrOACbUSg5PGkyAWw3aPcYUx6
vul6Qv1SUFfadtCK4FNskPIkO4tOuI1mGK0OZa60AZbybSCDspcyBQWCshUD
Stbb1KbGlEE9+eU1yBpR7jc8ASkW3v5JgcNOoBdlfuFFs3e2sD3S8aoLLr8l
Y3XbR6qblgnnA5hJnOl5QKE9G9bxT1wDqSeZdWp5uUGlawkNES7Qw2poCFNP
LpNSkV+6khWZYvWmcoAZtY3fWCsCCYUicY2GC57FKDHEN+kraDmABgmFnqqP
JDKYQ4XSF6eOpGidyiOb6tfIoQmSrkQbA7Vktvdx8A43LuOkxWVyXgLk42xg
SRe9WJbj+PhdwGezzN51Ygy2H3nMjkfow6cBItTHMEi0qicK9ZS5GpoOr5f5
I04oPtAGkGKIRxWAkJQc2cwfT3Bv5zxfNhOzUILIOCT4EWcXN6I3WasrRycM
mS24+cihJEWqUCdWUVTyblMEWt5CM4UGLUeQ2ulAcpiBRKYlrfNHLlBL9Hw3
dRlRy9Itpn9XedpVZudPM+Xii0zUyBaq/nRSJgojdAuBSAxbBjvDizZd0AVU
42vR5Mjz/pLzrT95wURSfYQPZeCQktfw69buRddEGddFMcxkkOx7sWNxJfy/
8zi/MKxeWZiMrZpdvGxLBzeGCb31zK2aDZvXVetES8OmsoPeaBksvHxD4RtP
km3T4ws49FCAIg7F1rDSfkWpn6Z+HQ9oCNvJZXmLNDyRD+NoHUeNzEB0NjlJ
bVLveCMtaUWpETTksVvOK2hhstjptNTGbIOT0sBsJiiUo+bXKw/r4jJd2gIH
WolXMWM9Jq+mJ49xlc1wORmKoG9kOmkSppRHFw7BpI7oFHWAlmC8IJWLFeGc
v4LYJnK7k5/LcBLdBXu3qXJqQm8NnyWPb6+Fezw7L9NCfpWvpwggecd2bgT/
Ljkl159iETYAaU9Ag56wgibIgycBEy9SQ1iokHIyBkWZ3LHgJ84TRZNJAcNw
l65BgnoUfMhE9bmqcVgTtCZKpMroe6SCa1hLCuahyC5LX1gxuo1cmRNhiLW3
N12ByQJLJyKSDihsiesvjj4tCoZDegYf2Taa1GslG1dYbJUvKHmL5XM0bLOI
uk37mYFIuftqeYNIouZX4qEAp1Uq9MafxGpd7y8LX2QRHRU7U450PlXzMBdt
T/HUKbhpBAoQUyXW4jIcTJiNUYLaNrRJZU6BgUUd92o42dBWdV82diLgQdYC
8/OWYIE5CU663ceU53rZ5aXesojua1mRKKDMKUUxrMJlD2fVBXTaaDxgBqPk
hrECLIrHcJUUC5HCp6otkhQCRW5FJtYsFdQdDSi0LODVFUdub6ypjloapuY6
7pvYym10JpE85OBG7NfpCHx4hA3zeD0/nWEBJJDt3rhXQxFcVvZIyAImvsji
oSS4qQZ1m2WItaPHkkiT+jOppRSySjEKwvTLuEajkSNRN+o7tQpelznQDlom
mx7z6uTp4xZueSnHqbG9xePFQ2l6kCmDX1RHXgIQki+bdOYaI/CNNbzdxOAv
Y1he+DGJxvXHSScvJRiK3fVsiMjc0iDXMfWyVLouMi861Jfdck2dmRefbq4/
9eaFRORW7v2OpMwtxOI0/n8+OL9kWL3MMXnh+VhZeAWcXyzATy8HXpbHaaxy
cb+y1zrIqWvGRvclqexXjuz85NsXju21Brxqnr6osExl/a1Pfb20mqbZNdNz
Xo6ZBnlZdJK3asZ8+sUVBefyefMy+RbG1BX6ny/mefYT9ry0pnaXzPICWXHN
y64Y4he0XL0uP6/u1C0tcG4F5Hj9i9I2nMyysoK8WIupiXHq3Wx6fW1sr0vy
W8X5pGGnB+kuu/3qLlzJ2he+Lr4ini9u8ykPFq9jfNhOf3EcfDEy4kUH/Aoh
uPV+5qoXvFBlm7L85QJpdZxE9Tu/uLhkxu6q41z/uLI+N93hddMPP8f9Rn/b
HF8f3nbs0fFnN2+60cHmMsd9hHE0v6CDDeOV+zMdz8ijsT10Y2eHmdd0fDtZ
6Fd2boD/ZNeiU80ATjfakEyK+7R7Lxo3vjvaY6C1+AjTuXlueaMXpKjNG3UQ
n3YRusbx7HS0bh7v9dejJfCLIjgfoBB8umyn2t8FAgjCxwHnfnujw47wGoaN
U9TsYeObfp7YGI/GAjdER9DowmWM1Xgkdo1o5HkbpqjPS69bsqFJlJNwSNbI
mYYuM07KlU7gxoZq3PFuervMryxMMgXw8LGzkVFztVA0xH0HREiWRaAZjTYP
9jRh3s447GNy1jNcEfw52WlHZ5nbBb4RMzsJpczS6esu20AK3LnxiGN1XojU
9BJrs5z1jTjpcF3u1wu51+kdKUoZpDWoS5i/FLG4Hv7fGZxfDKxecZhoansC
2gWoCFI0uZyFWilzjULNuldVqNHgwnLB3NysUoNFcnQByTuPJin4eq+Vb8NZ
Pyqa/KZLqkuY+KdRCWMQ6YXAXoVpZNo8xsvv7YjSHYIey0dVMVseChGZo6iJ
d/MY+jq+VYeW+RnqHeVdA2rBkSaMEyIoNPYkJS5hkJywc2pRIlxUxEkZrJYJ
jXPgvFXrQ+5o/RXh5ctG84yi4gLaAC/uPbuMxGlisObyGvlI3O6kwbCOWpKL
PAUbG0io9eEnqKLAugDqCgXcTjmiq4NuTEDjzFzysfP+Fi/GWyBEc7atZft7
NmPOutpMNpOO2Jzc1CmCF138iCJodJKgBD7HHG9i1ARqvjG89eg3vvDswr0R
gTAIml5LBwNNtD0WR1wQhagJihFgR3Ug5DumXygQ8zaB08QLMtT509FZyRei
DWcWj58iFUJQFCNXACe5LHVDUDRT8piydotXZkgXFVYLnlqu8dmpf2DmNIiy
uu+LULuRMjpVz4LGUWkbMTgr7dy7gqo+WjXhAWM3AhFr+ggamRGnEN1I+FNp
mAOBoieRlrLRYOVy2YS3xoTU8Ey8Nkls0jVhZCF2R0RVyznTQ2SHzoflrhFB
0Cl4wEDR0F9xwfUeXnd4OH+TF1PZQUHn1OtM5WjfiRu2SM4pDMHGkI/zVF+k
IGr1pNYlr8Sp6DNvc/p74Jqx905JEYFK3bVVBL1Ym2QI/hxecONEzYam1aQI
MG5xyVB2HeUFslgzycpLHsIEBvBlHR3etHBOMYeplpE4uIVzNixyqcM6IuEg
I4hexesTz6Pqaknt5qGhaqRIFcYnG4ROTYhIqbS5KZqIyGih4tBQOFJbDtlB
P2Ak5F3T2NJ4G6m2aVMx6Pzc2qQBeWfX3DbqbSU4vB0TUEczwSE6zWEtydFw
cWAd151UWeZghdvTwzCT0+GtUWgE1tGbN64e3cJcllW/94oyGuc793XU1ftQ
jQpUaycHdzC+L1JAV1oKdQ6UXTlC7S0KGN70CxrQ+ePNIboa9wL29IYnd02d
RxN1CprppZA0pPFK2rl4jiBYsLjkwZ2GZuFgAUMjDBqGDtcb/tgiGGfs7AET
lQB0g2A7FXcjFfg2DjV3wywWc/aIFabxqS2OreWU2eMEXrinDVUTu3KuQ3El
XVBo7NPO3w5OzVviM8zQBqMhy+1iIzPijlLon5ryGJj0dMyTxeOiLHX6oXbT
7UYkRcOUxJNlYcFCF9F0NDU9ifMWCzgY29lU3+ki6hrfuCC6QEXW0RYcdMAa
GxHPOTHfh5o679xwqTFYelNgbw4tg7iHuYZfL+ReixqpH7HLCoQLSOMcYP6/
2LG4Dv7fQZxfOFavGExsXl53I98XrlQkQdzAuNi6GpiAoytwRSJBJoTRwHAx
BW6j+6ZU1L2QmEir5t0LnCU7vf3o6S31S2HzAZ0VBc4DxMWdeycuGY31V/QW
JGkhjxA90Aw116Tb6o7Xl4Z6HoljxxdQXeCwWtFpZXavm3MKq3cOttKUZmzO
98JapQpzjBxH89lylDthCBKkczz5/Fyh5i7F3bcCSg2MG+Y1S9N/LtGRXl0y
y2ivGyCMqnQRC+RFR7W1x6ctbXG4F2hBwWR+4Vkw9p+iCWgjA+uo/+nBT+9e
yDD0IWAyetG5V3muFy3CLaWkpZjyYgThcON9HTQ65alq4Za1DOVjFznGEud6
5Z25bR8tOCh0u4feljm9GNOAk3OIRm+SbvdS60j54m2wcaZV23ihR1Jsuca9
mVcZSlgkHeoXKZUXII0vz+WFowXruIujuzoOn6ZGh5URiY/KoxuQw0el1n2B
DlOumYDPxYWkxgQgZZkIFwk1aOBb0K6TVumMw8Cf2wPKbuqsSItcHq3io/3w
vO6dDwYsyZR/JDUixysFCPlu9RESRNKNzKIQcGikZ0bppBZI8hchtrpsNEZL
QNrLImPhI+Y4xyCYrpZUhsxCV0vIOFUEWqhSG4PIekxJHhmcudOeOihuhEg6
wASUcslis9xbLElMo5blO53h/tMvJrVEZaGCDsXuKF4S8YgwNM1Tm8uH8Rw1
DpzhlLSaBbkOnAQIDQUX04VKhMQkN6HVkibG+QXZie4oVFJPQyleVq0appM3
MOZIQ0aSU7xjM6fIOhPm9HbhZjifwa7EdtdV70BMYZy3JviGMC3MOQ1BKu5n
SNYWbh5KBssaudl0IIaXKro30A/BZX2GHlrbTwFdJN9D0GlMb/kggwuJGrIV
+zlNjJ2RVig699TmzgH84WUgbKZeLqWwJp21EMxSr6Rc8nr3kbosqn1KSGqB
KEDA08nmKewNMK0gDB+PJvqBFiEztaR+qYFJC5qIQtAz31gPHSUVGUr80Lyh
0xOtczlyT31tgjTHAo3bFazCuE5584PWBciEpObOvLPeEiWJ1j7EMeK5iCpE
EqpILasXPskUqBkLJqLZySBgRTKPkKejpxe9emdaJ6B5fekEc+08XeGponUk
DjDA6eeXLaJVXpKMtAEH4uqcLtAzPflihiE0UEu7zCsvFX0kPhnZ9iHisVVA
taW1G2m789+l3mnv7Z/LjtkGk9CNUKldNCAtC6YLHfPQG35oGuOJtkTq4CKM
zy0oru+Ts57UnXrNLsBO63hv1V8XCmq/4YW1fDy1d+9cWQwcMIrzCBoYZgGS
YIIkqbjMcHXpBbomJDVTBRXQexvqVSw9XTR8DYiKxma04qBqIKsW65IP3iMc
4IP323J+LvMKZzynKGVUGMG3njGhOOJGVksYABpbD0Bjyr2qzCKMUDmaVPtk
W5HFu+YBmRYjqB56iNFXWBfHUu9kICO5lTV5cVWk6u/g9xICcD5m3AK3SFwo
VR1SMukymxdyC5qiRdNRcpEyaF6/ojBBUweGS43zXpRWfA16UaogvWom6siC
YCQRdo1FW0is41VSrAVcnReOhjjlzaT3ZmC7hZW6kZBclPv8KabmAkQxDWKF
9gmlGR0pxL+xhA0jQwOlD1y4gy5QjXrqKLU0vkhTcBZNDnXLvfRv1MATDhbo
2HkaH2J9gbMc63kDUonStgKORAdtD+3e0MhMe2NRzyA42k57LyK0iOgpEIiX
JDuljAeLikLPI2N8Ii1lHxdZymvSZOO2tMq+gmOSmHlj40ch6DULuEag37OO
RdpymlFqGfvOlUIwl6JDwW20NqWi5vSgYt3HCxxV7jCTXITZBSvCPFw/F2dV
lMRmxIXzFzWCVruxRsc+RHpO9841xPco5r7Qdj6ThiwoBBwpWm/2QkXuWDjW
2uBRCvQydZPnFQEEJYjP3tm6jqGwUgTtSmgO049ThoWOveB+hi8IErEAu6DJ
3BJw6lGwVOuY7bRe89ek7VLO+ErNvj5MxG2bgs/tRyZV50EPJcwqSymbvlzF
PobvV8QaFNOfmn9uXVwP47pDFtoCKa12be+04zUUNQ9FOERPnIQt08BUtO1k
sYzs47fYCpPGpiEwRzv7QAniXtwVsaToQQNHXpkTFjWs/0BY4c35kpoBPy/t
KxcpR1uYrNs7EjhEIek2JZFYaC5TpoeGBLMj60NJkiVPz3XcHLFS1TrVUb5D
dtBHloxMgxZd8YJWAQIXU9SKju8oznVSFsy4XuMLIt96dpw0tidCgsOpCFLJ
owwl8Rd2hThi5WIpLFVAOBMaS/2UO3mReio3jdgQU9upJbKAcsnqtDADoI3e
waouIdaSiT6XlzZ5kW2TajJVc3mJBFZ4Uwo0JIis7a2JDzKaa6jlCDVpC2OC
p4CkiTnFemtE6mkEzxGq1yH9WwOQ4i4ygkU3ygqvfai4eGElSWQqaridkLI0
5sWaZoEjKeoKl33pIfyEF3EXyIFyp2omh+BOH7pTFAhTjTlPw6YSHKeIBJ4Y
9vRRTq2U4AQRhYlHJYmnEZuydpE0Njt+OiKX+JXu0iJVzLiohk1TxysrG/rT
cUk39vmjCdeK9puLTnnjhDETIsk3TjCBBWcqELHwhdCEqtdO2TDpbzIpckZX
l1M20L3FsLp8mwwlhy9TN8ivgC9aNB24IFZ5fGFpnVN1Utj1CT0xICnzFY4J
p6yaTyfRRF5PrZ6meeKIKW6TIJckbMuLT8Ml7f1ULZi6dwLnKSrWliQ8+/lJ
Gy4V8KSHsuQ5IcXXt/nqYnhr478sMJmi2Qk3VeHrfZiYICo4V8DktKen6loS
5zqOVwhfsLZYR5884tI+fMpQBwxDdocyMUGJukk77ftJCeoXodM+6exUCBbK
imxAYm8O96nWwnU1CJ137EFX4zi56MRdwekgyr0xiy8Ff/J82B2t76JqO3lN
eeZkO3R5oP3Koje+tB7F0J8siGxzMjWz/Sos5aO0vzKgDXedasYyngXBqojn
e0+Cj7sipAmWwqThxYQml9XnBD2i2mc7MzJV3KduqXh1qg8ss2ZaY8Nlsucz
5Vc5YBER3hO4bC1WBGgiynMN31RoJqa7fC2fx8TbtrhlQQ5OpfOU+DtQOmM/
n17763lz58ReQZV9hT0TOJ8GmW1mWb7U8quwUS/Qvf0rGHkdMZ8atnZHzlSU
OB2IEzBexeZLp4tDTSE2udg/4WzmUtpXPO1gtY4rfV9Mh3KR2qHTN/r3tUJY
L9Htie3EskE6XQezYSV6oUNLpSfsGCMoVdUIenv5FooX95PaGDafY+hlwGAq
P1pNdLocsZMCdXqXqf5OBYVvaopFQfhM2vAEIVwp2+YnXLhUAabS5BQsl41W
YHUZaScL7mRFJgz1sR2uPz++Pm+PL44/z0vX2upMebIbBpnz4DUU9XnMjkEO
hi3O0+3jRy3N0upQ4aTOeE6m6siL8+BLOy+sMpNgQIvRzosZF3p78rqltza7
Tj3NujZRKzlLUYtgnutQAmYrKJ1zjNr69ung1sd5eW+LEMjF6WS8XT5dhEHO
28RPplNQquCFA9JWWcyzJ/dzxIu8YAq1Ez5OzjUYvCivj4AgI6LxV4ldEe7O
GNimpBs8pZPn7ekpFuVccleLt2MWa+hZGQTzmNGnEirIF8+CMxmTVj9V8TkV
l3RxQa02DZumJgQo1kxvGyRoUSlN58dBZAqzrVDO01SpQA7XZBinQBNiBNDa
VJ40mwqNmp7OdTuEOyvhpYBM2zzn6hBtS8hff/yXEyZBCmzAcxowVs8wFDly
ng1uJ95OykKFucFVJHjAobX2KdsD0VgEp3LSXUaexbnEaxFMKgJUNy1FFwQh
zfVuqppTvyGutZf7AuluL7eqrqSZxrn0i+4ltCsO5H7g3JuuNiTdYrKKtTGm
50HG20TaSqI9ypFOHchp1p5ajIj7bSXaOWvaakytQTEcrXmaW4sKnPKjdHJR
XKDFaOjEysqlVy4kB0+g1E4Y2daGlc0eI3A+xU+9PV5TZdypueLIqa+LarBg
0M7JBm4wtNlesDEB4as0A1NxL+89159RV1vYJhheAstJd5J3TR459ELxrpS8
nheEc7DhvEy3zoRCu7UqlCIIJ/Io8D8VboHXhz3P508eV2VCGxyZ3oeJk1Yb
I4whraEYogi+1WXxK1qVC9Ol3deCp5uu0YswuGffYf/hVFIsYNhUDapmHMQ5
5X7WeZaOuBsj4TihaRMnb40zueKnOE4mSMmlslLUt5d8aC/xvbGqVPMqtzp8
Pvc201Cz4ye6mjBFviwqzOlJS0cqYB0uimBV07vUFE0zIVZMbjPGjTvdQKga
yys2IQJ+W4SjydMdfUw4YDv3PGzRxBpaL6uD7FCsF7YnEHe6TrC0MKxwfDFJ
4Mugq/vDKdgnSUtCN3l9XAfxW2rRF1m3J7qyRThZ51fW9nZRnA89m3ZN11LI
srgXbNTrmfzn4Yw2eOftzK0d3h4/mjEIVElndGZ2zlEOzcN+2E46Gbt+dt6O
s/DgulU44wcT41vanT63oJwTPqGVbdq5DqKOjJOSCzBjf3IGNg6AsAK08qKw
zX76p8ePMCbXHd7ZO2/TaBrHKOkt3JQIMo3bI+aAS+LS0PUY7UCJmc94nG7W
KHTNcFcrODQ+UTu+kNwnNTgn1wiK2TDROc1I2TeL7G2BJOMW9hk4PUE284sf
eXguDDTwSQtpJXaN1/jbFiBzUgRBEClgogKWIxo2oLJoBvf9I8uawDcydUzt
RhlCLicZCTojXnOVn51TpIiQGkQij6DqWZ8QbsKBu2bn7iBHP61MCVLkdeBS
EIHwUaMDDv6yIERSMQlbvWV0fNYQ2hSyAupzbDPOHKWofim/KKwzjkswPmZK
K6CBTgS1VMm2cr+L1jadfkTZ51kZoubuRL4ZmKKxnbjAs5ieYxbPGriZbON6
wZ/K5kPFDSYwm3c+bTNHGd6FcbSuXWv8lwUmGR/lm+cmSTpStS6ClZvG1VTj
Ij9nXG2Fn+0swM55Ld6xRIT60kXbzr2h4itbGT8gPPpC6hdxjvVCBMQ+mnmB
CBeULJIEh6mzMQosszqRn6dhiWOGKso6tZ0sYoJMRxOR9Lk4SKUgegS/hKtE
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
                 
                 "], {{0, 69}, {2048, 0}}, {0, 255}, ColorFunction -> 
                 RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 MetaInformation -> 
                 Association[
                  "XMP" -> Association[
                    "BasicSchema" -> 
                    Association[
                    "CreatorTool" -> "Pixelmator 3.5", "ModifyDate" -> 
                    DateObject[{2016, 6, 27}, 
                    TimeObject[{9, 6, 41.}, TimeZone -> -4.], 
                    TimeZone -> -4.]]], "Comments" -> 
                   Association[
                    "XML:com.adobe.xmp" -> 
                    "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core \
5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:tiff=http://ns.adobe.com/tiff/1.0/xmlns:exif=http://ns.adobe.\
com/exif/1.0/xmlns:dc=http://purl.org/dc/elements/1.1/xmlns:xmp=http://ns.\
adobe.com/xap/1.0/> <tiff:ResolutionUnit>2</tiff:ResolutionUnit> \
<tiff:Compression>5</tiff:Compression> \
<tiff:XResolution>72</tiff:XResolution> \
<tiff:Orientation>1</tiff:Orientation> \
<tiff:YResolution>72</tiff:YResolution> \
<exif:PixelXDimension>2048</exif:PixelXDimension> \
<exif:ColorSpace>1</exif:ColorSpace> \
<exif:PixelYDimension>69</exif:PixelYDimension> <dc:subject><rdf:Seq/> \
</dc:subject> <xmp:ModifyDate>2016:06:27 09:06:41</xmp:ModifyDate> \
<xmp:CreatorTool>Pixelmator 3.5</xmp:CreatorTool></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]], Selectable -> False], DefaultBaseStyle -> 
               "ImageGraphics", ImageSize -> Magnification[1], 
               ImageSizeRaw -> {2048, 69}, 
               PlotRange -> {{0, 2048}, {0, 69}}]], "", PageWidth -> 
             DirectedInfinity[1], CellMargins -> 0, CellFrameMargins -> 0, 
             CellChangeTimes -> {{3.544379162237352*^9, 3.544379175555642*^9},
                3.574009622854604*^9, 3.5740096771925993`*^9, {
               3.581868126615425*^9, 3.581868137389792*^9}, 
               3.6119448864400587`*^9, 3.644332879574626*^9, 
               3.67602184800485*^9, 3.6760221842131643`*^9, {
               3.676022245795371*^9, 3.6760222459531*^9}}, Magnification -> 
             1.]}, CellMargins -> 0, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.739193, 0.750317, 0.747173]}]}, Open]]}, 
     Open]]}, Visible -> False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (June 15, 2016)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 262, 3, 101, "Title"],
Cell[845, 27, 301, 4, 30, "Text"],
Cell[1149, 33, 258, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1432, 40, 102, 1, 70, "Section"],
Cell[1537, 43, 214, 3, 30, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1788, 51, 106, 1, 56, "Section"],
Cell[1897, 54, 946, 15, 95, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2880, 74, 115, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[3020, 80, 118, 1, 49, "Subsection"],
Cell[3141, 83, 72445, 998, 3486, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[75623, 1086, 106, 1, 41, "Subsection"],
Cell[CellGroupData[{
Cell[75754, 1091, 100, 1, 39, "Subsubsection"],
Cell[75857, 1094, 4619, 83, 560, "Input",
 InitializationCell->True],
Cell[80479, 1179, 70, 1, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80586, 1185, 102, 1, 39, "Subsubsection"],
Cell[80691, 1188, 4236, 77, 408, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[84964, 1270, 100, 1, 33, "Subsubsection"],
Cell[85067, 1273, 5017, 90, 1015, "Input",
 InitializationCell->True],
Cell[90087, 1365, 3723, 73, 411, "Input"],
Cell[93813, 1440, 4203, 78, 495, "Input"],
Cell[98019, 1520, 5472, 94, 1083, "Input"],
Cell[103494, 1616, 4537, 82, 789, "Input"],
Cell[108034, 1700, 4958, 89, 894, "Input"],
Cell[112995, 1791, 8011, 128, 1839, "Input"],
Cell[121009, 1921, 4516, 82, 810, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[125562, 2008, 102, 1, 33, "Subsubsection"],
Cell[125667, 2011, 3695, 73, 427, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[129399, 2089, 100, 1, 33, "Subsubsection"],
Cell[129502, 2092, 4181, 78, 779, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[133720, 2175, 100, 1, 33, "Subsubsection"],
Cell[133823, 2178, 5627, 98, 1220, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[139487, 2281, 102, 1, 33, "Subsubsection"],
Cell[139592, 2284, 4610, 84, 847, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[144239, 2373, 102, 1, 33, "Subsubsection"],
Cell[144344, 2376, 4983, 90, 968, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[149364, 2471, 102, 1, 33, "Subsubsection"],
Cell[149469, 2474, 8040, 129, 1955, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[157546, 2608, 103, 1, 33, "Subsubsection"],
Cell[157652, 2611, 4547, 83, 826, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162248, 2700, 123, 1, 49, "Subsection"],
Cell[162374, 2703, 2058, 50, 123, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[164457, 2757, 112, 1, 39, "Subsubsection"],
Cell[164572, 2760, 4279, 115, 256, "Input",
 InitializationCell->True],
Cell[168854, 2877, 862, 21, 123, "Input",
 InitializationCell->True],
Cell[169719, 2900, 2117, 50, 180, "Input",
 InitializationCell->True],
Cell[171839, 2952, 259, 8, 46, "Input",
 InitializationCell->True],
Cell[172101, 2962, 256, 8, 46, "Input",
 InitializationCell->True],
Cell[172360, 2972, 5839, 114, 522, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[178236, 3091, 122, 1, 39, "Subsubsection"],
Cell[178361, 3094, 8021, 168, 636, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[186407, 3266, 464, 12, 46, "Input",
 InitializationCell->True],
Cell[186874, 3280, 529081, 11768, 826, "Output"]
}, Open  ]],
Cell[715970, 15051, 21124, 571, 997, "Input",
 InitializationCell->True],
Cell[737097, 15624, 85, 1, 30, "Input"],
Cell[737185, 15627, 5381, 132, 256, "Input",
 InitializationCell->True],
Cell[742569, 15761, 10242, 225, 446, "Input",
 InitializationCell->True],
Cell[752814, 15988, 4882, 116, 257, "Input",
 InitializationCell->True],
Cell[757699, 16106, 68, 1, 30, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[757828, 16114, 96, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[757949, 16119, 111, 1, 49, "Subsection"],
Cell[758063, 16122, 1213, 17, 106, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[759313, 16144, 102, 1, 41, "Subsection"],
Cell[759418, 16147, 5079, 89, 753, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764534, 16241, 100, 1, 49, "Subsection"],
Cell[764637, 16244, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[764756, 16249, 815, 18, 69, "Input"],
Cell[CellGroupData[{
Cell[765596, 16271, 1185, 29, 107, "Print"],
Cell[766784, 16302, 15252, 219, 124, "Print"]
}, Open  ]],
Cell[782051, 16524, 665015, 14389, 757, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1447103, 30918, 185, 3, 30, "Input"],
Cell[1447291, 30923, 181, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1447509, 30932, 113, 1, 39, "Subsubsection"],
Cell[1447625, 30935, 557099, 9141, 623, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2004785, 40083, 149, 2, 70, "Section"],
Cell[2004937, 40087, 294, 5, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2005268, 40097, 93, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[2005386, 40102, 345, 7, 30, "Input"],
Cell[2005734, 40111, 24076, 564, 406, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

